Output file describing compiled parser placed in refinements/Parser.fs and refinements/Parser.fsi
------------------------
states = 
state 0:
  items:
    _startstart ->  . start

  actions:
    action 'EOF' (noprec):   error
    action 'TUP' (noprec):   error
    action 'CTOR_ALONE' (noprec):   error
    action 'CTOR_ARG' (noprec):   error
    action 'P4' (noprec):   error
    action 'P3' (noprec):   error
    action 'P2' (noprec):   error
    action 'P1' (noprec):   error
    action 'OR' (noprec):   error
    action 'AND' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'PIPE' (noprec):   error
    action 'STAR' (noprec):   error
    action 'COLON' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'ARROW' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'REFINES' (noprec):   error
    action 'HOLE' (noprec):   error
    action 'WITH' (noprec):   error
    action 'NOT' (noprec):   error
    action 'UNIT' (noprec):   error
    action 'REC' (noprec):   error
    action 'LET' (noprec):   shift 20
    action 'OF' (noprec):   error
    action 'TYPE' (noprec):   shift 3
    action 'MATCH' (noprec):   error
    action 'FUN' (noprec):   error
    action 'TICK' (noprec):   error
    action 'PROJ' (noprec):   error
    action 'UID' (noprec):   error
    action 'LID' (noprec):   error
    action 'INT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto start: 1
    goto decls: 2
    goto let_head: 47
    goto let_rec_head: 30

state 1:
  items:
    _startstart -> start . 

  actions:
    action 'EOF' (noprec):   accept
    action 'TUP' (noprec):   accept
    action 'CTOR_ALONE' (noprec):   accept
    action 'CTOR_ARG' (noprec):   accept
    action 'P4' (noprec):   accept
    action 'P3' (noprec):   accept
    action 'P2' (noprec):   accept
    action 'P1' (noprec):   accept
    action 'OR' (noprec):   accept
    action 'AND' (noprec):   accept
    action 'SEMI' (noprec):   accept
    action 'RBRACKET' (noprec):   accept
    action 'LBRACKET' (noprec):   accept
    action 'RPAREN' (noprec):   accept
    action 'LPAREN' (noprec):   accept
    action 'PIPE' (noprec):   accept
    action 'STAR' (noprec):   accept
    action 'COLON' (noprec):   accept
    action 'COMMA' (noprec):   accept
    action 'ARROW' (noprec):   accept
    action 'EQUAL' (noprec):   accept
    action 'REFINES' (noprec):   accept
    action 'HOLE' (noprec):   accept
    action 'WITH' (noprec):   accept
    action 'NOT' (noprec):   accept
    action 'UNIT' (noprec):   accept
    action 'REC' (noprec):   accept
    action 'LET' (noprec):   accept
    action 'OF' (noprec):   accept
    action 'TYPE' (noprec):   accept
    action 'MATCH' (noprec):   accept
    action 'FUN' (noprec):   accept
    action 'TICK' (noprec):   accept
    action 'PROJ' (noprec):   accept
    action 'UID' (noprec):   accept
    action 'LID' (noprec):   accept
    action 'INT' (noprec):   accept
    action 'error' (noprec):   accept
    action '#' (noprec):   accept
    action '$$' (noprec):   accept

  immediate action:   accept
 gotos:

state 2:
  items:
    start -> decls . 

  actions:
    action 'EOF' (noprec):   reduce start --> decls
    action 'TUP' (noprec):   reduce start --> decls
    action 'CTOR_ALONE' (noprec):   reduce start --> decls
    action 'CTOR_ARG' (noprec):   reduce start --> decls
    action 'P4' (noprec):   reduce start --> decls
    action 'P3' (noprec):   reduce start --> decls
    action 'P2' (noprec):   reduce start --> decls
    action 'P1' (noprec):   reduce start --> decls
    action 'OR' (noprec):   reduce start --> decls
    action 'AND' (noprec):   reduce start --> decls
    action 'SEMI' (noprec):   reduce start --> decls
    action 'RBRACKET' (noprec):   reduce start --> decls
    action 'LBRACKET' (noprec):   reduce start --> decls
    action 'RPAREN' (noprec):   reduce start --> decls
    action 'LPAREN' (noprec):   reduce start --> decls
    action 'PIPE' (noprec):   reduce start --> decls
    action 'STAR' (noprec):   reduce start --> decls
    action 'COLON' (noprec):   reduce start --> decls
    action 'COMMA' (noprec):   reduce start --> decls
    action 'ARROW' (noprec):   reduce start --> decls
    action 'EQUAL' (noprec):   reduce start --> decls
    action 'REFINES' (noprec):   reduce start --> decls
    action 'HOLE' (noprec):   reduce start --> decls
    action 'WITH' (noprec):   reduce start --> decls
    action 'NOT' (noprec):   reduce start --> decls
    action 'UNIT' (noprec):   reduce start --> decls
    action 'REC' (noprec):   reduce start --> decls
    action 'LET' (noprec):   reduce start --> decls
    action 'OF' (noprec):   reduce start --> decls
    action 'TYPE' (noprec):   reduce start --> decls
    action 'MATCH' (noprec):   reduce start --> decls
    action 'FUN' (noprec):   reduce start --> decls
    action 'TICK' (noprec):   reduce start --> decls
    action 'PROJ' (noprec):   reduce start --> decls
    action 'UID' (noprec):   reduce start --> decls
    action 'LID' (noprec):   reduce start --> decls
    action 'INT' (noprec):   reduce start --> decls
    action 'error' (noprec):   reduce start --> decls
    action '#' (noprec):   reduce start --> decls
    action '$$' (noprec):   reduce start --> decls

  immediate action:   reduce start --> decls
 gotos:

state 3:
  items:
    decls -> 'TYPE' . 'LID' 'EQUAL' type_ctor_one decls
    decls -> 'TYPE' . 'TICK' 'LID' 'EQUAL' type_ctor_one decls
    decls -> 'TYPE' . 'LPAREN' tick_comma_one 'RPAREN' 'LID' 'EQUAL' type_ctor_one decls

  actions:
    action 'EOF' (noprec):   error
    action 'TUP' (noprec):   error
    action 'CTOR_ALONE' (noprec):   error
    action 'CTOR_ARG' (noprec):   error
    action 'P4' (noprec):   error
    action 'P3' (noprec):   error
    action 'P2' (noprec):   error
    action 'P1' (noprec):   error
    action 'OR' (noprec):   error
    action 'AND' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LPAREN' (noprec):   shift 13
    action 'PIPE' (noprec):   error
    action 'STAR' (noprec):   error
    action 'COLON' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'ARROW' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'REFINES' (noprec):   error
    action 'HOLE' (noprec):   error
    action 'WITH' (noprec):   error
    action 'NOT' (noprec):   error
    action 'UNIT' (noprec):   error
    action 'REC' (noprec):   error
    action 'LET' (noprec):   error
    action 'OF' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'FUN' (noprec):   error
    action 'TICK' (noprec):   shift 8
    action 'PROJ' (noprec):   error
    action 'UID' (noprec):   error
    action 'LID' (noprec):   shift 4
    action 'INT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 4:
  items:
    decls -> 'TYPE' 'LID' . 'EQUAL' type_ctor_one decls

  actions:
    action 'EOF' (noprec):   error
    action 'TUP' (noprec):   error
    action 'CTOR_ALONE' (noprec):   error
    action 'CTOR_ARG' (noprec):   error
    action 'P4' (noprec):   error
    action 'P3' (noprec):   error
    action 'P2' (noprec):   error
    action 'P1' (noprec):   error
    action 'OR' (noprec):   error
    action 'AND' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'PIPE' (noprec):   error
    action 'STAR' (noprec):   error
    action 'COLON' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'ARROW' (noprec):   error
    action 'EQUAL' (noprec):   shift 5
    action 'REFINES' (noprec):   error
    action 'HOLE' (noprec):   error
    action 'WITH' (noprec):   error
    action 'NOT' (noprec):   error
    action 'UNIT' (noprec):   error
    action 'REC' (noprec):   error
    action 'LET' (noprec):   error
    action 'OF' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'FUN' (noprec):   error
    action 'TICK' (noprec):   error
    action 'PROJ' (noprec):   error
    action 'UID' (noprec):   error
    action 'LID' (noprec):   error
    action 'INT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 5:
  items:
    decls -> 'TYPE' 'LID' 'EQUAL' . type_ctor_one decls

  actions:
    action 'EOF' (noprec):   error
    action 'TUP' (noprec):   error
    action 'CTOR_ALONE' (noprec):   error
    action 'CTOR_ARG' (noprec):   error
    action 'P4' (noprec):   error
    action 'P3' (noprec):   error
    action 'P2' (noprec):   error
    action 'P1' (noprec):   error
    action 'OR' (noprec):   error
    action 'AND' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'PIPE' (noprec):   shift 60
    action 'STAR' (noprec):   error
    action 'COLON' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'ARROW' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'REFINES' (noprec):   error
    action 'HOLE' (noprec):   error
    action 'WITH' (noprec):   error
    action 'NOT' (noprec):   error
    action 'UNIT' (noprec):   error
    action 'REC' (noprec):   error
    action 'LET' (noprec):   error
    action 'OF' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'FUN' (noprec):   error
    action 'TICK' (noprec):   error
    action 'PROJ' (noprec):   error
    action 'UID' (noprec):   error
    action 'LID' (noprec):   error
    action 'INT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto type_ctor_one: 6
    goto type_ctor: 58

state 6:
  items:
    decls -> 'TYPE' 'LID' 'EQUAL' type_ctor_one . decls
    type_ctor_one -> type_ctor_one . type_ctor

  actions:
    action 'EOF' (noprec):   error
    action 'TUP' (noprec):   error
    action 'CTOR_ALONE' (noprec):   error
    action 'CTOR_ARG' (noprec):   error
    action 'P4' (noprec):   error
    action 'P3' (noprec):   error
    action 'P2' (noprec):   error
    action 'P1' (noprec):   error
    action 'OR' (noprec):   error
    action 'AND' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'PIPE' (noprec):   shift 60
    action 'STAR' (noprec):   error
    action 'COLON' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'ARROW' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'REFINES' (noprec):   error
    action 'HOLE' (noprec):   error
    action 'WITH' (noprec):   error
    action 'NOT' (noprec):   error
    action 'UNIT' (noprec):   error
    action 'REC' (noprec):   error
    action 'LET' (noprec):   shift 20
    action 'OF' (noprec):   error
    action 'TYPE' (noprec):   shift 3
    action 'MATCH' (noprec):   error
    action 'FUN' (noprec):   error
    action 'TICK' (noprec):   error
    action 'PROJ' (noprec):   error
    action 'UID' (noprec):   error
    action 'LID' (noprec):   error
    action 'INT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto decls: 7
    goto type_ctor: 59
    goto let_head: 47
    goto let_rec_head: 30

state 7:
  items:
    decls -> 'TYPE' 'LID' 'EQUAL' type_ctor_one decls . 

  actions:
    action 'EOF' (noprec):   reduce decls --> 'TYPE' 'LID' 'EQUAL' type_ctor_one decls
    action 'TUP' (noprec):   reduce decls --> 'TYPE' 'LID' 'EQUAL' type_ctor_one decls
    action 'CTOR_ALONE' (noprec):   reduce decls --> 'TYPE' 'LID' 'EQUAL' type_ctor_one decls
    action 'CTOR_ARG' (noprec):   reduce decls --> 'TYPE' 'LID' 'EQUAL' type_ctor_one decls
    action 'P4' (noprec):   reduce decls --> 'TYPE' 'LID' 'EQUAL' type_ctor_one decls
    action 'P3' (noprec):   reduce decls --> 'TYPE' 'LID' 'EQUAL' type_ctor_one decls
    action 'P2' (noprec):   reduce decls --> 'TYPE' 'LID' 'EQUAL' type_ctor_one decls
    action 'P1' (noprec):   reduce decls --> 'TYPE' 'LID' 'EQUAL' type_ctor_one decls
    action 'OR' (noprec):   reduce decls --> 'TYPE' 'LID' 'EQUAL' type_ctor_one decls
    action 'AND' (noprec):   reduce decls --> 'TYPE' 'LID' 'EQUAL' type_ctor_one decls
    action 'SEMI' (noprec):   reduce decls --> 'TYPE' 'LID' 'EQUAL' type_ctor_one decls
    action 'RBRACKET' (noprec):   reduce decls --> 'TYPE' 'LID' 'EQUAL' type_ctor_one decls
    action 'LBRACKET' (noprec):   reduce decls --> 'TYPE' 'LID' 'EQUAL' type_ctor_one decls
    action 'RPAREN' (noprec):   reduce decls --> 'TYPE' 'LID' 'EQUAL' type_ctor_one decls
    action 'LPAREN' (noprec):   reduce decls --> 'TYPE' 'LID' 'EQUAL' type_ctor_one decls
    action 'PIPE' (noprec):   reduce decls --> 'TYPE' 'LID' 'EQUAL' type_ctor_one decls
    action 'STAR' (noprec):   reduce decls --> 'TYPE' 'LID' 'EQUAL' type_ctor_one decls
    action 'COLON' (noprec):   reduce decls --> 'TYPE' 'LID' 'EQUAL' type_ctor_one decls
    action 'COMMA' (noprec):   reduce decls --> 'TYPE' 'LID' 'EQUAL' type_ctor_one decls
    action 'ARROW' (noprec):   reduce decls --> 'TYPE' 'LID' 'EQUAL' type_ctor_one decls
    action 'EQUAL' (noprec):   reduce decls --> 'TYPE' 'LID' 'EQUAL' type_ctor_one decls
    action 'REFINES' (noprec):   reduce decls --> 'TYPE' 'LID' 'EQUAL' type_ctor_one decls
    action 'HOLE' (noprec):   reduce decls --> 'TYPE' 'LID' 'EQUAL' type_ctor_one decls
    action 'WITH' (noprec):   reduce decls --> 'TYPE' 'LID' 'EQUAL' type_ctor_one decls
    action 'NOT' (noprec):   reduce decls --> 'TYPE' 'LID' 'EQUAL' type_ctor_one decls
    action 'UNIT' (noprec):   reduce decls --> 'TYPE' 'LID' 'EQUAL' type_ctor_one decls
    action 'REC' (noprec):   reduce decls --> 'TYPE' 'LID' 'EQUAL' type_ctor_one decls
    action 'LET' (noprec):   reduce decls --> 'TYPE' 'LID' 'EQUAL' type_ctor_one decls
    action 'OF' (noprec):   reduce decls --> 'TYPE' 'LID' 'EQUAL' type_ctor_one decls
    action 'TYPE' (noprec):   reduce decls --> 'TYPE' 'LID' 'EQUAL' type_ctor_one decls
    action 'MATCH' (noprec):   reduce decls --> 'TYPE' 'LID' 'EQUAL' type_ctor_one decls
    action 'FUN' (noprec):   reduce decls --> 'TYPE' 'LID' 'EQUAL' type_ctor_one decls
    action 'TICK' (noprec):   reduce decls --> 'TYPE' 'LID' 'EQUAL' type_ctor_one decls
    action 'PROJ' (noprec):   reduce decls --> 'TYPE' 'LID' 'EQUAL' type_ctor_one decls
    action 'UID' (noprec):   reduce decls --> 'TYPE' 'LID' 'EQUAL' type_ctor_one decls
    action 'LID' (noprec):   reduce decls --> 'TYPE' 'LID' 'EQUAL' type_ctor_one decls
    action 'INT' (noprec):   reduce decls --> 'TYPE' 'LID' 'EQUAL' type_ctor_one decls
    action 'error' (noprec):   reduce decls --> 'TYPE' 'LID' 'EQUAL' type_ctor_one decls
    action '#' (noprec):   reduce decls --> 'TYPE' 'LID' 'EQUAL' type_ctor_one decls
    action '$$' (noprec):   reduce decls --> 'TYPE' 'LID' 'EQUAL' type_ctor_one decls

  immediate action:   reduce decls --> 'TYPE' 'LID' 'EQUAL' type_ctor_one decls
 gotos:

state 8:
  items:
    decls -> 'TYPE' 'TICK' . 'LID' 'EQUAL' type_ctor_one decls

  actions:
    action 'EOF' (noprec):   error
    action 'TUP' (noprec):   error
    action 'CTOR_ALONE' (noprec):   error
    action 'CTOR_ARG' (noprec):   error
    action 'P4' (noprec):   error
    action 'P3' (noprec):   error
    action 'P2' (noprec):   error
    action 'P1' (noprec):   error
    action 'OR' (noprec):   error
    action 'AND' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'PIPE' (noprec):   error
    action 'STAR' (noprec):   error
    action 'COLON' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'ARROW' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'REFINES' (noprec):   error
    action 'HOLE' (noprec):   error
    action 'WITH' (noprec):   error
    action 'NOT' (noprec):   error
    action 'UNIT' (noprec):   error
    action 'REC' (noprec):   error
    action 'LET' (noprec):   error
    action 'OF' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'FUN' (noprec):   error
    action 'TICK' (noprec):   error
    action 'PROJ' (noprec):   error
    action 'UID' (noprec):   error
    action 'LID' (noprec):   shift 9
    action 'INT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 9:
  items:
    decls -> 'TYPE' 'TICK' 'LID' . 'EQUAL' type_ctor_one decls

  actions:
    action 'EOF' (noprec):   error
    action 'TUP' (noprec):   error
    action 'CTOR_ALONE' (noprec):   error
    action 'CTOR_ARG' (noprec):   error
    action 'P4' (noprec):   error
    action 'P3' (noprec):   error
    action 'P2' (noprec):   error
    action 'P1' (noprec):   error
    action 'OR' (noprec):   error
    action 'AND' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'PIPE' (noprec):   error
    action 'STAR' (noprec):   error
    action 'COLON' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'ARROW' (noprec):   error
    action 'EQUAL' (noprec):   shift 10
    action 'REFINES' (noprec):   error
    action 'HOLE' (noprec):   error
    action 'WITH' (noprec):   error
    action 'NOT' (noprec):   error
    action 'UNIT' (noprec):   error
    action 'REC' (noprec):   error
    action 'LET' (noprec):   error
    action 'OF' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'FUN' (noprec):   error
    action 'TICK' (noprec):   error
    action 'PROJ' (noprec):   error
    action 'UID' (noprec):   error
    action 'LID' (noprec):   error
    action 'INT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 10:
  items:
    decls -> 'TYPE' 'TICK' 'LID' 'EQUAL' . type_ctor_one decls

  actions:
    action 'EOF' (noprec):   error
    action 'TUP' (noprec):   error
    action 'CTOR_ALONE' (noprec):   error
    action 'CTOR_ARG' (noprec):   error
    action 'P4' (noprec):   error
    action 'P3' (noprec):   error
    action 'P2' (noprec):   error
    action 'P1' (noprec):   error
    action 'OR' (noprec):   error
    action 'AND' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'PIPE' (noprec):   shift 60
    action 'STAR' (noprec):   error
    action 'COLON' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'ARROW' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'REFINES' (noprec):   error
    action 'HOLE' (noprec):   error
    action 'WITH' (noprec):   error
    action 'NOT' (noprec):   error
    action 'UNIT' (noprec):   error
    action 'REC' (noprec):   error
    action 'LET' (noprec):   error
    action 'OF' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'FUN' (noprec):   error
    action 'TICK' (noprec):   error
    action 'PROJ' (noprec):   error
    action 'UID' (noprec):   error
    action 'LID' (noprec):   error
    action 'INT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto type_ctor_one: 11
    goto type_ctor: 58

state 11:
  items:
    decls -> 'TYPE' 'TICK' 'LID' 'EQUAL' type_ctor_one . decls
    type_ctor_one -> type_ctor_one . type_ctor

  actions:
    action 'EOF' (noprec):   error
    action 'TUP' (noprec):   error
    action 'CTOR_ALONE' (noprec):   error
    action 'CTOR_ARG' (noprec):   error
    action 'P4' (noprec):   error
    action 'P3' (noprec):   error
    action 'P2' (noprec):   error
    action 'P1' (noprec):   error
    action 'OR' (noprec):   error
    action 'AND' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'PIPE' (noprec):   shift 60
    action 'STAR' (noprec):   error
    action 'COLON' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'ARROW' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'REFINES' (noprec):   error
    action 'HOLE' (noprec):   error
    action 'WITH' (noprec):   error
    action 'NOT' (noprec):   error
    action 'UNIT' (noprec):   error
    action 'REC' (noprec):   error
    action 'LET' (noprec):   shift 20
    action 'OF' (noprec):   error
    action 'TYPE' (noprec):   shift 3
    action 'MATCH' (noprec):   error
    action 'FUN' (noprec):   error
    action 'TICK' (noprec):   error
    action 'PROJ' (noprec):   error
    action 'UID' (noprec):   error
    action 'LID' (noprec):   error
    action 'INT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto decls: 12
    goto type_ctor: 59
    goto let_head: 47
    goto let_rec_head: 30

state 12:
  items:
    decls -> 'TYPE' 'TICK' 'LID' 'EQUAL' type_ctor_one decls . 

  actions:
    action 'EOF' (noprec):   reduce decls --> 'TYPE' 'TICK' 'LID' 'EQUAL' type_ctor_one decls
    action 'TUP' (noprec):   reduce decls --> 'TYPE' 'TICK' 'LID' 'EQUAL' type_ctor_one decls
    action 'CTOR_ALONE' (noprec):   reduce decls --> 'TYPE' 'TICK' 'LID' 'EQUAL' type_ctor_one decls
    action 'CTOR_ARG' (noprec):   reduce decls --> 'TYPE' 'TICK' 'LID' 'EQUAL' type_ctor_one decls
    action 'P4' (noprec):   reduce decls --> 'TYPE' 'TICK' 'LID' 'EQUAL' type_ctor_one decls
    action 'P3' (noprec):   reduce decls --> 'TYPE' 'TICK' 'LID' 'EQUAL' type_ctor_one decls
    action 'P2' (noprec):   reduce decls --> 'TYPE' 'TICK' 'LID' 'EQUAL' type_ctor_one decls
    action 'P1' (noprec):   reduce decls --> 'TYPE' 'TICK' 'LID' 'EQUAL' type_ctor_one decls
    action 'OR' (noprec):   reduce decls --> 'TYPE' 'TICK' 'LID' 'EQUAL' type_ctor_one decls
    action 'AND' (noprec):   reduce decls --> 'TYPE' 'TICK' 'LID' 'EQUAL' type_ctor_one decls
    action 'SEMI' (noprec):   reduce decls --> 'TYPE' 'TICK' 'LID' 'EQUAL' type_ctor_one decls
    action 'RBRACKET' (noprec):   reduce decls --> 'TYPE' 'TICK' 'LID' 'EQUAL' type_ctor_one decls
    action 'LBRACKET' (noprec):   reduce decls --> 'TYPE' 'TICK' 'LID' 'EQUAL' type_ctor_one decls
    action 'RPAREN' (noprec):   reduce decls --> 'TYPE' 'TICK' 'LID' 'EQUAL' type_ctor_one decls
    action 'LPAREN' (noprec):   reduce decls --> 'TYPE' 'TICK' 'LID' 'EQUAL' type_ctor_one decls
    action 'PIPE' (noprec):   reduce decls --> 'TYPE' 'TICK' 'LID' 'EQUAL' type_ctor_one decls
    action 'STAR' (noprec):   reduce decls --> 'TYPE' 'TICK' 'LID' 'EQUAL' type_ctor_one decls
    action 'COLON' (noprec):   reduce decls --> 'TYPE' 'TICK' 'LID' 'EQUAL' type_ctor_one decls
    action 'COMMA' (noprec):   reduce decls --> 'TYPE' 'TICK' 'LID' 'EQUAL' type_ctor_one decls
    action 'ARROW' (noprec):   reduce decls --> 'TYPE' 'TICK' 'LID' 'EQUAL' type_ctor_one decls
    action 'EQUAL' (noprec):   reduce decls --> 'TYPE' 'TICK' 'LID' 'EQUAL' type_ctor_one decls
    action 'REFINES' (noprec):   reduce decls --> 'TYPE' 'TICK' 'LID' 'EQUAL' type_ctor_one decls
    action 'HOLE' (noprec):   reduce decls --> 'TYPE' 'TICK' 'LID' 'EQUAL' type_ctor_one decls
    action 'WITH' (noprec):   reduce decls --> 'TYPE' 'TICK' 'LID' 'EQUAL' type_ctor_one decls
    action 'NOT' (noprec):   reduce decls --> 'TYPE' 'TICK' 'LID' 'EQUAL' type_ctor_one decls
    action 'UNIT' (noprec):   reduce decls --> 'TYPE' 'TICK' 'LID' 'EQUAL' type_ctor_one decls
    action 'REC' (noprec):   reduce decls --> 'TYPE' 'TICK' 'LID' 'EQUAL' type_ctor_one decls
    action 'LET' (noprec):   reduce decls --> 'TYPE' 'TICK' 'LID' 'EQUAL' type_ctor_one decls
    action 'OF' (noprec):   reduce decls --> 'TYPE' 'TICK' 'LID' 'EQUAL' type_ctor_one decls
    action 'TYPE' (noprec):   reduce decls --> 'TYPE' 'TICK' 'LID' 'EQUAL' type_ctor_one decls
    action 'MATCH' (noprec):   reduce decls --> 'TYPE' 'TICK' 'LID' 'EQUAL' type_ctor_one decls
    action 'FUN' (noprec):   reduce decls --> 'TYPE' 'TICK' 'LID' 'EQUAL' type_ctor_one decls
    action 'TICK' (noprec):   reduce decls --> 'TYPE' 'TICK' 'LID' 'EQUAL' type_ctor_one decls
    action 'PROJ' (noprec):   reduce decls --> 'TYPE' 'TICK' 'LID' 'EQUAL' type_ctor_one decls
    action 'UID' (noprec):   reduce decls --> 'TYPE' 'TICK' 'LID' 'EQUAL' type_ctor_one decls
    action 'LID' (noprec):   reduce decls --> 'TYPE' 'TICK' 'LID' 'EQUAL' type_ctor_one decls
    action 'INT' (noprec):   reduce decls --> 'TYPE' 'TICK' 'LID' 'EQUAL' type_ctor_one decls
    action 'error' (noprec):   reduce decls --> 'TYPE' 'TICK' 'LID' 'EQUAL' type_ctor_one decls
    action '#' (noprec):   reduce decls --> 'TYPE' 'TICK' 'LID' 'EQUAL' type_ctor_one decls
    action '$$' (noprec):   reduce decls --> 'TYPE' 'TICK' 'LID' 'EQUAL' type_ctor_one decls

  immediate action:   reduce decls --> 'TYPE' 'TICK' 'LID' 'EQUAL' type_ctor_one decls
 gotos:

state 13:
  items:
    decls -> 'TYPE' 'LPAREN' . tick_comma_one 'RPAREN' 'LID' 'EQUAL' type_ctor_one decls

  actions:
    action 'EOF' (noprec):   error
    action 'TUP' (noprec):   error
    action 'CTOR_ALONE' (noprec):   error
    action 'CTOR_ARG' (noprec):   error
    action 'P4' (noprec):   error
    action 'P3' (noprec):   error
    action 'P2' (noprec):   error
    action 'P1' (noprec):   error
    action 'OR' (noprec):   error
    action 'AND' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'PIPE' (noprec):   error
    action 'STAR' (noprec):   error
    action 'COLON' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'ARROW' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'REFINES' (noprec):   error
    action 'HOLE' (noprec):   error
    action 'WITH' (noprec):   error
    action 'NOT' (noprec):   error
    action 'UNIT' (noprec):   error
    action 'REC' (noprec):   error
    action 'LET' (noprec):   error
    action 'OF' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'FUN' (noprec):   error
    action 'TICK' (noprec):   shift 67
    action 'PROJ' (noprec):   error
    action 'UID' (noprec):   error
    action 'LID' (noprec):   error
    action 'INT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto tick_comma_one: 14
    goto tick_comma: 64

state 14:
  items:
    decls -> 'TYPE' 'LPAREN' tick_comma_one . 'RPAREN' 'LID' 'EQUAL' type_ctor_one decls

  actions:
    action 'EOF' (noprec):   error
    action 'TUP' (noprec):   error
    action 'CTOR_ALONE' (noprec):   error
    action 'CTOR_ARG' (noprec):   error
    action 'P4' (noprec):   error
    action 'P3' (noprec):   error
    action 'P2' (noprec):   error
    action 'P1' (noprec):   error
    action 'OR' (noprec):   error
    action 'AND' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RPAREN' (noprec):   shift 15
    action 'LPAREN' (noprec):   error
    action 'PIPE' (noprec):   error
    action 'STAR' (noprec):   error
    action 'COLON' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'ARROW' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'REFINES' (noprec):   error
    action 'HOLE' (noprec):   error
    action 'WITH' (noprec):   error
    action 'NOT' (noprec):   error
    action 'UNIT' (noprec):   error
    action 'REC' (noprec):   error
    action 'LET' (noprec):   error
    action 'OF' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'FUN' (noprec):   error
    action 'TICK' (noprec):   error
    action 'PROJ' (noprec):   error
    action 'UID' (noprec):   error
    action 'LID' (noprec):   error
    action 'INT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 15:
  items:
    decls -> 'TYPE' 'LPAREN' tick_comma_one 'RPAREN' . 'LID' 'EQUAL' type_ctor_one decls

  actions:
    action 'EOF' (noprec):   error
    action 'TUP' (noprec):   error
    action 'CTOR_ALONE' (noprec):   error
    action 'CTOR_ARG' (noprec):   error
    action 'P4' (noprec):   error
    action 'P3' (noprec):   error
    action 'P2' (noprec):   error
    action 'P1' (noprec):   error
    action 'OR' (noprec):   error
    action 'AND' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'PIPE' (noprec):   error
    action 'STAR' (noprec):   error
    action 'COLON' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'ARROW' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'REFINES' (noprec):   error
    action 'HOLE' (noprec):   error
    action 'WITH' (noprec):   error
    action 'NOT' (noprec):   error
    action 'UNIT' (noprec):   error
    action 'REC' (noprec):   error
    action 'LET' (noprec):   error
    action 'OF' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'FUN' (noprec):   error
    action 'TICK' (noprec):   error
    action 'PROJ' (noprec):   error
    action 'UID' (noprec):   error
    action 'LID' (noprec):   shift 16
    action 'INT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 16:
  items:
    decls -> 'TYPE' 'LPAREN' tick_comma_one 'RPAREN' 'LID' . 'EQUAL' type_ctor_one decls

  actions:
    action 'EOF' (noprec):   error
    action 'TUP' (noprec):   error
    action 'CTOR_ALONE' (noprec):   error
    action 'CTOR_ARG' (noprec):   error
    action 'P4' (noprec):   error
    action 'P3' (noprec):   error
    action 'P2' (noprec):   error
    action 'P1' (noprec):   error
    action 'OR' (noprec):   error
    action 'AND' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'PIPE' (noprec):   error
    action 'STAR' (noprec):   error
    action 'COLON' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'ARROW' (noprec):   error
    action 'EQUAL' (noprec):   shift 17
    action 'REFINES' (noprec):   error
    action 'HOLE' (noprec):   error
    action 'WITH' (noprec):   error
    action 'NOT' (noprec):   error
    action 'UNIT' (noprec):   error
    action 'REC' (noprec):   error
    action 'LET' (noprec):   error
    action 'OF' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'FUN' (noprec):   error
    action 'TICK' (noprec):   error
    action 'PROJ' (noprec):   error
    action 'UID' (noprec):   error
    action 'LID' (noprec):   error
    action 'INT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 17:
  items:
    decls -> 'TYPE' 'LPAREN' tick_comma_one 'RPAREN' 'LID' 'EQUAL' . type_ctor_one decls

  actions:
    action 'EOF' (noprec):   error
    action 'TUP' (noprec):   error
    action 'CTOR_ALONE' (noprec):   error
    action 'CTOR_ARG' (noprec):   error
    action 'P4' (noprec):   error
    action 'P3' (noprec):   error
    action 'P2' (noprec):   error
    action 'P1' (noprec):   error
    action 'OR' (noprec):   error
    action 'AND' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'PIPE' (noprec):   shift 60
    action 'STAR' (noprec):   error
    action 'COLON' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'ARROW' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'REFINES' (noprec):   error
    action 'HOLE' (noprec):   error
    action 'WITH' (noprec):   error
    action 'NOT' (noprec):   error
    action 'UNIT' (noprec):   error
    action 'REC' (noprec):   error
    action 'LET' (noprec):   error
    action 'OF' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'FUN' (noprec):   error
    action 'TICK' (noprec):   error
    action 'PROJ' (noprec):   error
    action 'UID' (noprec):   error
    action 'LID' (noprec):   error
    action 'INT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto type_ctor_one: 18
    goto type_ctor: 58

state 18:
  items:
    decls -> 'TYPE' 'LPAREN' tick_comma_one 'RPAREN' 'LID' 'EQUAL' type_ctor_one . decls
    type_ctor_one -> type_ctor_one . type_ctor

  actions:
    action 'EOF' (noprec):   error
    action 'TUP' (noprec):   error
    action 'CTOR_ALONE' (noprec):   error
    action 'CTOR_ARG' (noprec):   error
    action 'P4' (noprec):   error
    action 'P3' (noprec):   error
    action 'P2' (noprec):   error
    action 'P1' (noprec):   error
    action 'OR' (noprec):   error
    action 'AND' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'PIPE' (noprec):   shift 60
    action 'STAR' (noprec):   error
    action 'COLON' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'ARROW' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'REFINES' (noprec):   error
    action 'HOLE' (noprec):   error
    action 'WITH' (noprec):   error
    action 'NOT' (noprec):   error
    action 'UNIT' (noprec):   error
    action 'REC' (noprec):   error
    action 'LET' (noprec):   shift 20
    action 'OF' (noprec):   error
    action 'TYPE' (noprec):   shift 3
    action 'MATCH' (noprec):   error
    action 'FUN' (noprec):   error
    action 'TICK' (noprec):   error
    action 'PROJ' (noprec):   error
    action 'UID' (noprec):   error
    action 'LID' (noprec):   error
    action 'INT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto decls: 19
    goto type_ctor: 59
    goto let_head: 47
    goto let_rec_head: 30

state 19:
  items:
    decls -> 'TYPE' 'LPAREN' tick_comma_one 'RPAREN' 'LID' 'EQUAL' type_ctor_one decls . 

  actions:
    action 'EOF' (noprec):   reduce decls --> 'TYPE' 'LPAREN' tick_comma_one 'RPAREN' 'LID' 'EQUAL' type_ctor_one decls
    action 'TUP' (noprec):   reduce decls --> 'TYPE' 'LPAREN' tick_comma_one 'RPAREN' 'LID' 'EQUAL' type_ctor_one decls
    action 'CTOR_ALONE' (noprec):   reduce decls --> 'TYPE' 'LPAREN' tick_comma_one 'RPAREN' 'LID' 'EQUAL' type_ctor_one decls
    action 'CTOR_ARG' (noprec):   reduce decls --> 'TYPE' 'LPAREN' tick_comma_one 'RPAREN' 'LID' 'EQUAL' type_ctor_one decls
    action 'P4' (noprec):   reduce decls --> 'TYPE' 'LPAREN' tick_comma_one 'RPAREN' 'LID' 'EQUAL' type_ctor_one decls
    action 'P3' (noprec):   reduce decls --> 'TYPE' 'LPAREN' tick_comma_one 'RPAREN' 'LID' 'EQUAL' type_ctor_one decls
    action 'P2' (noprec):   reduce decls --> 'TYPE' 'LPAREN' tick_comma_one 'RPAREN' 'LID' 'EQUAL' type_ctor_one decls
    action 'P1' (noprec):   reduce decls --> 'TYPE' 'LPAREN' tick_comma_one 'RPAREN' 'LID' 'EQUAL' type_ctor_one decls
    action 'OR' (noprec):   reduce decls --> 'TYPE' 'LPAREN' tick_comma_one 'RPAREN' 'LID' 'EQUAL' type_ctor_one decls
    action 'AND' (noprec):   reduce decls --> 'TYPE' 'LPAREN' tick_comma_one 'RPAREN' 'LID' 'EQUAL' type_ctor_one decls
    action 'SEMI' (noprec):   reduce decls --> 'TYPE' 'LPAREN' tick_comma_one 'RPAREN' 'LID' 'EQUAL' type_ctor_one decls
    action 'RBRACKET' (noprec):   reduce decls --> 'TYPE' 'LPAREN' tick_comma_one 'RPAREN' 'LID' 'EQUAL' type_ctor_one decls
    action 'LBRACKET' (noprec):   reduce decls --> 'TYPE' 'LPAREN' tick_comma_one 'RPAREN' 'LID' 'EQUAL' type_ctor_one decls
    action 'RPAREN' (noprec):   reduce decls --> 'TYPE' 'LPAREN' tick_comma_one 'RPAREN' 'LID' 'EQUAL' type_ctor_one decls
    action 'LPAREN' (noprec):   reduce decls --> 'TYPE' 'LPAREN' tick_comma_one 'RPAREN' 'LID' 'EQUAL' type_ctor_one decls
    action 'PIPE' (noprec):   reduce decls --> 'TYPE' 'LPAREN' tick_comma_one 'RPAREN' 'LID' 'EQUAL' type_ctor_one decls
    action 'STAR' (noprec):   reduce decls --> 'TYPE' 'LPAREN' tick_comma_one 'RPAREN' 'LID' 'EQUAL' type_ctor_one decls
    action 'COLON' (noprec):   reduce decls --> 'TYPE' 'LPAREN' tick_comma_one 'RPAREN' 'LID' 'EQUAL' type_ctor_one decls
    action 'COMMA' (noprec):   reduce decls --> 'TYPE' 'LPAREN' tick_comma_one 'RPAREN' 'LID' 'EQUAL' type_ctor_one decls
    action 'ARROW' (noprec):   reduce decls --> 'TYPE' 'LPAREN' tick_comma_one 'RPAREN' 'LID' 'EQUAL' type_ctor_one decls
    action 'EQUAL' (noprec):   reduce decls --> 'TYPE' 'LPAREN' tick_comma_one 'RPAREN' 'LID' 'EQUAL' type_ctor_one decls
    action 'REFINES' (noprec):   reduce decls --> 'TYPE' 'LPAREN' tick_comma_one 'RPAREN' 'LID' 'EQUAL' type_ctor_one decls
    action 'HOLE' (noprec):   reduce decls --> 'TYPE' 'LPAREN' tick_comma_one 'RPAREN' 'LID' 'EQUAL' type_ctor_one decls
    action 'WITH' (noprec):   reduce decls --> 'TYPE' 'LPAREN' tick_comma_one 'RPAREN' 'LID' 'EQUAL' type_ctor_one decls
    action 'NOT' (noprec):   reduce decls --> 'TYPE' 'LPAREN' tick_comma_one 'RPAREN' 'LID' 'EQUAL' type_ctor_one decls
    action 'UNIT' (noprec):   reduce decls --> 'TYPE' 'LPAREN' tick_comma_one 'RPAREN' 'LID' 'EQUAL' type_ctor_one decls
    action 'REC' (noprec):   reduce decls --> 'TYPE' 'LPAREN' tick_comma_one 'RPAREN' 'LID' 'EQUAL' type_ctor_one decls
    action 'LET' (noprec):   reduce decls --> 'TYPE' 'LPAREN' tick_comma_one 'RPAREN' 'LID' 'EQUAL' type_ctor_one decls
    action 'OF' (noprec):   reduce decls --> 'TYPE' 'LPAREN' tick_comma_one 'RPAREN' 'LID' 'EQUAL' type_ctor_one decls
    action 'TYPE' (noprec):   reduce decls --> 'TYPE' 'LPAREN' tick_comma_one 'RPAREN' 'LID' 'EQUAL' type_ctor_one decls
    action 'MATCH' (noprec):   reduce decls --> 'TYPE' 'LPAREN' tick_comma_one 'RPAREN' 'LID' 'EQUAL' type_ctor_one decls
    action 'FUN' (noprec):   reduce decls --> 'TYPE' 'LPAREN' tick_comma_one 'RPAREN' 'LID' 'EQUAL' type_ctor_one decls
    action 'TICK' (noprec):   reduce decls --> 'TYPE' 'LPAREN' tick_comma_one 'RPAREN' 'LID' 'EQUAL' type_ctor_one decls
    action 'PROJ' (noprec):   reduce decls --> 'TYPE' 'LPAREN' tick_comma_one 'RPAREN' 'LID' 'EQUAL' type_ctor_one decls
    action 'UID' (noprec):   reduce decls --> 'TYPE' 'LPAREN' tick_comma_one 'RPAREN' 'LID' 'EQUAL' type_ctor_one decls
    action 'LID' (noprec):   reduce decls --> 'TYPE' 'LPAREN' tick_comma_one 'RPAREN' 'LID' 'EQUAL' type_ctor_one decls
    action 'INT' (noprec):   reduce decls --> 'TYPE' 'LPAREN' tick_comma_one 'RPAREN' 'LID' 'EQUAL' type_ctor_one decls
    action 'error' (noprec):   reduce decls --> 'TYPE' 'LPAREN' tick_comma_one 'RPAREN' 'LID' 'EQUAL' type_ctor_one decls
    action '#' (noprec):   reduce decls --> 'TYPE' 'LPAREN' tick_comma_one 'RPAREN' 'LID' 'EQUAL' type_ctor_one decls
    action '$$' (noprec):   reduce decls --> 'TYPE' 'LPAREN' tick_comma_one 'RPAREN' 'LID' 'EQUAL' type_ctor_one decls

  immediate action:   reduce decls --> 'TYPE' 'LPAREN' tick_comma_one 'RPAREN' 'LID' 'EQUAL' type_ctor_one decls
 gotos:

state 20:
  items:
    decls -> 'LET' . 'LID' args_list_one 'COLON' typ 'EQUAL' expr 'SEMI' 'SEMI' decls
    let_head -> 'LET' . 'LID' 'COLON' typ
    let_rec_head -> 'LET' . 'REC' 'LID'

  actions:
    action 'EOF' (noprec):   error
    action 'TUP' (noprec):   error
    action 'CTOR_ALONE' (noprec):   error
    action 'CTOR_ARG' (noprec):   error
    action 'P4' (noprec):   error
    action 'P3' (noprec):   error
    action 'P2' (noprec):   error
    action 'P1' (noprec):   error
    action 'OR' (noprec):   error
    action 'AND' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'PIPE' (noprec):   error
    action 'STAR' (noprec):   error
    action 'COLON' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'ARROW' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'REFINES' (noprec):   error
    action 'HOLE' (noprec):   error
    action 'WITH' (noprec):   error
    action 'NOT' (noprec):   error
    action 'UNIT' (noprec):   error
    action 'REC' (noprec):   shift 77
    action 'LET' (noprec):   error
    action 'OF' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'FUN' (noprec):   error
    action 'TICK' (noprec):   error
    action 'PROJ' (noprec):   error
    action 'UID' (noprec):   error
    action 'LID' (noprec):   shift 21
    action 'INT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 21:
  items:
    decls -> 'LET' 'LID' . args_list_one 'COLON' typ 'EQUAL' expr 'SEMI' 'SEMI' decls
    let_head -> 'LET' 'LID' . 'COLON' typ

  actions:
    action 'EOF' (noprec):   error
    action 'TUP' (noprec):   error
    action 'CTOR_ALONE' (noprec):   error
    action 'CTOR_ARG' (noprec):   error
    action 'P4' (noprec):   error
    action 'P3' (noprec):   error
    action 'P2' (noprec):   error
    action 'P1' (noprec):   error
    action 'OR' (noprec):   error
    action 'AND' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LPAREN' (noprec):   shift 68
    action 'PIPE' (noprec):   error
    action 'STAR' (noprec):   error
    action 'COLON' (noprec):   shift 75
    action 'COMMA' (noprec):   error
    action 'ARROW' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'REFINES' (noprec):   error
    action 'HOLE' (noprec):   error
    action 'WITH' (noprec):   error
    action 'NOT' (noprec):   error
    action 'UNIT' (noprec):   error
    action 'REC' (noprec):   error
    action 'LET' (noprec):   error
    action 'OF' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'FUN' (noprec):   error
    action 'TICK' (noprec):   error
    action 'PROJ' (noprec):   error
    action 'UID' (noprec):   error
    action 'LID' (noprec):   error
    action 'INT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto arg: 73
    goto args_list_one: 22

state 22:
  items:
    decls -> 'LET' 'LID' args_list_one . 'COLON' typ 'EQUAL' expr 'SEMI' 'SEMI' decls
    args_list_one -> args_list_one . arg

  actions:
    action 'EOF' (noprec):   error
    action 'TUP' (noprec):   error
    action 'CTOR_ALONE' (noprec):   error
    action 'CTOR_ARG' (noprec):   error
    action 'P4' (noprec):   error
    action 'P3' (noprec):   error
    action 'P2' (noprec):   error
    action 'P1' (noprec):   error
    action 'OR' (noprec):   error
    action 'AND' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LPAREN' (noprec):   shift 68
    action 'PIPE' (noprec):   error
    action 'STAR' (noprec):   error
    action 'COLON' (noprec):   shift 23
    action 'COMMA' (noprec):   error
    action 'ARROW' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'REFINES' (noprec):   error
    action 'HOLE' (noprec):   error
    action 'WITH' (noprec):   error
    action 'NOT' (noprec):   error
    action 'UNIT' (noprec):   error
    action 'REC' (noprec):   error
    action 'LET' (noprec):   error
    action 'OF' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'FUN' (noprec):   error
    action 'TICK' (noprec):   error
    action 'PROJ' (noprec):   error
    action 'UID' (noprec):   error
    action 'LID' (noprec):   error
    action 'INT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto arg: 74

state 23:
  items:
    decls -> 'LET' 'LID' args_list_one 'COLON' . typ 'EQUAL' expr 'SEMI' 'SEMI' decls

  actions:
    action 'EOF' (noprec):   error
    action 'TUP' (noprec):   error
    action 'CTOR_ALONE' (noprec):   error
    action 'CTOR_ARG' (noprec):   error
    action 'P4' (noprec):   error
    action 'P3' (noprec):   error
    action 'P2' (noprec):   error
    action 'P1' (noprec):   error
    action 'OR' (noprec):   error
    action 'AND' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LPAREN' (noprec):   shift 126
    action 'PIPE' (noprec):   error
    action 'STAR' (noprec):   error
    action 'COLON' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'ARROW' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'REFINES' (noprec):   error
    action 'HOLE' (noprec):   error
    action 'WITH' (noprec):   error
    action 'NOT' (noprec):   error
    action 'UNIT' (noprec):   shift 117
    action 'REC' (noprec):   error
    action 'LET' (noprec):   error
    action 'OF' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'FUN' (noprec):   error
    action 'TICK' (noprec):   shift 124
    action 'PROJ' (noprec):   error
    action 'UID' (noprec):   error
    action 'LID' (noprec):   shift 133
    action 'INT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto typ: 24
    goto typ_in_tup: 144
    goto typ_base: 123
    goto typ_star_one: 125
    goto typ_star: 141

state 24:
  items:
    decls -> 'LET' 'LID' args_list_one 'COLON' typ . 'EQUAL' expr 'SEMI' 'SEMI' decls
    typ -> typ . 'ARROW' typ

  actions:
    action 'EOF' (noprec):   error
    action 'TUP' (noprec):   error
    action 'CTOR_ALONE' (noprec):   error
    action 'CTOR_ARG' (noprec):   error
    action 'P4' (noprec):   error
    action 'P3' (noprec):   error
    action 'P2' (noprec):   error
    action 'P1' (noprec):   error
    action 'OR' (noprec):   error
    action 'AND' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'PIPE' (noprec):   error
    action 'STAR' (noprec):   error
    action 'COLON' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'ARROW' (explicit right 9993):   shift 122
    action 'EQUAL' (noprec):   shift 25
    action 'REFINES' (noprec):   error
    action 'HOLE' (noprec):   error
    action 'WITH' (noprec):   error
    action 'NOT' (noprec):   error
    action 'UNIT' (noprec):   error
    action 'REC' (noprec):   error
    action 'LET' (noprec):   error
    action 'OF' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'FUN' (noprec):   error
    action 'TICK' (noprec):   error
    action 'PROJ' (noprec):   error
    action 'UID' (noprec):   error
    action 'LID' (noprec):   error
    action 'INT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 25:
  items:
    decls -> 'LET' 'LID' args_list_one 'COLON' typ 'EQUAL' . expr 'SEMI' 'SEMI' decls

  actions:
    action 'EOF' (noprec):   error
    action 'TUP' (noprec):   error
    action 'CTOR_ALONE' (noprec):   error
    action 'CTOR_ARG' (noprec):   error
    action 'P4' (noprec):   error
    action 'P3' (noprec):   error
    action 'P2' (noprec):   error
    action 'P1' (noprec):   error
    action 'OR' (noprec):   error
    action 'AND' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LBRACKET' (noprec):   shift 158
    action 'RPAREN' (noprec):   error
    action 'LPAREN' (noprec):   shift 150
    action 'PIPE' (noprec):   error
    action 'STAR' (noprec):   error
    action 'COLON' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'ARROW' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'REFINES' (noprec):   error
    action 'HOLE' (noprec):   error
    action 'WITH' (noprec):   error
    action 'NOT' (noprec):   error
    action 'UNIT' (noprec):   error
    action 'REC' (noprec):   error
    action 'LET' (noprec):   error
    action 'OF' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'MATCH' (noprec):   shift 170
    action 'FUN' (noprec):   shift 166
    action 'TICK' (noprec):   error
    action 'PROJ' (noprec):   shift 162
    action 'UID' (noprec):   shift 149
    action 'LID' (noprec):   shift 152
    action 'INT' (noprec):   shift 157
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto expr: 26
    goto expr_p2: 148
    goto expr_p1: 147
    goto app_chain: 165
    goto ctor_chain: 164

state 26:
  items:
    decls -> 'LET' 'LID' args_list_one 'COLON' typ 'EQUAL' expr . 'SEMI' 'SEMI' decls

  actions:
    action 'EOF' (noprec):   error
    action 'TUP' (noprec):   error
    action 'CTOR_ALONE' (noprec):   error
    action 'CTOR_ARG' (noprec):   error
    action 'P4' (noprec):   error
    action 'P3' (noprec):   error
    action 'P2' (noprec):   error
    action 'P1' (noprec):   error
    action 'OR' (noprec):   error
    action 'AND' (noprec):   error
    action 'SEMI' (noprec):   shift 27
    action 'RBRACKET' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'PIPE' (noprec):   error
    action 'STAR' (noprec):   error
    action 'COLON' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'ARROW' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'REFINES' (noprec):   error
    action 'HOLE' (noprec):   error
    action 'WITH' (noprec):   error
    action 'NOT' (noprec):   error
    action 'UNIT' (noprec):   error
    action 'REC' (noprec):   error
    action 'LET' (noprec):   error
    action 'OF' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'FUN' (noprec):   error
    action 'TICK' (noprec):   error
    action 'PROJ' (noprec):   error
    action 'UID' (noprec):   error
    action 'LID' (noprec):   error
    action 'INT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 27:
  items:
    decls -> 'LET' 'LID' args_list_one 'COLON' typ 'EQUAL' expr 'SEMI' . 'SEMI' decls

  actions:
    action 'EOF' (noprec):   error
    action 'TUP' (noprec):   error
    action 'CTOR_ALONE' (noprec):   error
    action 'CTOR_ARG' (noprec):   error
    action 'P4' (noprec):   error
    action 'P3' (noprec):   error
    action 'P2' (noprec):   error
    action 'P1' (noprec):   error
    action 'OR' (noprec):   error
    action 'AND' (noprec):   error
    action 'SEMI' (noprec):   shift 28
    action 'RBRACKET' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'PIPE' (noprec):   error
    action 'STAR' (noprec):   error
    action 'COLON' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'ARROW' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'REFINES' (noprec):   error
    action 'HOLE' (noprec):   error
    action 'WITH' (noprec):   error
    action 'NOT' (noprec):   error
    action 'UNIT' (noprec):   error
    action 'REC' (noprec):   error
    action 'LET' (noprec):   error
    action 'OF' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'FUN' (noprec):   error
    action 'TICK' (noprec):   error
    action 'PROJ' (noprec):   error
    action 'UID' (noprec):   error
    action 'LID' (noprec):   error
    action 'INT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 28:
  items:
    decls -> 'LET' 'LID' args_list_one 'COLON' typ 'EQUAL' expr 'SEMI' 'SEMI' . decls

  actions:
    action 'EOF' (noprec):   error
    action 'TUP' (noprec):   error
    action 'CTOR_ALONE' (noprec):   error
    action 'CTOR_ARG' (noprec):   error
    action 'P4' (noprec):   error
    action 'P3' (noprec):   error
    action 'P2' (noprec):   error
    action 'P1' (noprec):   error
    action 'OR' (noprec):   error
    action 'AND' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'PIPE' (noprec):   error
    action 'STAR' (noprec):   error
    action 'COLON' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'ARROW' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'REFINES' (noprec):   error
    action 'HOLE' (noprec):   error
    action 'WITH' (noprec):   error
    action 'NOT' (noprec):   error
    action 'UNIT' (noprec):   error
    action 'REC' (noprec):   error
    action 'LET' (noprec):   shift 20
    action 'OF' (noprec):   error
    action 'TYPE' (noprec):   shift 3
    action 'MATCH' (noprec):   error
    action 'FUN' (noprec):   error
    action 'TICK' (noprec):   error
    action 'PROJ' (noprec):   error
    action 'UID' (noprec):   error
    action 'LID' (noprec):   error
    action 'INT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto decls: 29
    goto let_head: 47
    goto let_rec_head: 30

state 29:
  items:
    decls -> 'LET' 'LID' args_list_one 'COLON' typ 'EQUAL' expr 'SEMI' 'SEMI' decls . 

  actions:
    action 'EOF' (noprec):   reduce decls --> 'LET' 'LID' args_list_one 'COLON' typ 'EQUAL' expr 'SEMI' 'SEMI' decls
    action 'TUP' (noprec):   reduce decls --> 'LET' 'LID' args_list_one 'COLON' typ 'EQUAL' expr 'SEMI' 'SEMI' decls
    action 'CTOR_ALONE' (noprec):   reduce decls --> 'LET' 'LID' args_list_one 'COLON' typ 'EQUAL' expr 'SEMI' 'SEMI' decls
    action 'CTOR_ARG' (noprec):   reduce decls --> 'LET' 'LID' args_list_one 'COLON' typ 'EQUAL' expr 'SEMI' 'SEMI' decls
    action 'P4' (noprec):   reduce decls --> 'LET' 'LID' args_list_one 'COLON' typ 'EQUAL' expr 'SEMI' 'SEMI' decls
    action 'P3' (noprec):   reduce decls --> 'LET' 'LID' args_list_one 'COLON' typ 'EQUAL' expr 'SEMI' 'SEMI' decls
    action 'P2' (noprec):   reduce decls --> 'LET' 'LID' args_list_one 'COLON' typ 'EQUAL' expr 'SEMI' 'SEMI' decls
    action 'P1' (noprec):   reduce decls --> 'LET' 'LID' args_list_one 'COLON' typ 'EQUAL' expr 'SEMI' 'SEMI' decls
    action 'OR' (noprec):   reduce decls --> 'LET' 'LID' args_list_one 'COLON' typ 'EQUAL' expr 'SEMI' 'SEMI' decls
    action 'AND' (noprec):   reduce decls --> 'LET' 'LID' args_list_one 'COLON' typ 'EQUAL' expr 'SEMI' 'SEMI' decls
    action 'SEMI' (noprec):   reduce decls --> 'LET' 'LID' args_list_one 'COLON' typ 'EQUAL' expr 'SEMI' 'SEMI' decls
    action 'RBRACKET' (noprec):   reduce decls --> 'LET' 'LID' args_list_one 'COLON' typ 'EQUAL' expr 'SEMI' 'SEMI' decls
    action 'LBRACKET' (noprec):   reduce decls --> 'LET' 'LID' args_list_one 'COLON' typ 'EQUAL' expr 'SEMI' 'SEMI' decls
    action 'RPAREN' (noprec):   reduce decls --> 'LET' 'LID' args_list_one 'COLON' typ 'EQUAL' expr 'SEMI' 'SEMI' decls
    action 'LPAREN' (noprec):   reduce decls --> 'LET' 'LID' args_list_one 'COLON' typ 'EQUAL' expr 'SEMI' 'SEMI' decls
    action 'PIPE' (noprec):   reduce decls --> 'LET' 'LID' args_list_one 'COLON' typ 'EQUAL' expr 'SEMI' 'SEMI' decls
    action 'STAR' (noprec):   reduce decls --> 'LET' 'LID' args_list_one 'COLON' typ 'EQUAL' expr 'SEMI' 'SEMI' decls
    action 'COLON' (noprec):   reduce decls --> 'LET' 'LID' args_list_one 'COLON' typ 'EQUAL' expr 'SEMI' 'SEMI' decls
    action 'COMMA' (noprec):   reduce decls --> 'LET' 'LID' args_list_one 'COLON' typ 'EQUAL' expr 'SEMI' 'SEMI' decls
    action 'ARROW' (noprec):   reduce decls --> 'LET' 'LID' args_list_one 'COLON' typ 'EQUAL' expr 'SEMI' 'SEMI' decls
    action 'EQUAL' (noprec):   reduce decls --> 'LET' 'LID' args_list_one 'COLON' typ 'EQUAL' expr 'SEMI' 'SEMI' decls
    action 'REFINES' (noprec):   reduce decls --> 'LET' 'LID' args_list_one 'COLON' typ 'EQUAL' expr 'SEMI' 'SEMI' decls
    action 'HOLE' (noprec):   reduce decls --> 'LET' 'LID' args_list_one 'COLON' typ 'EQUAL' expr 'SEMI' 'SEMI' decls
    action 'WITH' (noprec):   reduce decls --> 'LET' 'LID' args_list_one 'COLON' typ 'EQUAL' expr 'SEMI' 'SEMI' decls
    action 'NOT' (noprec):   reduce decls --> 'LET' 'LID' args_list_one 'COLON' typ 'EQUAL' expr 'SEMI' 'SEMI' decls
    action 'UNIT' (noprec):   reduce decls --> 'LET' 'LID' args_list_one 'COLON' typ 'EQUAL' expr 'SEMI' 'SEMI' decls
    action 'REC' (noprec):   reduce decls --> 'LET' 'LID' args_list_one 'COLON' typ 'EQUAL' expr 'SEMI' 'SEMI' decls
    action 'LET' (noprec):   reduce decls --> 'LET' 'LID' args_list_one 'COLON' typ 'EQUAL' expr 'SEMI' 'SEMI' decls
    action 'OF' (noprec):   reduce decls --> 'LET' 'LID' args_list_one 'COLON' typ 'EQUAL' expr 'SEMI' 'SEMI' decls
    action 'TYPE' (noprec):   reduce decls --> 'LET' 'LID' args_list_one 'COLON' typ 'EQUAL' expr 'SEMI' 'SEMI' decls
    action 'MATCH' (noprec):   reduce decls --> 'LET' 'LID' args_list_one 'COLON' typ 'EQUAL' expr 'SEMI' 'SEMI' decls
    action 'FUN' (noprec):   reduce decls --> 'LET' 'LID' args_list_one 'COLON' typ 'EQUAL' expr 'SEMI' 'SEMI' decls
    action 'TICK' (noprec):   reduce decls --> 'LET' 'LID' args_list_one 'COLON' typ 'EQUAL' expr 'SEMI' 'SEMI' decls
    action 'PROJ' (noprec):   reduce decls --> 'LET' 'LID' args_list_one 'COLON' typ 'EQUAL' expr 'SEMI' 'SEMI' decls
    action 'UID' (noprec):   reduce decls --> 'LET' 'LID' args_list_one 'COLON' typ 'EQUAL' expr 'SEMI' 'SEMI' decls
    action 'LID' (noprec):   reduce decls --> 'LET' 'LID' args_list_one 'COLON' typ 'EQUAL' expr 'SEMI' 'SEMI' decls
    action 'INT' (noprec):   reduce decls --> 'LET' 'LID' args_list_one 'COLON' typ 'EQUAL' expr 'SEMI' 'SEMI' decls
    action 'error' (noprec):   reduce decls --> 'LET' 'LID' args_list_one 'COLON' typ 'EQUAL' expr 'SEMI' 'SEMI' decls
    action '#' (noprec):   reduce decls --> 'LET' 'LID' args_list_one 'COLON' typ 'EQUAL' expr 'SEMI' 'SEMI' decls
    action '$$' (noprec):   reduce decls --> 'LET' 'LID' args_list_one 'COLON' typ 'EQUAL' expr 'SEMI' 'SEMI' decls

  immediate action:   reduce decls --> 'LET' 'LID' args_list_one 'COLON' typ 'EQUAL' expr 'SEMI' 'SEMI' decls
 gotos:

state 30:
  items:
    decls -> let_rec_head . args_list_one 'COLON' typ 'EQUAL' expr 'SEMI' 'SEMI' decls
    decls -> let_rec_head . 'COLON' typ 'REFINES' refn 'EQUAL' 'HOLE'
    decls -> let_rec_head . 'COLON' typ 'EQUAL' 'HOLE'

  actions:
    action 'EOF' (noprec):   error
    action 'TUP' (noprec):   error
    action 'CTOR_ALONE' (noprec):   error
    action 'CTOR_ARG' (noprec):   error
    action 'P4' (noprec):   error
    action 'P3' (noprec):   error
    action 'P2' (noprec):   error
    action 'P1' (noprec):   error
    action 'OR' (noprec):   error
    action 'AND' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LPAREN' (noprec):   shift 68
    action 'PIPE' (noprec):   error
    action 'STAR' (noprec):   error
    action 'COLON' (noprec):   shift 39
    action 'COMMA' (noprec):   error
    action 'ARROW' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'REFINES' (noprec):   error
    action 'HOLE' (noprec):   error
    action 'WITH' (noprec):   error
    action 'NOT' (noprec):   error
    action 'UNIT' (noprec):   error
    action 'REC' (noprec):   error
    action 'LET' (noprec):   error
    action 'OF' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'FUN' (noprec):   error
    action 'TICK' (noprec):   error
    action 'PROJ' (noprec):   error
    action 'UID' (noprec):   error
    action 'LID' (noprec):   error
    action 'INT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto arg: 73
    goto args_list_one: 31

state 31:
  items:
    decls -> let_rec_head args_list_one . 'COLON' typ 'EQUAL' expr 'SEMI' 'SEMI' decls
    args_list_one -> args_list_one . arg

  actions:
    action 'EOF' (noprec):   error
    action 'TUP' (noprec):   error
    action 'CTOR_ALONE' (noprec):   error
    action 'CTOR_ARG' (noprec):   error
    action 'P4' (noprec):   error
    action 'P3' (noprec):   error
    action 'P2' (noprec):   error
    action 'P1' (noprec):   error
    action 'OR' (noprec):   error
    action 'AND' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LPAREN' (noprec):   shift 68
    action 'PIPE' (noprec):   error
    action 'STAR' (noprec):   error
    action 'COLON' (noprec):   shift 32
    action 'COMMA' (noprec):   error
    action 'ARROW' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'REFINES' (noprec):   error
    action 'HOLE' (noprec):   error
    action 'WITH' (noprec):   error
    action 'NOT' (noprec):   error
    action 'UNIT' (noprec):   error
    action 'REC' (noprec):   error
    action 'LET' (noprec):   error
    action 'OF' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'FUN' (noprec):   error
    action 'TICK' (noprec):   error
    action 'PROJ' (noprec):   error
    action 'UID' (noprec):   error
    action 'LID' (noprec):   error
    action 'INT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto arg: 74

state 32:
  items:
    decls -> let_rec_head args_list_one 'COLON' . typ 'EQUAL' expr 'SEMI' 'SEMI' decls

  actions:
    action 'EOF' (noprec):   error
    action 'TUP' (noprec):   error
    action 'CTOR_ALONE' (noprec):   error
    action 'CTOR_ARG' (noprec):   error
    action 'P4' (noprec):   error
    action 'P3' (noprec):   error
    action 'P2' (noprec):   error
    action 'P1' (noprec):   error
    action 'OR' (noprec):   error
    action 'AND' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LPAREN' (noprec):   shift 126
    action 'PIPE' (noprec):   error
    action 'STAR' (noprec):   error
    action 'COLON' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'ARROW' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'REFINES' (noprec):   error
    action 'HOLE' (noprec):   error
    action 'WITH' (noprec):   error
    action 'NOT' (noprec):   error
    action 'UNIT' (noprec):   shift 117
    action 'REC' (noprec):   error
    action 'LET' (noprec):   error
    action 'OF' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'FUN' (noprec):   error
    action 'TICK' (noprec):   shift 124
    action 'PROJ' (noprec):   error
    action 'UID' (noprec):   error
    action 'LID' (noprec):   shift 133
    action 'INT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto typ: 33
    goto typ_in_tup: 144
    goto typ_base: 123
    goto typ_star_one: 125
    goto typ_star: 141

state 33:
  items:
    decls -> let_rec_head args_list_one 'COLON' typ . 'EQUAL' expr 'SEMI' 'SEMI' decls
    typ -> typ . 'ARROW' typ

  actions:
    action 'EOF' (noprec):   error
    action 'TUP' (noprec):   error
    action 'CTOR_ALONE' (noprec):   error
    action 'CTOR_ARG' (noprec):   error
    action 'P4' (noprec):   error
    action 'P3' (noprec):   error
    action 'P2' (noprec):   error
    action 'P1' (noprec):   error
    action 'OR' (noprec):   error
    action 'AND' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'PIPE' (noprec):   error
    action 'STAR' (noprec):   error
    action 'COLON' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'ARROW' (explicit right 9993):   shift 122
    action 'EQUAL' (noprec):   shift 34
    action 'REFINES' (noprec):   error
    action 'HOLE' (noprec):   error
    action 'WITH' (noprec):   error
    action 'NOT' (noprec):   error
    action 'UNIT' (noprec):   error
    action 'REC' (noprec):   error
    action 'LET' (noprec):   error
    action 'OF' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'FUN' (noprec):   error
    action 'TICK' (noprec):   error
    action 'PROJ' (noprec):   error
    action 'UID' (noprec):   error
    action 'LID' (noprec):   error
    action 'INT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 34:
  items:
    decls -> let_rec_head args_list_one 'COLON' typ 'EQUAL' . expr 'SEMI' 'SEMI' decls

  actions:
    action 'EOF' (noprec):   error
    action 'TUP' (noprec):   error
    action 'CTOR_ALONE' (noprec):   error
    action 'CTOR_ARG' (noprec):   error
    action 'P4' (noprec):   error
    action 'P3' (noprec):   error
    action 'P2' (noprec):   error
    action 'P1' (noprec):   error
    action 'OR' (noprec):   error
    action 'AND' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LBRACKET' (noprec):   shift 158
    action 'RPAREN' (noprec):   error
    action 'LPAREN' (noprec):   shift 150
    action 'PIPE' (noprec):   error
    action 'STAR' (noprec):   error
    action 'COLON' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'ARROW' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'REFINES' (noprec):   error
    action 'HOLE' (noprec):   error
    action 'WITH' (noprec):   error
    action 'NOT' (noprec):   error
    action 'UNIT' (noprec):   error
    action 'REC' (noprec):   error
    action 'LET' (noprec):   error
    action 'OF' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'MATCH' (noprec):   shift 170
    action 'FUN' (noprec):   shift 166
    action 'TICK' (noprec):   error
    action 'PROJ' (noprec):   shift 162
    action 'UID' (noprec):   shift 149
    action 'LID' (noprec):   shift 152
    action 'INT' (noprec):   shift 157
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto expr: 35
    goto expr_p2: 148
    goto expr_p1: 147
    goto app_chain: 165
    goto ctor_chain: 164

state 35:
  items:
    decls -> let_rec_head args_list_one 'COLON' typ 'EQUAL' expr . 'SEMI' 'SEMI' decls

  actions:
    action 'EOF' (noprec):   error
    action 'TUP' (noprec):   error
    action 'CTOR_ALONE' (noprec):   error
    action 'CTOR_ARG' (noprec):   error
    action 'P4' (noprec):   error
    action 'P3' (noprec):   error
    action 'P2' (noprec):   error
    action 'P1' (noprec):   error
    action 'OR' (noprec):   error
    action 'AND' (noprec):   error
    action 'SEMI' (noprec):   shift 36
    action 'RBRACKET' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'PIPE' (noprec):   error
    action 'STAR' (noprec):   error
    action 'COLON' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'ARROW' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'REFINES' (noprec):   error
    action 'HOLE' (noprec):   error
    action 'WITH' (noprec):   error
    action 'NOT' (noprec):   error
    action 'UNIT' (noprec):   error
    action 'REC' (noprec):   error
    action 'LET' (noprec):   error
    action 'OF' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'FUN' (noprec):   error
    action 'TICK' (noprec):   error
    action 'PROJ' (noprec):   error
    action 'UID' (noprec):   error
    action 'LID' (noprec):   error
    action 'INT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 36:
  items:
    decls -> let_rec_head args_list_one 'COLON' typ 'EQUAL' expr 'SEMI' . 'SEMI' decls

  actions:
    action 'EOF' (noprec):   error
    action 'TUP' (noprec):   error
    action 'CTOR_ALONE' (noprec):   error
    action 'CTOR_ARG' (noprec):   error
    action 'P4' (noprec):   error
    action 'P3' (noprec):   error
    action 'P2' (noprec):   error
    action 'P1' (noprec):   error
    action 'OR' (noprec):   error
    action 'AND' (noprec):   error
    action 'SEMI' (noprec):   shift 37
    action 'RBRACKET' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'PIPE' (noprec):   error
    action 'STAR' (noprec):   error
    action 'COLON' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'ARROW' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'REFINES' (noprec):   error
    action 'HOLE' (noprec):   error
    action 'WITH' (noprec):   error
    action 'NOT' (noprec):   error
    action 'UNIT' (noprec):   error
    action 'REC' (noprec):   error
    action 'LET' (noprec):   error
    action 'OF' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'FUN' (noprec):   error
    action 'TICK' (noprec):   error
    action 'PROJ' (noprec):   error
    action 'UID' (noprec):   error
    action 'LID' (noprec):   error
    action 'INT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 37:
  items:
    decls -> let_rec_head args_list_one 'COLON' typ 'EQUAL' expr 'SEMI' 'SEMI' . decls

  actions:
    action 'EOF' (noprec):   error
    action 'TUP' (noprec):   error
    action 'CTOR_ALONE' (noprec):   error
    action 'CTOR_ARG' (noprec):   error
    action 'P4' (noprec):   error
    action 'P3' (noprec):   error
    action 'P2' (noprec):   error
    action 'P1' (noprec):   error
    action 'OR' (noprec):   error
    action 'AND' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'PIPE' (noprec):   error
    action 'STAR' (noprec):   error
    action 'COLON' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'ARROW' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'REFINES' (noprec):   error
    action 'HOLE' (noprec):   error
    action 'WITH' (noprec):   error
    action 'NOT' (noprec):   error
    action 'UNIT' (noprec):   error
    action 'REC' (noprec):   error
    action 'LET' (noprec):   shift 20
    action 'OF' (noprec):   error
    action 'TYPE' (noprec):   shift 3
    action 'MATCH' (noprec):   error
    action 'FUN' (noprec):   error
    action 'TICK' (noprec):   error
    action 'PROJ' (noprec):   error
    action 'UID' (noprec):   error
    action 'LID' (noprec):   error
    action 'INT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto decls: 38
    goto let_head: 47
    goto let_rec_head: 30

state 38:
  items:
    decls -> let_rec_head args_list_one 'COLON' typ 'EQUAL' expr 'SEMI' 'SEMI' decls . 

  actions:
    action 'EOF' (noprec):   reduce decls --> let_rec_head args_list_one 'COLON' typ 'EQUAL' expr 'SEMI' 'SEMI' decls
    action 'TUP' (noprec):   reduce decls --> let_rec_head args_list_one 'COLON' typ 'EQUAL' expr 'SEMI' 'SEMI' decls
    action 'CTOR_ALONE' (noprec):   reduce decls --> let_rec_head args_list_one 'COLON' typ 'EQUAL' expr 'SEMI' 'SEMI' decls
    action 'CTOR_ARG' (noprec):   reduce decls --> let_rec_head args_list_one 'COLON' typ 'EQUAL' expr 'SEMI' 'SEMI' decls
    action 'P4' (noprec):   reduce decls --> let_rec_head args_list_one 'COLON' typ 'EQUAL' expr 'SEMI' 'SEMI' decls
    action 'P3' (noprec):   reduce decls --> let_rec_head args_list_one 'COLON' typ 'EQUAL' expr 'SEMI' 'SEMI' decls
    action 'P2' (noprec):   reduce decls --> let_rec_head args_list_one 'COLON' typ 'EQUAL' expr 'SEMI' 'SEMI' decls
    action 'P1' (noprec):   reduce decls --> let_rec_head args_list_one 'COLON' typ 'EQUAL' expr 'SEMI' 'SEMI' decls
    action 'OR' (noprec):   reduce decls --> let_rec_head args_list_one 'COLON' typ 'EQUAL' expr 'SEMI' 'SEMI' decls
    action 'AND' (noprec):   reduce decls --> let_rec_head args_list_one 'COLON' typ 'EQUAL' expr 'SEMI' 'SEMI' decls
    action 'SEMI' (noprec):   reduce decls --> let_rec_head args_list_one 'COLON' typ 'EQUAL' expr 'SEMI' 'SEMI' decls
    action 'RBRACKET' (noprec):   reduce decls --> let_rec_head args_list_one 'COLON' typ 'EQUAL' expr 'SEMI' 'SEMI' decls
    action 'LBRACKET' (noprec):   reduce decls --> let_rec_head args_list_one 'COLON' typ 'EQUAL' expr 'SEMI' 'SEMI' decls
    action 'RPAREN' (noprec):   reduce decls --> let_rec_head args_list_one 'COLON' typ 'EQUAL' expr 'SEMI' 'SEMI' decls
    action 'LPAREN' (noprec):   reduce decls --> let_rec_head args_list_one 'COLON' typ 'EQUAL' expr 'SEMI' 'SEMI' decls
    action 'PIPE' (noprec):   reduce decls --> let_rec_head args_list_one 'COLON' typ 'EQUAL' expr 'SEMI' 'SEMI' decls
    action 'STAR' (noprec):   reduce decls --> let_rec_head args_list_one 'COLON' typ 'EQUAL' expr 'SEMI' 'SEMI' decls
    action 'COLON' (noprec):   reduce decls --> let_rec_head args_list_one 'COLON' typ 'EQUAL' expr 'SEMI' 'SEMI' decls
    action 'COMMA' (noprec):   reduce decls --> let_rec_head args_list_one 'COLON' typ 'EQUAL' expr 'SEMI' 'SEMI' decls
    action 'ARROW' (noprec):   reduce decls --> let_rec_head args_list_one 'COLON' typ 'EQUAL' expr 'SEMI' 'SEMI' decls
    action 'EQUAL' (noprec):   reduce decls --> let_rec_head args_list_one 'COLON' typ 'EQUAL' expr 'SEMI' 'SEMI' decls
    action 'REFINES' (noprec):   reduce decls --> let_rec_head args_list_one 'COLON' typ 'EQUAL' expr 'SEMI' 'SEMI' decls
    action 'HOLE' (noprec):   reduce decls --> let_rec_head args_list_one 'COLON' typ 'EQUAL' expr 'SEMI' 'SEMI' decls
    action 'WITH' (noprec):   reduce decls --> let_rec_head args_list_one 'COLON' typ 'EQUAL' expr 'SEMI' 'SEMI' decls
    action 'NOT' (noprec):   reduce decls --> let_rec_head args_list_one 'COLON' typ 'EQUAL' expr 'SEMI' 'SEMI' decls
    action 'UNIT' (noprec):   reduce decls --> let_rec_head args_list_one 'COLON' typ 'EQUAL' expr 'SEMI' 'SEMI' decls
    action 'REC' (noprec):   reduce decls --> let_rec_head args_list_one 'COLON' typ 'EQUAL' expr 'SEMI' 'SEMI' decls
    action 'LET' (noprec):   reduce decls --> let_rec_head args_list_one 'COLON' typ 'EQUAL' expr 'SEMI' 'SEMI' decls
    action 'OF' (noprec):   reduce decls --> let_rec_head args_list_one 'COLON' typ 'EQUAL' expr 'SEMI' 'SEMI' decls
    action 'TYPE' (noprec):   reduce decls --> let_rec_head args_list_one 'COLON' typ 'EQUAL' expr 'SEMI' 'SEMI' decls
    action 'MATCH' (noprec):   reduce decls --> let_rec_head args_list_one 'COLON' typ 'EQUAL' expr 'SEMI' 'SEMI' decls
    action 'FUN' (noprec):   reduce decls --> let_rec_head args_list_one 'COLON' typ 'EQUAL' expr 'SEMI' 'SEMI' decls
    action 'TICK' (noprec):   reduce decls --> let_rec_head args_list_one 'COLON' typ 'EQUAL' expr 'SEMI' 'SEMI' decls
    action 'PROJ' (noprec):   reduce decls --> let_rec_head args_list_one 'COLON' typ 'EQUAL' expr 'SEMI' 'SEMI' decls
    action 'UID' (noprec):   reduce decls --> let_rec_head args_list_one 'COLON' typ 'EQUAL' expr 'SEMI' 'SEMI' decls
    action 'LID' (noprec):   reduce decls --> let_rec_head args_list_one 'COLON' typ 'EQUAL' expr 'SEMI' 'SEMI' decls
    action 'INT' (noprec):   reduce decls --> let_rec_head args_list_one 'COLON' typ 'EQUAL' expr 'SEMI' 'SEMI' decls
    action 'error' (noprec):   reduce decls --> let_rec_head args_list_one 'COLON' typ 'EQUAL' expr 'SEMI' 'SEMI' decls
    action '#' (noprec):   reduce decls --> let_rec_head args_list_one 'COLON' typ 'EQUAL' expr 'SEMI' 'SEMI' decls
    action '$$' (noprec):   reduce decls --> let_rec_head args_list_one 'COLON' typ 'EQUAL' expr 'SEMI' 'SEMI' decls

  immediate action:   reduce decls --> let_rec_head args_list_one 'COLON' typ 'EQUAL' expr 'SEMI' 'SEMI' decls
 gotos:

state 39:
  items:
    decls -> let_rec_head 'COLON' . typ 'REFINES' refn 'EQUAL' 'HOLE'
    decls -> let_rec_head 'COLON' . typ 'EQUAL' 'HOLE'

  actions:
    action 'EOF' (noprec):   error
    action 'TUP' (noprec):   error
    action 'CTOR_ALONE' (noprec):   error
    action 'CTOR_ARG' (noprec):   error
    action 'P4' (noprec):   error
    action 'P3' (noprec):   error
    action 'P2' (noprec):   error
    action 'P1' (noprec):   error
    action 'OR' (noprec):   error
    action 'AND' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LPAREN' (noprec):   shift 126
    action 'PIPE' (noprec):   error
    action 'STAR' (noprec):   error
    action 'COLON' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'ARROW' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'REFINES' (noprec):   error
    action 'HOLE' (noprec):   error
    action 'WITH' (noprec):   error
    action 'NOT' (noprec):   error
    action 'UNIT' (noprec):   shift 117
    action 'REC' (noprec):   error
    action 'LET' (noprec):   error
    action 'OF' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'FUN' (noprec):   error
    action 'TICK' (noprec):   shift 124
    action 'PROJ' (noprec):   error
    action 'UID' (noprec):   error
    action 'LID' (noprec):   shift 133
    action 'INT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto typ: 40
    goto typ_in_tup: 144
    goto typ_base: 123
    goto typ_star_one: 125
    goto typ_star: 141

state 40:
  items:
    decls -> let_rec_head 'COLON' typ . 'REFINES' refn 'EQUAL' 'HOLE'
    decls -> let_rec_head 'COLON' typ . 'EQUAL' 'HOLE'
    typ -> typ . 'ARROW' typ

  actions:
    action 'EOF' (noprec):   error
    action 'TUP' (noprec):   error
    action 'CTOR_ALONE' (noprec):   error
    action 'CTOR_ARG' (noprec):   error
    action 'P4' (noprec):   error
    action 'P3' (noprec):   error
    action 'P2' (noprec):   error
    action 'P1' (noprec):   error
    action 'OR' (noprec):   error
    action 'AND' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'PIPE' (noprec):   error
    action 'STAR' (noprec):   error
    action 'COLON' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'ARROW' (explicit right 9993):   shift 122
    action 'EQUAL' (noprec):   shift 45
    action 'REFINES' (noprec):   shift 41
    action 'HOLE' (noprec):   error
    action 'WITH' (noprec):   error
    action 'NOT' (noprec):   error
    action 'UNIT' (noprec):   error
    action 'REC' (noprec):   error
    action 'LET' (noprec):   error
    action 'OF' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'FUN' (noprec):   error
    action 'TICK' (noprec):   error
    action 'PROJ' (noprec):   error
    action 'UID' (noprec):   error
    action 'LID' (noprec):   error
    action 'INT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 41:
  items:
    decls -> let_rec_head 'COLON' typ 'REFINES' . refn 'EQUAL' 'HOLE'

  actions:
    action 'EOF' (noprec):   error
    action 'TUP' (noprec):   error
    action 'CTOR_ALONE' (noprec):   error
    action 'CTOR_ARG' (noprec):   error
    action 'P4' (noprec):   error
    action 'P3' (noprec):   error
    action 'P2' (noprec):   error
    action 'P1' (noprec):   error
    action 'OR' (noprec):   shift 91
    action 'AND' (noprec):   shift 87
    action 'SEMI' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LBRACKET' (noprec):   shift 80
    action 'RPAREN' (noprec):   error
    action 'LPAREN' (noprec):   shift 104
    action 'PIPE' (noprec):   error
    action 'STAR' (noprec):   error
    action 'COLON' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'ARROW' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'REFINES' (noprec):   error
    action 'HOLE' (noprec):   error
    action 'WITH' (noprec):   error
    action 'NOT' (noprec):   shift 83
    action 'UNIT' (noprec):   error
    action 'REC' (noprec):   error
    action 'LET' (noprec):   error
    action 'OF' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'FUN' (noprec):   error
    action 'TICK' (noprec):   shift 111
    action 'PROJ' (noprec):   error
    action 'UID' (noprec):   shift 109
    action 'LID' (noprec):   shift 110
    action 'INT' (noprec):   shift 79
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto refn: 42

state 42:
  items:
    decls -> let_rec_head 'COLON' typ 'REFINES' refn . 'EQUAL' 'HOLE'
    refn -> refn . 'ARROW' refn

  actions:
    action 'EOF' (noprec):   error
    action 'TUP' (noprec):   error
    action 'CTOR_ALONE' (noprec):   error
    action 'CTOR_ARG' (noprec):   error
    action 'P4' (noprec):   error
    action 'P3' (noprec):   error
    action 'P2' (noprec):   error
    action 'P1' (noprec):   error
    action 'OR' (noprec):   error
    action 'AND' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'PIPE' (noprec):   error
    action 'STAR' (noprec):   error
    action 'COLON' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'ARROW' (explicit right 9993):   shift 103
    action 'EQUAL' (noprec):   shift 43
    action 'REFINES' (noprec):   error
    action 'HOLE' (noprec):   error
    action 'WITH' (noprec):   error
    action 'NOT' (noprec):   error
    action 'UNIT' (noprec):   error
    action 'REC' (noprec):   error
    action 'LET' (noprec):   error
    action 'OF' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'FUN' (noprec):   error
    action 'TICK' (noprec):   error
    action 'PROJ' (noprec):   error
    action 'UID' (noprec):   error
    action 'LID' (noprec):   error
    action 'INT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 43:
  items:
    decls -> let_rec_head 'COLON' typ 'REFINES' refn 'EQUAL' . 'HOLE'

  actions:
    action 'EOF' (noprec):   error
    action 'TUP' (noprec):   error
    action 'CTOR_ALONE' (noprec):   error
    action 'CTOR_ARG' (noprec):   error
    action 'P4' (noprec):   error
    action 'P3' (noprec):   error
    action 'P2' (noprec):   error
    action 'P1' (noprec):   error
    action 'OR' (noprec):   error
    action 'AND' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'PIPE' (noprec):   error
    action 'STAR' (noprec):   error
    action 'COLON' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'ARROW' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'REFINES' (noprec):   error
    action 'HOLE' (noprec):   shift 44
    action 'WITH' (noprec):   error
    action 'NOT' (noprec):   error
    action 'UNIT' (noprec):   error
    action 'REC' (noprec):   error
    action 'LET' (noprec):   error
    action 'OF' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'FUN' (noprec):   error
    action 'TICK' (noprec):   error
    action 'PROJ' (noprec):   error
    action 'UID' (noprec):   error
    action 'LID' (noprec):   error
    action 'INT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 44:
  items:
    decls -> let_rec_head 'COLON' typ 'REFINES' refn 'EQUAL' 'HOLE' . 

  actions:
    action 'EOF' (noprec):   reduce decls --> let_rec_head 'COLON' typ 'REFINES' refn 'EQUAL' 'HOLE'
    action 'TUP' (noprec):   reduce decls --> let_rec_head 'COLON' typ 'REFINES' refn 'EQUAL' 'HOLE'
    action 'CTOR_ALONE' (noprec):   reduce decls --> let_rec_head 'COLON' typ 'REFINES' refn 'EQUAL' 'HOLE'
    action 'CTOR_ARG' (noprec):   reduce decls --> let_rec_head 'COLON' typ 'REFINES' refn 'EQUAL' 'HOLE'
    action 'P4' (noprec):   reduce decls --> let_rec_head 'COLON' typ 'REFINES' refn 'EQUAL' 'HOLE'
    action 'P3' (noprec):   reduce decls --> let_rec_head 'COLON' typ 'REFINES' refn 'EQUAL' 'HOLE'
    action 'P2' (noprec):   reduce decls --> let_rec_head 'COLON' typ 'REFINES' refn 'EQUAL' 'HOLE'
    action 'P1' (noprec):   reduce decls --> let_rec_head 'COLON' typ 'REFINES' refn 'EQUAL' 'HOLE'
    action 'OR' (noprec):   reduce decls --> let_rec_head 'COLON' typ 'REFINES' refn 'EQUAL' 'HOLE'
    action 'AND' (noprec):   reduce decls --> let_rec_head 'COLON' typ 'REFINES' refn 'EQUAL' 'HOLE'
    action 'SEMI' (noprec):   reduce decls --> let_rec_head 'COLON' typ 'REFINES' refn 'EQUAL' 'HOLE'
    action 'RBRACKET' (noprec):   reduce decls --> let_rec_head 'COLON' typ 'REFINES' refn 'EQUAL' 'HOLE'
    action 'LBRACKET' (noprec):   reduce decls --> let_rec_head 'COLON' typ 'REFINES' refn 'EQUAL' 'HOLE'
    action 'RPAREN' (noprec):   reduce decls --> let_rec_head 'COLON' typ 'REFINES' refn 'EQUAL' 'HOLE'
    action 'LPAREN' (noprec):   reduce decls --> let_rec_head 'COLON' typ 'REFINES' refn 'EQUAL' 'HOLE'
    action 'PIPE' (noprec):   reduce decls --> let_rec_head 'COLON' typ 'REFINES' refn 'EQUAL' 'HOLE'
    action 'STAR' (noprec):   reduce decls --> let_rec_head 'COLON' typ 'REFINES' refn 'EQUAL' 'HOLE'
    action 'COLON' (noprec):   reduce decls --> let_rec_head 'COLON' typ 'REFINES' refn 'EQUAL' 'HOLE'
    action 'COMMA' (noprec):   reduce decls --> let_rec_head 'COLON' typ 'REFINES' refn 'EQUAL' 'HOLE'
    action 'ARROW' (noprec):   reduce decls --> let_rec_head 'COLON' typ 'REFINES' refn 'EQUAL' 'HOLE'
    action 'EQUAL' (noprec):   reduce decls --> let_rec_head 'COLON' typ 'REFINES' refn 'EQUAL' 'HOLE'
    action 'REFINES' (noprec):   reduce decls --> let_rec_head 'COLON' typ 'REFINES' refn 'EQUAL' 'HOLE'
    action 'HOLE' (noprec):   reduce decls --> let_rec_head 'COLON' typ 'REFINES' refn 'EQUAL' 'HOLE'
    action 'WITH' (noprec):   reduce decls --> let_rec_head 'COLON' typ 'REFINES' refn 'EQUAL' 'HOLE'
    action 'NOT' (noprec):   reduce decls --> let_rec_head 'COLON' typ 'REFINES' refn 'EQUAL' 'HOLE'
    action 'UNIT' (noprec):   reduce decls --> let_rec_head 'COLON' typ 'REFINES' refn 'EQUAL' 'HOLE'
    action 'REC' (noprec):   reduce decls --> let_rec_head 'COLON' typ 'REFINES' refn 'EQUAL' 'HOLE'
    action 'LET' (noprec):   reduce decls --> let_rec_head 'COLON' typ 'REFINES' refn 'EQUAL' 'HOLE'
    action 'OF' (noprec):   reduce decls --> let_rec_head 'COLON' typ 'REFINES' refn 'EQUAL' 'HOLE'
    action 'TYPE' (noprec):   reduce decls --> let_rec_head 'COLON' typ 'REFINES' refn 'EQUAL' 'HOLE'
    action 'MATCH' (noprec):   reduce decls --> let_rec_head 'COLON' typ 'REFINES' refn 'EQUAL' 'HOLE'
    action 'FUN' (noprec):   reduce decls --> let_rec_head 'COLON' typ 'REFINES' refn 'EQUAL' 'HOLE'
    action 'TICK' (noprec):   reduce decls --> let_rec_head 'COLON' typ 'REFINES' refn 'EQUAL' 'HOLE'
    action 'PROJ' (noprec):   reduce decls --> let_rec_head 'COLON' typ 'REFINES' refn 'EQUAL' 'HOLE'
    action 'UID' (noprec):   reduce decls --> let_rec_head 'COLON' typ 'REFINES' refn 'EQUAL' 'HOLE'
    action 'LID' (noprec):   reduce decls --> let_rec_head 'COLON' typ 'REFINES' refn 'EQUAL' 'HOLE'
    action 'INT' (noprec):   reduce decls --> let_rec_head 'COLON' typ 'REFINES' refn 'EQUAL' 'HOLE'
    action 'error' (noprec):   reduce decls --> let_rec_head 'COLON' typ 'REFINES' refn 'EQUAL' 'HOLE'
    action '#' (noprec):   reduce decls --> let_rec_head 'COLON' typ 'REFINES' refn 'EQUAL' 'HOLE'
    action '$$' (noprec):   reduce decls --> let_rec_head 'COLON' typ 'REFINES' refn 'EQUAL' 'HOLE'

  immediate action:   reduce decls --> let_rec_head 'COLON' typ 'REFINES' refn 'EQUAL' 'HOLE'
 gotos:

state 45:
  items:
    decls -> let_rec_head 'COLON' typ 'EQUAL' . 'HOLE'

  actions:
    action 'EOF' (noprec):   error
    action 'TUP' (noprec):   error
    action 'CTOR_ALONE' (noprec):   error
    action 'CTOR_ARG' (noprec):   error
    action 'P4' (noprec):   error
    action 'P3' (noprec):   error
    action 'P2' (noprec):   error
    action 'P1' (noprec):   error
    action 'OR' (noprec):   error
    action 'AND' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'PIPE' (noprec):   error
    action 'STAR' (noprec):   error
    action 'COLON' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'ARROW' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'REFINES' (noprec):   error
    action 'HOLE' (noprec):   shift 46
    action 'WITH' (noprec):   error
    action 'NOT' (noprec):   error
    action 'UNIT' (noprec):   error
    action 'REC' (noprec):   error
    action 'LET' (noprec):   error
    action 'OF' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'FUN' (noprec):   error
    action 'TICK' (noprec):   error
    action 'PROJ' (noprec):   error
    action 'UID' (noprec):   error
    action 'LID' (noprec):   error
    action 'INT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 46:
  items:
    decls -> let_rec_head 'COLON' typ 'EQUAL' 'HOLE' . 

  actions:
    action 'EOF' (noprec):   reduce decls --> let_rec_head 'COLON' typ 'EQUAL' 'HOLE'
    action 'TUP' (noprec):   reduce decls --> let_rec_head 'COLON' typ 'EQUAL' 'HOLE'
    action 'CTOR_ALONE' (noprec):   reduce decls --> let_rec_head 'COLON' typ 'EQUAL' 'HOLE'
    action 'CTOR_ARG' (noprec):   reduce decls --> let_rec_head 'COLON' typ 'EQUAL' 'HOLE'
    action 'P4' (noprec):   reduce decls --> let_rec_head 'COLON' typ 'EQUAL' 'HOLE'
    action 'P3' (noprec):   reduce decls --> let_rec_head 'COLON' typ 'EQUAL' 'HOLE'
    action 'P2' (noprec):   reduce decls --> let_rec_head 'COLON' typ 'EQUAL' 'HOLE'
    action 'P1' (noprec):   reduce decls --> let_rec_head 'COLON' typ 'EQUAL' 'HOLE'
    action 'OR' (noprec):   reduce decls --> let_rec_head 'COLON' typ 'EQUAL' 'HOLE'
    action 'AND' (noprec):   reduce decls --> let_rec_head 'COLON' typ 'EQUAL' 'HOLE'
    action 'SEMI' (noprec):   reduce decls --> let_rec_head 'COLON' typ 'EQUAL' 'HOLE'
    action 'RBRACKET' (noprec):   reduce decls --> let_rec_head 'COLON' typ 'EQUAL' 'HOLE'
    action 'LBRACKET' (noprec):   reduce decls --> let_rec_head 'COLON' typ 'EQUAL' 'HOLE'
    action 'RPAREN' (noprec):   reduce decls --> let_rec_head 'COLON' typ 'EQUAL' 'HOLE'
    action 'LPAREN' (noprec):   reduce decls --> let_rec_head 'COLON' typ 'EQUAL' 'HOLE'
    action 'PIPE' (noprec):   reduce decls --> let_rec_head 'COLON' typ 'EQUAL' 'HOLE'
    action 'STAR' (noprec):   reduce decls --> let_rec_head 'COLON' typ 'EQUAL' 'HOLE'
    action 'COLON' (noprec):   reduce decls --> let_rec_head 'COLON' typ 'EQUAL' 'HOLE'
    action 'COMMA' (noprec):   reduce decls --> let_rec_head 'COLON' typ 'EQUAL' 'HOLE'
    action 'ARROW' (noprec):   reduce decls --> let_rec_head 'COLON' typ 'EQUAL' 'HOLE'
    action 'EQUAL' (noprec):   reduce decls --> let_rec_head 'COLON' typ 'EQUAL' 'HOLE'
    action 'REFINES' (noprec):   reduce decls --> let_rec_head 'COLON' typ 'EQUAL' 'HOLE'
    action 'HOLE' (noprec):   reduce decls --> let_rec_head 'COLON' typ 'EQUAL' 'HOLE'
    action 'WITH' (noprec):   reduce decls --> let_rec_head 'COLON' typ 'EQUAL' 'HOLE'
    action 'NOT' (noprec):   reduce decls --> let_rec_head 'COLON' typ 'EQUAL' 'HOLE'
    action 'UNIT' (noprec):   reduce decls --> let_rec_head 'COLON' typ 'EQUAL' 'HOLE'
    action 'REC' (noprec):   reduce decls --> let_rec_head 'COLON' typ 'EQUAL' 'HOLE'
    action 'LET' (noprec):   reduce decls --> let_rec_head 'COLON' typ 'EQUAL' 'HOLE'
    action 'OF' (noprec):   reduce decls --> let_rec_head 'COLON' typ 'EQUAL' 'HOLE'
    action 'TYPE' (noprec):   reduce decls --> let_rec_head 'COLON' typ 'EQUAL' 'HOLE'
    action 'MATCH' (noprec):   reduce decls --> let_rec_head 'COLON' typ 'EQUAL' 'HOLE'
    action 'FUN' (noprec):   reduce decls --> let_rec_head 'COLON' typ 'EQUAL' 'HOLE'
    action 'TICK' (noprec):   reduce decls --> let_rec_head 'COLON' typ 'EQUAL' 'HOLE'
    action 'PROJ' (noprec):   reduce decls --> let_rec_head 'COLON' typ 'EQUAL' 'HOLE'
    action 'UID' (noprec):   reduce decls --> let_rec_head 'COLON' typ 'EQUAL' 'HOLE'
    action 'LID' (noprec):   reduce decls --> let_rec_head 'COLON' typ 'EQUAL' 'HOLE'
    action 'INT' (noprec):   reduce decls --> let_rec_head 'COLON' typ 'EQUAL' 'HOLE'
    action 'error' (noprec):   reduce decls --> let_rec_head 'COLON' typ 'EQUAL' 'HOLE'
    action '#' (noprec):   reduce decls --> let_rec_head 'COLON' typ 'EQUAL' 'HOLE'
    action '$$' (noprec):   reduce decls --> let_rec_head 'COLON' typ 'EQUAL' 'HOLE'

  immediate action:   reduce decls --> let_rec_head 'COLON' typ 'EQUAL' 'HOLE'
 gotos:

state 47:
  items:
    decls -> let_head . 'EQUAL' expr 'SEMI' 'SEMI' decls
    decls -> let_head . 'REFINES' refn 'EQUAL' 'HOLE'
    decls -> let_head . 'EQUAL' 'HOLE'

  actions:
    action 'EOF' (noprec):   error
    action 'TUP' (noprec):   error
    action 'CTOR_ALONE' (noprec):   error
    action 'CTOR_ARG' (noprec):   error
    action 'P4' (noprec):   error
    action 'P3' (noprec):   error
    action 'P2' (noprec):   error
    action 'P1' (noprec):   error
    action 'OR' (noprec):   error
    action 'AND' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'PIPE' (noprec):   error
    action 'STAR' (noprec):   error
    action 'COLON' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'ARROW' (noprec):   error
    action 'EQUAL' (noprec):   shift 48
    action 'REFINES' (noprec):   shift 53
    action 'HOLE' (noprec):   error
    action 'WITH' (noprec):   error
    action 'NOT' (noprec):   error
    action 'UNIT' (noprec):   error
    action 'REC' (noprec):   error
    action 'LET' (noprec):   error
    action 'OF' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'FUN' (noprec):   error
    action 'TICK' (noprec):   error
    action 'PROJ' (noprec):   error
    action 'UID' (noprec):   error
    action 'LID' (noprec):   error
    action 'INT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 48:
  items:
    decls -> let_head 'EQUAL' . expr 'SEMI' 'SEMI' decls
    decls -> let_head 'EQUAL' . 'HOLE'

  actions:
    action 'EOF' (noprec):   error
    action 'TUP' (noprec):   error
    action 'CTOR_ALONE' (noprec):   error
    action 'CTOR_ARG' (noprec):   error
    action 'P4' (noprec):   error
    action 'P3' (noprec):   error
    action 'P2' (noprec):   error
    action 'P1' (noprec):   error
    action 'OR' (noprec):   error
    action 'AND' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LBRACKET' (noprec):   shift 158
    action 'RPAREN' (noprec):   error
    action 'LPAREN' (noprec):   shift 150
    action 'PIPE' (noprec):   error
    action 'STAR' (noprec):   error
    action 'COLON' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'ARROW' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'REFINES' (noprec):   error
    action 'HOLE' (noprec):   shift 57
    action 'WITH' (noprec):   error
    action 'NOT' (noprec):   error
    action 'UNIT' (noprec):   error
    action 'REC' (noprec):   error
    action 'LET' (noprec):   error
    action 'OF' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'MATCH' (noprec):   shift 170
    action 'FUN' (noprec):   shift 166
    action 'TICK' (noprec):   error
    action 'PROJ' (noprec):   shift 162
    action 'UID' (noprec):   shift 149
    action 'LID' (noprec):   shift 152
    action 'INT' (noprec):   shift 157
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto expr: 49
    goto expr_p2: 148
    goto expr_p1: 147
    goto app_chain: 165
    goto ctor_chain: 164

state 49:
  items:
    decls -> let_head 'EQUAL' expr . 'SEMI' 'SEMI' decls

  actions:
    action 'EOF' (noprec):   error
    action 'TUP' (noprec):   error
    action 'CTOR_ALONE' (noprec):   error
    action 'CTOR_ARG' (noprec):   error
    action 'P4' (noprec):   error
    action 'P3' (noprec):   error
    action 'P2' (noprec):   error
    action 'P1' (noprec):   error
    action 'OR' (noprec):   error
    action 'AND' (noprec):   error
    action 'SEMI' (noprec):   shift 50
    action 'RBRACKET' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'PIPE' (noprec):   error
    action 'STAR' (noprec):   error
    action 'COLON' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'ARROW' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'REFINES' (noprec):   error
    action 'HOLE' (noprec):   error
    action 'WITH' (noprec):   error
    action 'NOT' (noprec):   error
    action 'UNIT' (noprec):   error
    action 'REC' (noprec):   error
    action 'LET' (noprec):   error
    action 'OF' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'FUN' (noprec):   error
    action 'TICK' (noprec):   error
    action 'PROJ' (noprec):   error
    action 'UID' (noprec):   error
    action 'LID' (noprec):   error
    action 'INT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 50:
  items:
    decls -> let_head 'EQUAL' expr 'SEMI' . 'SEMI' decls

  actions:
    action 'EOF' (noprec):   error
    action 'TUP' (noprec):   error
    action 'CTOR_ALONE' (noprec):   error
    action 'CTOR_ARG' (noprec):   error
    action 'P4' (noprec):   error
    action 'P3' (noprec):   error
    action 'P2' (noprec):   error
    action 'P1' (noprec):   error
    action 'OR' (noprec):   error
    action 'AND' (noprec):   error
    action 'SEMI' (noprec):   shift 51
    action 'RBRACKET' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'PIPE' (noprec):   error
    action 'STAR' (noprec):   error
    action 'COLON' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'ARROW' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'REFINES' (noprec):   error
    action 'HOLE' (noprec):   error
    action 'WITH' (noprec):   error
    action 'NOT' (noprec):   error
    action 'UNIT' (noprec):   error
    action 'REC' (noprec):   error
    action 'LET' (noprec):   error
    action 'OF' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'FUN' (noprec):   error
    action 'TICK' (noprec):   error
    action 'PROJ' (noprec):   error
    action 'UID' (noprec):   error
    action 'LID' (noprec):   error
    action 'INT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 51:
  items:
    decls -> let_head 'EQUAL' expr 'SEMI' 'SEMI' . decls

  actions:
    action 'EOF' (noprec):   error
    action 'TUP' (noprec):   error
    action 'CTOR_ALONE' (noprec):   error
    action 'CTOR_ARG' (noprec):   error
    action 'P4' (noprec):   error
    action 'P3' (noprec):   error
    action 'P2' (noprec):   error
    action 'P1' (noprec):   error
    action 'OR' (noprec):   error
    action 'AND' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'PIPE' (noprec):   error
    action 'STAR' (noprec):   error
    action 'COLON' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'ARROW' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'REFINES' (noprec):   error
    action 'HOLE' (noprec):   error
    action 'WITH' (noprec):   error
    action 'NOT' (noprec):   error
    action 'UNIT' (noprec):   error
    action 'REC' (noprec):   error
    action 'LET' (noprec):   shift 20
    action 'OF' (noprec):   error
    action 'TYPE' (noprec):   shift 3
    action 'MATCH' (noprec):   error
    action 'FUN' (noprec):   error
    action 'TICK' (noprec):   error
    action 'PROJ' (noprec):   error
    action 'UID' (noprec):   error
    action 'LID' (noprec):   error
    action 'INT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto decls: 52
    goto let_head: 47
    goto let_rec_head: 30

state 52:
  items:
    decls -> let_head 'EQUAL' expr 'SEMI' 'SEMI' decls . 

  actions:
    action 'EOF' (noprec):   reduce decls --> let_head 'EQUAL' expr 'SEMI' 'SEMI' decls
    action 'TUP' (noprec):   reduce decls --> let_head 'EQUAL' expr 'SEMI' 'SEMI' decls
    action 'CTOR_ALONE' (noprec):   reduce decls --> let_head 'EQUAL' expr 'SEMI' 'SEMI' decls
    action 'CTOR_ARG' (noprec):   reduce decls --> let_head 'EQUAL' expr 'SEMI' 'SEMI' decls
    action 'P4' (noprec):   reduce decls --> let_head 'EQUAL' expr 'SEMI' 'SEMI' decls
    action 'P3' (noprec):   reduce decls --> let_head 'EQUAL' expr 'SEMI' 'SEMI' decls
    action 'P2' (noprec):   reduce decls --> let_head 'EQUAL' expr 'SEMI' 'SEMI' decls
    action 'P1' (noprec):   reduce decls --> let_head 'EQUAL' expr 'SEMI' 'SEMI' decls
    action 'OR' (noprec):   reduce decls --> let_head 'EQUAL' expr 'SEMI' 'SEMI' decls
    action 'AND' (noprec):   reduce decls --> let_head 'EQUAL' expr 'SEMI' 'SEMI' decls
    action 'SEMI' (noprec):   reduce decls --> let_head 'EQUAL' expr 'SEMI' 'SEMI' decls
    action 'RBRACKET' (noprec):   reduce decls --> let_head 'EQUAL' expr 'SEMI' 'SEMI' decls
    action 'LBRACKET' (noprec):   reduce decls --> let_head 'EQUAL' expr 'SEMI' 'SEMI' decls
    action 'RPAREN' (noprec):   reduce decls --> let_head 'EQUAL' expr 'SEMI' 'SEMI' decls
    action 'LPAREN' (noprec):   reduce decls --> let_head 'EQUAL' expr 'SEMI' 'SEMI' decls
    action 'PIPE' (noprec):   reduce decls --> let_head 'EQUAL' expr 'SEMI' 'SEMI' decls
    action 'STAR' (noprec):   reduce decls --> let_head 'EQUAL' expr 'SEMI' 'SEMI' decls
    action 'COLON' (noprec):   reduce decls --> let_head 'EQUAL' expr 'SEMI' 'SEMI' decls
    action 'COMMA' (noprec):   reduce decls --> let_head 'EQUAL' expr 'SEMI' 'SEMI' decls
    action 'ARROW' (noprec):   reduce decls --> let_head 'EQUAL' expr 'SEMI' 'SEMI' decls
    action 'EQUAL' (noprec):   reduce decls --> let_head 'EQUAL' expr 'SEMI' 'SEMI' decls
    action 'REFINES' (noprec):   reduce decls --> let_head 'EQUAL' expr 'SEMI' 'SEMI' decls
    action 'HOLE' (noprec):   reduce decls --> let_head 'EQUAL' expr 'SEMI' 'SEMI' decls
    action 'WITH' (noprec):   reduce decls --> let_head 'EQUAL' expr 'SEMI' 'SEMI' decls
    action 'NOT' (noprec):   reduce decls --> let_head 'EQUAL' expr 'SEMI' 'SEMI' decls
    action 'UNIT' (noprec):   reduce decls --> let_head 'EQUAL' expr 'SEMI' 'SEMI' decls
    action 'REC' (noprec):   reduce decls --> let_head 'EQUAL' expr 'SEMI' 'SEMI' decls
    action 'LET' (noprec):   reduce decls --> let_head 'EQUAL' expr 'SEMI' 'SEMI' decls
    action 'OF' (noprec):   reduce decls --> let_head 'EQUAL' expr 'SEMI' 'SEMI' decls
    action 'TYPE' (noprec):   reduce decls --> let_head 'EQUAL' expr 'SEMI' 'SEMI' decls
    action 'MATCH' (noprec):   reduce decls --> let_head 'EQUAL' expr 'SEMI' 'SEMI' decls
    action 'FUN' (noprec):   reduce decls --> let_head 'EQUAL' expr 'SEMI' 'SEMI' decls
    action 'TICK' (noprec):   reduce decls --> let_head 'EQUAL' expr 'SEMI' 'SEMI' decls
    action 'PROJ' (noprec):   reduce decls --> let_head 'EQUAL' expr 'SEMI' 'SEMI' decls
    action 'UID' (noprec):   reduce decls --> let_head 'EQUAL' expr 'SEMI' 'SEMI' decls
    action 'LID' (noprec):   reduce decls --> let_head 'EQUAL' expr 'SEMI' 'SEMI' decls
    action 'INT' (noprec):   reduce decls --> let_head 'EQUAL' expr 'SEMI' 'SEMI' decls
    action 'error' (noprec):   reduce decls --> let_head 'EQUAL' expr 'SEMI' 'SEMI' decls
    action '#' (noprec):   reduce decls --> let_head 'EQUAL' expr 'SEMI' 'SEMI' decls
    action '$$' (noprec):   reduce decls --> let_head 'EQUAL' expr 'SEMI' 'SEMI' decls

  immediate action:   reduce decls --> let_head 'EQUAL' expr 'SEMI' 'SEMI' decls
 gotos:

state 53:
  items:
    decls -> let_head 'REFINES' . refn 'EQUAL' 'HOLE'

  actions:
    action 'EOF' (noprec):   error
    action 'TUP' (noprec):   error
    action 'CTOR_ALONE' (noprec):   error
    action 'CTOR_ARG' (noprec):   error
    action 'P4' (noprec):   error
    action 'P3' (noprec):   error
    action 'P2' (noprec):   error
    action 'P1' (noprec):   error
    action 'OR' (noprec):   shift 91
    action 'AND' (noprec):   shift 87
    action 'SEMI' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LBRACKET' (noprec):   shift 80
    action 'RPAREN' (noprec):   error
    action 'LPAREN' (noprec):   shift 104
    action 'PIPE' (noprec):   error
    action 'STAR' (noprec):   error
    action 'COLON' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'ARROW' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'REFINES' (noprec):   error
    action 'HOLE' (noprec):   error
    action 'WITH' (noprec):   error
    action 'NOT' (noprec):   shift 83
    action 'UNIT' (noprec):   error
    action 'REC' (noprec):   error
    action 'LET' (noprec):   error
    action 'OF' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'FUN' (noprec):   error
    action 'TICK' (noprec):   shift 111
    action 'PROJ' (noprec):   error
    action 'UID' (noprec):   shift 109
    action 'LID' (noprec):   shift 110
    action 'INT' (noprec):   shift 79
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto refn: 54

state 54:
  items:
    decls -> let_head 'REFINES' refn . 'EQUAL' 'HOLE'
    refn -> refn . 'ARROW' refn

  actions:
    action 'EOF' (noprec):   error
    action 'TUP' (noprec):   error
    action 'CTOR_ALONE' (noprec):   error
    action 'CTOR_ARG' (noprec):   error
    action 'P4' (noprec):   error
    action 'P3' (noprec):   error
    action 'P2' (noprec):   error
    action 'P1' (noprec):   error
    action 'OR' (noprec):   error
    action 'AND' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'PIPE' (noprec):   error
    action 'STAR' (noprec):   error
    action 'COLON' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'ARROW' (explicit right 9993):   shift 103
    action 'EQUAL' (noprec):   shift 55
    action 'REFINES' (noprec):   error
    action 'HOLE' (noprec):   error
    action 'WITH' (noprec):   error
    action 'NOT' (noprec):   error
    action 'UNIT' (noprec):   error
    action 'REC' (noprec):   error
    action 'LET' (noprec):   error
    action 'OF' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'FUN' (noprec):   error
    action 'TICK' (noprec):   error
    action 'PROJ' (noprec):   error
    action 'UID' (noprec):   error
    action 'LID' (noprec):   error
    action 'INT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 55:
  items:
    decls -> let_head 'REFINES' refn 'EQUAL' . 'HOLE'

  actions:
    action 'EOF' (noprec):   error
    action 'TUP' (noprec):   error
    action 'CTOR_ALONE' (noprec):   error
    action 'CTOR_ARG' (noprec):   error
    action 'P4' (noprec):   error
    action 'P3' (noprec):   error
    action 'P2' (noprec):   error
    action 'P1' (noprec):   error
    action 'OR' (noprec):   error
    action 'AND' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'PIPE' (noprec):   error
    action 'STAR' (noprec):   error
    action 'COLON' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'ARROW' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'REFINES' (noprec):   error
    action 'HOLE' (noprec):   shift 56
    action 'WITH' (noprec):   error
    action 'NOT' (noprec):   error
    action 'UNIT' (noprec):   error
    action 'REC' (noprec):   error
    action 'LET' (noprec):   error
    action 'OF' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'FUN' (noprec):   error
    action 'TICK' (noprec):   error
    action 'PROJ' (noprec):   error
    action 'UID' (noprec):   error
    action 'LID' (noprec):   error
    action 'INT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 56:
  items:
    decls -> let_head 'REFINES' refn 'EQUAL' 'HOLE' . 

  actions:
    action 'EOF' (noprec):   reduce decls --> let_head 'REFINES' refn 'EQUAL' 'HOLE'
    action 'TUP' (noprec):   reduce decls --> let_head 'REFINES' refn 'EQUAL' 'HOLE'
    action 'CTOR_ALONE' (noprec):   reduce decls --> let_head 'REFINES' refn 'EQUAL' 'HOLE'
    action 'CTOR_ARG' (noprec):   reduce decls --> let_head 'REFINES' refn 'EQUAL' 'HOLE'
    action 'P4' (noprec):   reduce decls --> let_head 'REFINES' refn 'EQUAL' 'HOLE'
    action 'P3' (noprec):   reduce decls --> let_head 'REFINES' refn 'EQUAL' 'HOLE'
    action 'P2' (noprec):   reduce decls --> let_head 'REFINES' refn 'EQUAL' 'HOLE'
    action 'P1' (noprec):   reduce decls --> let_head 'REFINES' refn 'EQUAL' 'HOLE'
    action 'OR' (noprec):   reduce decls --> let_head 'REFINES' refn 'EQUAL' 'HOLE'
    action 'AND' (noprec):   reduce decls --> let_head 'REFINES' refn 'EQUAL' 'HOLE'
    action 'SEMI' (noprec):   reduce decls --> let_head 'REFINES' refn 'EQUAL' 'HOLE'
    action 'RBRACKET' (noprec):   reduce decls --> let_head 'REFINES' refn 'EQUAL' 'HOLE'
    action 'LBRACKET' (noprec):   reduce decls --> let_head 'REFINES' refn 'EQUAL' 'HOLE'
    action 'RPAREN' (noprec):   reduce decls --> let_head 'REFINES' refn 'EQUAL' 'HOLE'
    action 'LPAREN' (noprec):   reduce decls --> let_head 'REFINES' refn 'EQUAL' 'HOLE'
    action 'PIPE' (noprec):   reduce decls --> let_head 'REFINES' refn 'EQUAL' 'HOLE'
    action 'STAR' (noprec):   reduce decls --> let_head 'REFINES' refn 'EQUAL' 'HOLE'
    action 'COLON' (noprec):   reduce decls --> let_head 'REFINES' refn 'EQUAL' 'HOLE'
    action 'COMMA' (noprec):   reduce decls --> let_head 'REFINES' refn 'EQUAL' 'HOLE'
    action 'ARROW' (noprec):   reduce decls --> let_head 'REFINES' refn 'EQUAL' 'HOLE'
    action 'EQUAL' (noprec):   reduce decls --> let_head 'REFINES' refn 'EQUAL' 'HOLE'
    action 'REFINES' (noprec):   reduce decls --> let_head 'REFINES' refn 'EQUAL' 'HOLE'
    action 'HOLE' (noprec):   reduce decls --> let_head 'REFINES' refn 'EQUAL' 'HOLE'
    action 'WITH' (noprec):   reduce decls --> let_head 'REFINES' refn 'EQUAL' 'HOLE'
    action 'NOT' (noprec):   reduce decls --> let_head 'REFINES' refn 'EQUAL' 'HOLE'
    action 'UNIT' (noprec):   reduce decls --> let_head 'REFINES' refn 'EQUAL' 'HOLE'
    action 'REC' (noprec):   reduce decls --> let_head 'REFINES' refn 'EQUAL' 'HOLE'
    action 'LET' (noprec):   reduce decls --> let_head 'REFINES' refn 'EQUAL' 'HOLE'
    action 'OF' (noprec):   reduce decls --> let_head 'REFINES' refn 'EQUAL' 'HOLE'
    action 'TYPE' (noprec):   reduce decls --> let_head 'REFINES' refn 'EQUAL' 'HOLE'
    action 'MATCH' (noprec):   reduce decls --> let_head 'REFINES' refn 'EQUAL' 'HOLE'
    action 'FUN' (noprec):   reduce decls --> let_head 'REFINES' refn 'EQUAL' 'HOLE'
    action 'TICK' (noprec):   reduce decls --> let_head 'REFINES' refn 'EQUAL' 'HOLE'
    action 'PROJ' (noprec):   reduce decls --> let_head 'REFINES' refn 'EQUAL' 'HOLE'
    action 'UID' (noprec):   reduce decls --> let_head 'REFINES' refn 'EQUAL' 'HOLE'
    action 'LID' (noprec):   reduce decls --> let_head 'REFINES' refn 'EQUAL' 'HOLE'
    action 'INT' (noprec):   reduce decls --> let_head 'REFINES' refn 'EQUAL' 'HOLE'
    action 'error' (noprec):   reduce decls --> let_head 'REFINES' refn 'EQUAL' 'HOLE'
    action '#' (noprec):   reduce decls --> let_head 'REFINES' refn 'EQUAL' 'HOLE'
    action '$$' (noprec):   reduce decls --> let_head 'REFINES' refn 'EQUAL' 'HOLE'

  immediate action:   reduce decls --> let_head 'REFINES' refn 'EQUAL' 'HOLE'
 gotos:

state 57:
  items:
    decls -> let_head 'EQUAL' 'HOLE' . 

  actions:
    action 'EOF' (noprec):   reduce decls --> let_head 'EQUAL' 'HOLE'
    action 'TUP' (noprec):   reduce decls --> let_head 'EQUAL' 'HOLE'
    action 'CTOR_ALONE' (noprec):   reduce decls --> let_head 'EQUAL' 'HOLE'
    action 'CTOR_ARG' (noprec):   reduce decls --> let_head 'EQUAL' 'HOLE'
    action 'P4' (noprec):   reduce decls --> let_head 'EQUAL' 'HOLE'
    action 'P3' (noprec):   reduce decls --> let_head 'EQUAL' 'HOLE'
    action 'P2' (noprec):   reduce decls --> let_head 'EQUAL' 'HOLE'
    action 'P1' (noprec):   reduce decls --> let_head 'EQUAL' 'HOLE'
    action 'OR' (noprec):   reduce decls --> let_head 'EQUAL' 'HOLE'
    action 'AND' (noprec):   reduce decls --> let_head 'EQUAL' 'HOLE'
    action 'SEMI' (noprec):   reduce decls --> let_head 'EQUAL' 'HOLE'
    action 'RBRACKET' (noprec):   reduce decls --> let_head 'EQUAL' 'HOLE'
    action 'LBRACKET' (noprec):   reduce decls --> let_head 'EQUAL' 'HOLE'
    action 'RPAREN' (noprec):   reduce decls --> let_head 'EQUAL' 'HOLE'
    action 'LPAREN' (noprec):   reduce decls --> let_head 'EQUAL' 'HOLE'
    action 'PIPE' (noprec):   reduce decls --> let_head 'EQUAL' 'HOLE'
    action 'STAR' (noprec):   reduce decls --> let_head 'EQUAL' 'HOLE'
    action 'COLON' (noprec):   reduce decls --> let_head 'EQUAL' 'HOLE'
    action 'COMMA' (noprec):   reduce decls --> let_head 'EQUAL' 'HOLE'
    action 'ARROW' (noprec):   reduce decls --> let_head 'EQUAL' 'HOLE'
    action 'EQUAL' (noprec):   reduce decls --> let_head 'EQUAL' 'HOLE'
    action 'REFINES' (noprec):   reduce decls --> let_head 'EQUAL' 'HOLE'
    action 'HOLE' (noprec):   reduce decls --> let_head 'EQUAL' 'HOLE'
    action 'WITH' (noprec):   reduce decls --> let_head 'EQUAL' 'HOLE'
    action 'NOT' (noprec):   reduce decls --> let_head 'EQUAL' 'HOLE'
    action 'UNIT' (noprec):   reduce decls --> let_head 'EQUAL' 'HOLE'
    action 'REC' (noprec):   reduce decls --> let_head 'EQUAL' 'HOLE'
    action 'LET' (noprec):   reduce decls --> let_head 'EQUAL' 'HOLE'
    action 'OF' (noprec):   reduce decls --> let_head 'EQUAL' 'HOLE'
    action 'TYPE' (noprec):   reduce decls --> let_head 'EQUAL' 'HOLE'
    action 'MATCH' (noprec):   reduce decls --> let_head 'EQUAL' 'HOLE'
    action 'FUN' (noprec):   reduce decls --> let_head 'EQUAL' 'HOLE'
    action 'TICK' (noprec):   reduce decls --> let_head 'EQUAL' 'HOLE'
    action 'PROJ' (noprec):   reduce decls --> let_head 'EQUAL' 'HOLE'
    action 'UID' (noprec):   reduce decls --> let_head 'EQUAL' 'HOLE'
    action 'LID' (noprec):   reduce decls --> let_head 'EQUAL' 'HOLE'
    action 'INT' (noprec):   reduce decls --> let_head 'EQUAL' 'HOLE'
    action 'error' (noprec):   reduce decls --> let_head 'EQUAL' 'HOLE'
    action '#' (noprec):   reduce decls --> let_head 'EQUAL' 'HOLE'
    action '$$' (noprec):   reduce decls --> let_head 'EQUAL' 'HOLE'

  immediate action:   reduce decls --> let_head 'EQUAL' 'HOLE'
 gotos:

state 58:
  items:
    type_ctor_one -> type_ctor . 

  actions:
    action 'EOF' (noprec):   reduce type_ctor_one --> type_ctor
    action 'TUP' (noprec):   reduce type_ctor_one --> type_ctor
    action 'CTOR_ALONE' (noprec):   reduce type_ctor_one --> type_ctor
    action 'CTOR_ARG' (noprec):   reduce type_ctor_one --> type_ctor
    action 'P4' (noprec):   reduce type_ctor_one --> type_ctor
    action 'P3' (noprec):   reduce type_ctor_one --> type_ctor
    action 'P2' (noprec):   reduce type_ctor_one --> type_ctor
    action 'P1' (noprec):   reduce type_ctor_one --> type_ctor
    action 'OR' (noprec):   reduce type_ctor_one --> type_ctor
    action 'AND' (noprec):   reduce type_ctor_one --> type_ctor
    action 'SEMI' (noprec):   reduce type_ctor_one --> type_ctor
    action 'RBRACKET' (noprec):   reduce type_ctor_one --> type_ctor
    action 'LBRACKET' (noprec):   reduce type_ctor_one --> type_ctor
    action 'RPAREN' (noprec):   reduce type_ctor_one --> type_ctor
    action 'LPAREN' (noprec):   reduce type_ctor_one --> type_ctor
    action 'PIPE' (noprec):   reduce type_ctor_one --> type_ctor
    action 'STAR' (noprec):   reduce type_ctor_one --> type_ctor
    action 'COLON' (noprec):   reduce type_ctor_one --> type_ctor
    action 'COMMA' (noprec):   reduce type_ctor_one --> type_ctor
    action 'ARROW' (noprec):   reduce type_ctor_one --> type_ctor
    action 'EQUAL' (noprec):   reduce type_ctor_one --> type_ctor
    action 'REFINES' (noprec):   reduce type_ctor_one --> type_ctor
    action 'HOLE' (noprec):   reduce type_ctor_one --> type_ctor
    action 'WITH' (noprec):   reduce type_ctor_one --> type_ctor
    action 'NOT' (noprec):   reduce type_ctor_one --> type_ctor
    action 'UNIT' (noprec):   reduce type_ctor_one --> type_ctor
    action 'REC' (noprec):   reduce type_ctor_one --> type_ctor
    action 'LET' (noprec):   reduce type_ctor_one --> type_ctor
    action 'OF' (noprec):   reduce type_ctor_one --> type_ctor
    action 'TYPE' (noprec):   reduce type_ctor_one --> type_ctor
    action 'MATCH' (noprec):   reduce type_ctor_one --> type_ctor
    action 'FUN' (noprec):   reduce type_ctor_one --> type_ctor
    action 'TICK' (noprec):   reduce type_ctor_one --> type_ctor
    action 'PROJ' (noprec):   reduce type_ctor_one --> type_ctor
    action 'UID' (noprec):   reduce type_ctor_one --> type_ctor
    action 'LID' (noprec):   reduce type_ctor_one --> type_ctor
    action 'INT' (noprec):   reduce type_ctor_one --> type_ctor
    action 'error' (noprec):   reduce type_ctor_one --> type_ctor
    action '#' (noprec):   reduce type_ctor_one --> type_ctor
    action '$$' (noprec):   reduce type_ctor_one --> type_ctor

  immediate action:   reduce type_ctor_one --> type_ctor
 gotos:

state 59:
  items:
    type_ctor_one -> type_ctor_one type_ctor . 

  actions:
    action 'EOF' (noprec):   reduce type_ctor_one --> type_ctor_one type_ctor
    action 'TUP' (noprec):   reduce type_ctor_one --> type_ctor_one type_ctor
    action 'CTOR_ALONE' (noprec):   reduce type_ctor_one --> type_ctor_one type_ctor
    action 'CTOR_ARG' (noprec):   reduce type_ctor_one --> type_ctor_one type_ctor
    action 'P4' (noprec):   reduce type_ctor_one --> type_ctor_one type_ctor
    action 'P3' (noprec):   reduce type_ctor_one --> type_ctor_one type_ctor
    action 'P2' (noprec):   reduce type_ctor_one --> type_ctor_one type_ctor
    action 'P1' (noprec):   reduce type_ctor_one --> type_ctor_one type_ctor
    action 'OR' (noprec):   reduce type_ctor_one --> type_ctor_one type_ctor
    action 'AND' (noprec):   reduce type_ctor_one --> type_ctor_one type_ctor
    action 'SEMI' (noprec):   reduce type_ctor_one --> type_ctor_one type_ctor
    action 'RBRACKET' (noprec):   reduce type_ctor_one --> type_ctor_one type_ctor
    action 'LBRACKET' (noprec):   reduce type_ctor_one --> type_ctor_one type_ctor
    action 'RPAREN' (noprec):   reduce type_ctor_one --> type_ctor_one type_ctor
    action 'LPAREN' (noprec):   reduce type_ctor_one --> type_ctor_one type_ctor
    action 'PIPE' (noprec):   reduce type_ctor_one --> type_ctor_one type_ctor
    action 'STAR' (noprec):   reduce type_ctor_one --> type_ctor_one type_ctor
    action 'COLON' (noprec):   reduce type_ctor_one --> type_ctor_one type_ctor
    action 'COMMA' (noprec):   reduce type_ctor_one --> type_ctor_one type_ctor
    action 'ARROW' (noprec):   reduce type_ctor_one --> type_ctor_one type_ctor
    action 'EQUAL' (noprec):   reduce type_ctor_one --> type_ctor_one type_ctor
    action 'REFINES' (noprec):   reduce type_ctor_one --> type_ctor_one type_ctor
    action 'HOLE' (noprec):   reduce type_ctor_one --> type_ctor_one type_ctor
    action 'WITH' (noprec):   reduce type_ctor_one --> type_ctor_one type_ctor
    action 'NOT' (noprec):   reduce type_ctor_one --> type_ctor_one type_ctor
    action 'UNIT' (noprec):   reduce type_ctor_one --> type_ctor_one type_ctor
    action 'REC' (noprec):   reduce type_ctor_one --> type_ctor_one type_ctor
    action 'LET' (noprec):   reduce type_ctor_one --> type_ctor_one type_ctor
    action 'OF' (noprec):   reduce type_ctor_one --> type_ctor_one type_ctor
    action 'TYPE' (noprec):   reduce type_ctor_one --> type_ctor_one type_ctor
    action 'MATCH' (noprec):   reduce type_ctor_one --> type_ctor_one type_ctor
    action 'FUN' (noprec):   reduce type_ctor_one --> type_ctor_one type_ctor
    action 'TICK' (noprec):   reduce type_ctor_one --> type_ctor_one type_ctor
    action 'PROJ' (noprec):   reduce type_ctor_one --> type_ctor_one type_ctor
    action 'UID' (noprec):   reduce type_ctor_one --> type_ctor_one type_ctor
    action 'LID' (noprec):   reduce type_ctor_one --> type_ctor_one type_ctor
    action 'INT' (noprec):   reduce type_ctor_one --> type_ctor_one type_ctor
    action 'error' (noprec):   reduce type_ctor_one --> type_ctor_one type_ctor
    action '#' (noprec):   reduce type_ctor_one --> type_ctor_one type_ctor
    action '$$' (noprec):   reduce type_ctor_one --> type_ctor_one type_ctor

  immediate action:   reduce type_ctor_one --> type_ctor_one type_ctor
 gotos:

state 60:
  items:
    type_ctor -> 'PIPE' . 'UID' 'OF' typ
    type_ctor -> 'PIPE' . 'UID'

  actions:
    action 'EOF' (noprec):   error
    action 'TUP' (noprec):   error
    action 'CTOR_ALONE' (noprec):   error
    action 'CTOR_ARG' (noprec):   error
    action 'P4' (noprec):   error
    action 'P3' (noprec):   error
    action 'P2' (noprec):   error
    action 'P1' (noprec):   error
    action 'OR' (noprec):   error
    action 'AND' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'PIPE' (noprec):   error
    action 'STAR' (noprec):   error
    action 'COLON' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'ARROW' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'REFINES' (noprec):   error
    action 'HOLE' (noprec):   error
    action 'WITH' (noprec):   error
    action 'NOT' (noprec):   error
    action 'UNIT' (noprec):   error
    action 'REC' (noprec):   error
    action 'LET' (noprec):   error
    action 'OF' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'FUN' (noprec):   error
    action 'TICK' (noprec):   error
    action 'PROJ' (noprec):   error
    action 'UID' (noprec):   shift 61
    action 'LID' (noprec):   error
    action 'INT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 61:
  items:
    type_ctor -> 'PIPE' 'UID' . 'OF' typ
    type_ctor -> 'PIPE' 'UID' . 

  actions:
    action 'EOF' (noprec):   reduce type_ctor --> 'PIPE' 'UID'
    action 'TUP' (noprec):   reduce type_ctor --> 'PIPE' 'UID'
    action 'CTOR_ALONE' (noprec):   reduce type_ctor --> 'PIPE' 'UID'
    action 'CTOR_ARG' (noprec):   reduce type_ctor --> 'PIPE' 'UID'
    action 'P4' (noprec):   reduce type_ctor --> 'PIPE' 'UID'
    action 'P3' (noprec):   reduce type_ctor --> 'PIPE' 'UID'
    action 'P2' (noprec):   reduce type_ctor --> 'PIPE' 'UID'
    action 'P1' (noprec):   reduce type_ctor --> 'PIPE' 'UID'
    action 'OR' (noprec):   reduce type_ctor --> 'PIPE' 'UID'
    action 'AND' (noprec):   reduce type_ctor --> 'PIPE' 'UID'
    action 'SEMI' (noprec):   reduce type_ctor --> 'PIPE' 'UID'
    action 'RBRACKET' (noprec):   reduce type_ctor --> 'PIPE' 'UID'
    action 'LBRACKET' (noprec):   reduce type_ctor --> 'PIPE' 'UID'
    action 'RPAREN' (noprec):   reduce type_ctor --> 'PIPE' 'UID'
    action 'LPAREN' (noprec):   reduce type_ctor --> 'PIPE' 'UID'
    action 'PIPE' (noprec):   reduce type_ctor --> 'PIPE' 'UID'
    action 'STAR' (noprec):   reduce type_ctor --> 'PIPE' 'UID'
    action 'COLON' (noprec):   reduce type_ctor --> 'PIPE' 'UID'
    action 'COMMA' (noprec):   reduce type_ctor --> 'PIPE' 'UID'
    action 'ARROW' (noprec):   reduce type_ctor --> 'PIPE' 'UID'
    action 'EQUAL' (noprec):   reduce type_ctor --> 'PIPE' 'UID'
    action 'REFINES' (noprec):   reduce type_ctor --> 'PIPE' 'UID'
    action 'HOLE' (noprec):   reduce type_ctor --> 'PIPE' 'UID'
    action 'WITH' (noprec):   reduce type_ctor --> 'PIPE' 'UID'
    action 'NOT' (noprec):   reduce type_ctor --> 'PIPE' 'UID'
    action 'UNIT' (noprec):   reduce type_ctor --> 'PIPE' 'UID'
    action 'REC' (noprec):   reduce type_ctor --> 'PIPE' 'UID'
    action 'LET' (noprec):   reduce type_ctor --> 'PIPE' 'UID'
    action 'OF' (noprec):   shift 62
    action 'TYPE' (noprec):   reduce type_ctor --> 'PIPE' 'UID'
    action 'MATCH' (noprec):   reduce type_ctor --> 'PIPE' 'UID'
    action 'FUN' (noprec):   reduce type_ctor --> 'PIPE' 'UID'
    action 'TICK' (noprec):   reduce type_ctor --> 'PIPE' 'UID'
    action 'PROJ' (noprec):   reduce type_ctor --> 'PIPE' 'UID'
    action 'UID' (noprec):   reduce type_ctor --> 'PIPE' 'UID'
    action 'LID' (noprec):   reduce type_ctor --> 'PIPE' 'UID'
    action 'INT' (noprec):   reduce type_ctor --> 'PIPE' 'UID'
    action 'error' (noprec):   reduce type_ctor --> 'PIPE' 'UID'
    action '#' (noprec):   reduce type_ctor --> 'PIPE' 'UID'
    action '$$' (noprec):   reduce type_ctor --> 'PIPE' 'UID'

  immediate action: <none>
 gotos:

state 62:
  items:
    type_ctor -> 'PIPE' 'UID' 'OF' . typ

  actions:
    action 'EOF' (noprec):   error
    action 'TUP' (noprec):   error
    action 'CTOR_ALONE' (noprec):   error
    action 'CTOR_ARG' (noprec):   error
    action 'P4' (noprec):   error
    action 'P3' (noprec):   error
    action 'P2' (noprec):   error
    action 'P1' (noprec):   error
    action 'OR' (noprec):   error
    action 'AND' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LPAREN' (noprec):   shift 126
    action 'PIPE' (noprec):   error
    action 'STAR' (noprec):   error
    action 'COLON' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'ARROW' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'REFINES' (noprec):   error
    action 'HOLE' (noprec):   error
    action 'WITH' (noprec):   error
    action 'NOT' (noprec):   error
    action 'UNIT' (noprec):   shift 117
    action 'REC' (noprec):   error
    action 'LET' (noprec):   error
    action 'OF' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'FUN' (noprec):   error
    action 'TICK' (noprec):   shift 124
    action 'PROJ' (noprec):   error
    action 'UID' (noprec):   error
    action 'LID' (noprec):   shift 133
    action 'INT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto typ: 63
    goto typ_in_tup: 144
    goto typ_base: 123
    goto typ_star_one: 125
    goto typ_star: 141

state 63:
  items:
    type_ctor -> 'PIPE' 'UID' 'OF' typ . 
    typ -> typ . 'ARROW' typ

  actions:
    action 'EOF' (noprec):   reduce type_ctor --> 'PIPE' 'UID' 'OF' typ
    action 'TUP' (noprec):   reduce type_ctor --> 'PIPE' 'UID' 'OF' typ
    action 'CTOR_ALONE' (noprec):   reduce type_ctor --> 'PIPE' 'UID' 'OF' typ
    action 'CTOR_ARG' (noprec):   reduce type_ctor --> 'PIPE' 'UID' 'OF' typ
    action 'P4' (noprec):   reduce type_ctor --> 'PIPE' 'UID' 'OF' typ
    action 'P3' (noprec):   reduce type_ctor --> 'PIPE' 'UID' 'OF' typ
    action 'P2' (noprec):   reduce type_ctor --> 'PIPE' 'UID' 'OF' typ
    action 'P1' (noprec):   reduce type_ctor --> 'PIPE' 'UID' 'OF' typ
    action 'OR' (noprec):   reduce type_ctor --> 'PIPE' 'UID' 'OF' typ
    action 'AND' (noprec):   reduce type_ctor --> 'PIPE' 'UID' 'OF' typ
    action 'SEMI' (noprec):   reduce type_ctor --> 'PIPE' 'UID' 'OF' typ
    action 'RBRACKET' (noprec):   reduce type_ctor --> 'PIPE' 'UID' 'OF' typ
    action 'LBRACKET' (noprec):   reduce type_ctor --> 'PIPE' 'UID' 'OF' typ
    action 'RPAREN' (noprec):   reduce type_ctor --> 'PIPE' 'UID' 'OF' typ
    action 'LPAREN' (noprec):   reduce type_ctor --> 'PIPE' 'UID' 'OF' typ
    action 'PIPE' (noprec):   reduce type_ctor --> 'PIPE' 'UID' 'OF' typ
    action 'STAR' (noprec):   reduce type_ctor --> 'PIPE' 'UID' 'OF' typ
    action 'COLON' (noprec):   reduce type_ctor --> 'PIPE' 'UID' 'OF' typ
    action 'COMMA' (noprec):   reduce type_ctor --> 'PIPE' 'UID' 'OF' typ
    action 'ARROW' (explicit right 9993):   shift 122
    action 'EQUAL' (noprec):   reduce type_ctor --> 'PIPE' 'UID' 'OF' typ
    action 'REFINES' (noprec):   reduce type_ctor --> 'PIPE' 'UID' 'OF' typ
    action 'HOLE' (noprec):   reduce type_ctor --> 'PIPE' 'UID' 'OF' typ
    action 'WITH' (noprec):   reduce type_ctor --> 'PIPE' 'UID' 'OF' typ
    action 'NOT' (noprec):   reduce type_ctor --> 'PIPE' 'UID' 'OF' typ
    action 'UNIT' (noprec):   reduce type_ctor --> 'PIPE' 'UID' 'OF' typ
    action 'REC' (noprec):   reduce type_ctor --> 'PIPE' 'UID' 'OF' typ
    action 'LET' (noprec):   reduce type_ctor --> 'PIPE' 'UID' 'OF' typ
    action 'OF' (noprec):   reduce type_ctor --> 'PIPE' 'UID' 'OF' typ
    action 'TYPE' (noprec):   reduce type_ctor --> 'PIPE' 'UID' 'OF' typ
    action 'MATCH' (noprec):   reduce type_ctor --> 'PIPE' 'UID' 'OF' typ
    action 'FUN' (noprec):   reduce type_ctor --> 'PIPE' 'UID' 'OF' typ
    action 'TICK' (noprec):   reduce type_ctor --> 'PIPE' 'UID' 'OF' typ
    action 'PROJ' (noprec):   reduce type_ctor --> 'PIPE' 'UID' 'OF' typ
    action 'UID' (noprec):   reduce type_ctor --> 'PIPE' 'UID' 'OF' typ
    action 'LID' (noprec):   reduce type_ctor --> 'PIPE' 'UID' 'OF' typ
    action 'INT' (noprec):   reduce type_ctor --> 'PIPE' 'UID' 'OF' typ
    action 'error' (noprec):   reduce type_ctor --> 'PIPE' 'UID' 'OF' typ
    action '#' (noprec):   reduce type_ctor --> 'PIPE' 'UID' 'OF' typ
    action '$$' (noprec):   reduce type_ctor --> 'PIPE' 'UID' 'OF' typ

  immediate action: <none>
 gotos:

state 64:
  items:
    tick_comma_one -> tick_comma . 'COMMA' 'TICK'
    tick_comma -> tick_comma . 'COMMA' 'TICK'

  actions:
    action 'EOF' (noprec):   error
    action 'TUP' (noprec):   error
    action 'CTOR_ALONE' (noprec):   error
    action 'CTOR_ARG' (noprec):   error
    action 'P4' (noprec):   error
    action 'P3' (noprec):   error
    action 'P2' (noprec):   error
    action 'P1' (noprec):   error
    action 'OR' (noprec):   error
    action 'AND' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'PIPE' (noprec):   error
    action 'STAR' (noprec):   error
    action 'COLON' (noprec):   error
    action 'COMMA' (noprec):   shift 65
    action 'ARROW' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'REFINES' (noprec):   error
    action 'HOLE' (noprec):   error
    action 'WITH' (noprec):   error
    action 'NOT' (noprec):   error
    action 'UNIT' (noprec):   error
    action 'REC' (noprec):   error
    action 'LET' (noprec):   error
    action 'OF' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'FUN' (noprec):   error
    action 'TICK' (noprec):   error
    action 'PROJ' (noprec):   error
    action 'UID' (noprec):   error
    action 'LID' (noprec):   error
    action 'INT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 65:
  items:
    tick_comma_one -> tick_comma 'COMMA' . 'TICK'
    tick_comma -> tick_comma 'COMMA' . 'TICK'

  actions:
    action 'EOF' (noprec):   error
    action 'TUP' (noprec):   error
    action 'CTOR_ALONE' (noprec):   error
    action 'CTOR_ARG' (noprec):   error
    action 'P4' (noprec):   error
    action 'P3' (noprec):   error
    action 'P2' (noprec):   error
    action 'P1' (noprec):   error
    action 'OR' (noprec):   error
    action 'AND' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'PIPE' (noprec):   error
    action 'STAR' (noprec):   error
    action 'COLON' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'ARROW' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'REFINES' (noprec):   error
    action 'HOLE' (noprec):   error
    action 'WITH' (noprec):   error
    action 'NOT' (noprec):   error
    action 'UNIT' (noprec):   error
    action 'REC' (noprec):   error
    action 'LET' (noprec):   error
    action 'OF' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'FUN' (noprec):   error
    action 'TICK' (noprec):   shift 66
    action 'PROJ' (noprec):   error
    action 'UID' (noprec):   error
    action 'LID' (noprec):   error
    action 'INT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 66:
  items:
    tick_comma_one -> tick_comma 'COMMA' 'TICK' . 
    tick_comma -> tick_comma 'COMMA' 'TICK' . 

  actions:
    action 'EOF' (noprec):   reduce tick_comma_one --> tick_comma 'COMMA' 'TICK'
    action 'TUP' (noprec):   reduce tick_comma_one --> tick_comma 'COMMA' 'TICK'
    action 'CTOR_ALONE' (noprec):   reduce tick_comma_one --> tick_comma 'COMMA' 'TICK'
    action 'CTOR_ARG' (noprec):   reduce tick_comma_one --> tick_comma 'COMMA' 'TICK'
    action 'P4' (noprec):   reduce tick_comma_one --> tick_comma 'COMMA' 'TICK'
    action 'P3' (noprec):   reduce tick_comma_one --> tick_comma 'COMMA' 'TICK'
    action 'P2' (noprec):   reduce tick_comma_one --> tick_comma 'COMMA' 'TICK'
    action 'P1' (noprec):   reduce tick_comma_one --> tick_comma 'COMMA' 'TICK'
    action 'OR' (noprec):   reduce tick_comma_one --> tick_comma 'COMMA' 'TICK'
    action 'AND' (noprec):   reduce tick_comma_one --> tick_comma 'COMMA' 'TICK'
    action 'SEMI' (noprec):   reduce tick_comma_one --> tick_comma 'COMMA' 'TICK'
    action 'RBRACKET' (noprec):   reduce tick_comma_one --> tick_comma 'COMMA' 'TICK'
    action 'LBRACKET' (noprec):   reduce tick_comma_one --> tick_comma 'COMMA' 'TICK'
    action 'RPAREN' (noprec):   reduce tick_comma_one --> tick_comma 'COMMA' 'TICK'
    action 'LPAREN' (noprec):   reduce tick_comma_one --> tick_comma 'COMMA' 'TICK'
    action 'PIPE' (noprec):   reduce tick_comma_one --> tick_comma 'COMMA' 'TICK'
    action 'STAR' (noprec):   reduce tick_comma_one --> tick_comma 'COMMA' 'TICK'
    action 'COLON' (noprec):   reduce tick_comma_one --> tick_comma 'COMMA' 'TICK'
    action 'COMMA' (noprec):   reduce tick_comma --> tick_comma 'COMMA' 'TICK'
    action 'ARROW' (noprec):   reduce tick_comma_one --> tick_comma 'COMMA' 'TICK'
    action 'EQUAL' (noprec):   reduce tick_comma_one --> tick_comma 'COMMA' 'TICK'
    action 'REFINES' (noprec):   reduce tick_comma_one --> tick_comma 'COMMA' 'TICK'
    action 'HOLE' (noprec):   reduce tick_comma_one --> tick_comma 'COMMA' 'TICK'
    action 'WITH' (noprec):   reduce tick_comma_one --> tick_comma 'COMMA' 'TICK'
    action 'NOT' (noprec):   reduce tick_comma_one --> tick_comma 'COMMA' 'TICK'
    action 'UNIT' (noprec):   reduce tick_comma_one --> tick_comma 'COMMA' 'TICK'
    action 'REC' (noprec):   reduce tick_comma_one --> tick_comma 'COMMA' 'TICK'
    action 'LET' (noprec):   reduce tick_comma_one --> tick_comma 'COMMA' 'TICK'
    action 'OF' (noprec):   reduce tick_comma_one --> tick_comma 'COMMA' 'TICK'
    action 'TYPE' (noprec):   reduce tick_comma_one --> tick_comma 'COMMA' 'TICK'
    action 'MATCH' (noprec):   reduce tick_comma_one --> tick_comma 'COMMA' 'TICK'
    action 'FUN' (noprec):   reduce tick_comma_one --> tick_comma 'COMMA' 'TICK'
    action 'TICK' (noprec):   reduce tick_comma_one --> tick_comma 'COMMA' 'TICK'
    action 'PROJ' (noprec):   reduce tick_comma_one --> tick_comma 'COMMA' 'TICK'
    action 'UID' (noprec):   reduce tick_comma_one --> tick_comma 'COMMA' 'TICK'
    action 'LID' (noprec):   reduce tick_comma_one --> tick_comma 'COMMA' 'TICK'
    action 'INT' (noprec):   reduce tick_comma_one --> tick_comma 'COMMA' 'TICK'
    action 'error' (noprec):   reduce tick_comma_one --> tick_comma 'COMMA' 'TICK'
    action '#' (noprec):   reduce tick_comma_one --> tick_comma 'COMMA' 'TICK'
    action '$$' (noprec):   reduce tick_comma_one --> tick_comma 'COMMA' 'TICK'

  immediate action: <none>
 gotos:

state 67:
  items:
    tick_comma -> 'TICK' . 

  actions:
    action 'EOF' (noprec):   reduce tick_comma --> 'TICK'
    action 'TUP' (noprec):   reduce tick_comma --> 'TICK'
    action 'CTOR_ALONE' (noprec):   reduce tick_comma --> 'TICK'
    action 'CTOR_ARG' (noprec):   reduce tick_comma --> 'TICK'
    action 'P4' (noprec):   reduce tick_comma --> 'TICK'
    action 'P3' (noprec):   reduce tick_comma --> 'TICK'
    action 'P2' (noprec):   reduce tick_comma --> 'TICK'
    action 'P1' (noprec):   reduce tick_comma --> 'TICK'
    action 'OR' (noprec):   reduce tick_comma --> 'TICK'
    action 'AND' (noprec):   reduce tick_comma --> 'TICK'
    action 'SEMI' (noprec):   reduce tick_comma --> 'TICK'
    action 'RBRACKET' (noprec):   reduce tick_comma --> 'TICK'
    action 'LBRACKET' (noprec):   reduce tick_comma --> 'TICK'
    action 'RPAREN' (noprec):   reduce tick_comma --> 'TICK'
    action 'LPAREN' (noprec):   reduce tick_comma --> 'TICK'
    action 'PIPE' (noprec):   reduce tick_comma --> 'TICK'
    action 'STAR' (noprec):   reduce tick_comma --> 'TICK'
    action 'COLON' (noprec):   reduce tick_comma --> 'TICK'
    action 'COMMA' (noprec):   reduce tick_comma --> 'TICK'
    action 'ARROW' (noprec):   reduce tick_comma --> 'TICK'
    action 'EQUAL' (noprec):   reduce tick_comma --> 'TICK'
    action 'REFINES' (noprec):   reduce tick_comma --> 'TICK'
    action 'HOLE' (noprec):   reduce tick_comma --> 'TICK'
    action 'WITH' (noprec):   reduce tick_comma --> 'TICK'
    action 'NOT' (noprec):   reduce tick_comma --> 'TICK'
    action 'UNIT' (noprec):   reduce tick_comma --> 'TICK'
    action 'REC' (noprec):   reduce tick_comma --> 'TICK'
    action 'LET' (noprec):   reduce tick_comma --> 'TICK'
    action 'OF' (noprec):   reduce tick_comma --> 'TICK'
    action 'TYPE' (noprec):   reduce tick_comma --> 'TICK'
    action 'MATCH' (noprec):   reduce tick_comma --> 'TICK'
    action 'FUN' (noprec):   reduce tick_comma --> 'TICK'
    action 'TICK' (noprec):   reduce tick_comma --> 'TICK'
    action 'PROJ' (noprec):   reduce tick_comma --> 'TICK'
    action 'UID' (noprec):   reduce tick_comma --> 'TICK'
    action 'LID' (noprec):   reduce tick_comma --> 'TICK'
    action 'INT' (noprec):   reduce tick_comma --> 'TICK'
    action 'error' (noprec):   reduce tick_comma --> 'TICK'
    action '#' (noprec):   reduce tick_comma --> 'TICK'
    action '$$' (noprec):   reduce tick_comma --> 'TICK'

  immediate action:   reduce tick_comma --> 'TICK'
 gotos:

state 68:
  items:
    arg -> 'LPAREN' . 'LID' 'COLON' typ 'RPAREN'

  actions:
    action 'EOF' (noprec):   error
    action 'TUP' (noprec):   error
    action 'CTOR_ALONE' (noprec):   error
    action 'CTOR_ARG' (noprec):   error
    action 'P4' (noprec):   error
    action 'P3' (noprec):   error
    action 'P2' (noprec):   error
    action 'P1' (noprec):   error
    action 'OR' (noprec):   error
    action 'AND' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'PIPE' (noprec):   error
    action 'STAR' (noprec):   error
    action 'COLON' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'ARROW' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'REFINES' (noprec):   error
    action 'HOLE' (noprec):   error
    action 'WITH' (noprec):   error
    action 'NOT' (noprec):   error
    action 'UNIT' (noprec):   error
    action 'REC' (noprec):   error
    action 'LET' (noprec):   error
    action 'OF' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'FUN' (noprec):   error
    action 'TICK' (noprec):   error
    action 'PROJ' (noprec):   error
    action 'UID' (noprec):   error
    action 'LID' (noprec):   shift 69
    action 'INT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 69:
  items:
    arg -> 'LPAREN' 'LID' . 'COLON' typ 'RPAREN'

  actions:
    action 'EOF' (noprec):   error
    action 'TUP' (noprec):   error
    action 'CTOR_ALONE' (noprec):   error
    action 'CTOR_ARG' (noprec):   error
    action 'P4' (noprec):   error
    action 'P3' (noprec):   error
    action 'P2' (noprec):   error
    action 'P1' (noprec):   error
    action 'OR' (noprec):   error
    action 'AND' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'PIPE' (noprec):   error
    action 'STAR' (noprec):   error
    action 'COLON' (noprec):   shift 70
    action 'COMMA' (noprec):   error
    action 'ARROW' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'REFINES' (noprec):   error
    action 'HOLE' (noprec):   error
    action 'WITH' (noprec):   error
    action 'NOT' (noprec):   error
    action 'UNIT' (noprec):   error
    action 'REC' (noprec):   error
    action 'LET' (noprec):   error
    action 'OF' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'FUN' (noprec):   error
    action 'TICK' (noprec):   error
    action 'PROJ' (noprec):   error
    action 'UID' (noprec):   error
    action 'LID' (noprec):   error
    action 'INT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 70:
  items:
    arg -> 'LPAREN' 'LID' 'COLON' . typ 'RPAREN'

  actions:
    action 'EOF' (noprec):   error
    action 'TUP' (noprec):   error
    action 'CTOR_ALONE' (noprec):   error
    action 'CTOR_ARG' (noprec):   error
    action 'P4' (noprec):   error
    action 'P3' (noprec):   error
    action 'P2' (noprec):   error
    action 'P1' (noprec):   error
    action 'OR' (noprec):   error
    action 'AND' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LPAREN' (noprec):   shift 126
    action 'PIPE' (noprec):   error
    action 'STAR' (noprec):   error
    action 'COLON' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'ARROW' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'REFINES' (noprec):   error
    action 'HOLE' (noprec):   error
    action 'WITH' (noprec):   error
    action 'NOT' (noprec):   error
    action 'UNIT' (noprec):   shift 117
    action 'REC' (noprec):   error
    action 'LET' (noprec):   error
    action 'OF' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'FUN' (noprec):   error
    action 'TICK' (noprec):   shift 124
    action 'PROJ' (noprec):   error
    action 'UID' (noprec):   error
    action 'LID' (noprec):   shift 133
    action 'INT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto typ: 71
    goto typ_in_tup: 144
    goto typ_base: 123
    goto typ_star_one: 125
    goto typ_star: 141

state 71:
  items:
    arg -> 'LPAREN' 'LID' 'COLON' typ . 'RPAREN'
    typ -> typ . 'ARROW' typ

  actions:
    action 'EOF' (noprec):   error
    action 'TUP' (noprec):   error
    action 'CTOR_ALONE' (noprec):   error
    action 'CTOR_ARG' (noprec):   error
    action 'P4' (noprec):   error
    action 'P3' (noprec):   error
    action 'P2' (noprec):   error
    action 'P1' (noprec):   error
    action 'OR' (noprec):   error
    action 'AND' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RPAREN' (noprec):   shift 72
    action 'LPAREN' (noprec):   error
    action 'PIPE' (noprec):   error
    action 'STAR' (noprec):   error
    action 'COLON' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'ARROW' (explicit right 9993):   shift 122
    action 'EQUAL' (noprec):   error
    action 'REFINES' (noprec):   error
    action 'HOLE' (noprec):   error
    action 'WITH' (noprec):   error
    action 'NOT' (noprec):   error
    action 'UNIT' (noprec):   error
    action 'REC' (noprec):   error
    action 'LET' (noprec):   error
    action 'OF' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'FUN' (noprec):   error
    action 'TICK' (noprec):   error
    action 'PROJ' (noprec):   error
    action 'UID' (noprec):   error
    action 'LID' (noprec):   error
    action 'INT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 72:
  items:
    arg -> 'LPAREN' 'LID' 'COLON' typ 'RPAREN' . 

  actions:
    action 'EOF' (noprec):   reduce arg --> 'LPAREN' 'LID' 'COLON' typ 'RPAREN'
    action 'TUP' (noprec):   reduce arg --> 'LPAREN' 'LID' 'COLON' typ 'RPAREN'
    action 'CTOR_ALONE' (noprec):   reduce arg --> 'LPAREN' 'LID' 'COLON' typ 'RPAREN'
    action 'CTOR_ARG' (noprec):   reduce arg --> 'LPAREN' 'LID' 'COLON' typ 'RPAREN'
    action 'P4' (noprec):   reduce arg --> 'LPAREN' 'LID' 'COLON' typ 'RPAREN'
    action 'P3' (noprec):   reduce arg --> 'LPAREN' 'LID' 'COLON' typ 'RPAREN'
    action 'P2' (noprec):   reduce arg --> 'LPAREN' 'LID' 'COLON' typ 'RPAREN'
    action 'P1' (noprec):   reduce arg --> 'LPAREN' 'LID' 'COLON' typ 'RPAREN'
    action 'OR' (noprec):   reduce arg --> 'LPAREN' 'LID' 'COLON' typ 'RPAREN'
    action 'AND' (noprec):   reduce arg --> 'LPAREN' 'LID' 'COLON' typ 'RPAREN'
    action 'SEMI' (noprec):   reduce arg --> 'LPAREN' 'LID' 'COLON' typ 'RPAREN'
    action 'RBRACKET' (noprec):   reduce arg --> 'LPAREN' 'LID' 'COLON' typ 'RPAREN'
    action 'LBRACKET' (noprec):   reduce arg --> 'LPAREN' 'LID' 'COLON' typ 'RPAREN'
    action 'RPAREN' (noprec):   reduce arg --> 'LPAREN' 'LID' 'COLON' typ 'RPAREN'
    action 'LPAREN' (noprec):   reduce arg --> 'LPAREN' 'LID' 'COLON' typ 'RPAREN'
    action 'PIPE' (noprec):   reduce arg --> 'LPAREN' 'LID' 'COLON' typ 'RPAREN'
    action 'STAR' (noprec):   reduce arg --> 'LPAREN' 'LID' 'COLON' typ 'RPAREN'
    action 'COLON' (noprec):   reduce arg --> 'LPAREN' 'LID' 'COLON' typ 'RPAREN'
    action 'COMMA' (noprec):   reduce arg --> 'LPAREN' 'LID' 'COLON' typ 'RPAREN'
    action 'ARROW' (noprec):   reduce arg --> 'LPAREN' 'LID' 'COLON' typ 'RPAREN'
    action 'EQUAL' (noprec):   reduce arg --> 'LPAREN' 'LID' 'COLON' typ 'RPAREN'
    action 'REFINES' (noprec):   reduce arg --> 'LPAREN' 'LID' 'COLON' typ 'RPAREN'
    action 'HOLE' (noprec):   reduce arg --> 'LPAREN' 'LID' 'COLON' typ 'RPAREN'
    action 'WITH' (noprec):   reduce arg --> 'LPAREN' 'LID' 'COLON' typ 'RPAREN'
    action 'NOT' (noprec):   reduce arg --> 'LPAREN' 'LID' 'COLON' typ 'RPAREN'
    action 'UNIT' (noprec):   reduce arg --> 'LPAREN' 'LID' 'COLON' typ 'RPAREN'
    action 'REC' (noprec):   reduce arg --> 'LPAREN' 'LID' 'COLON' typ 'RPAREN'
    action 'LET' (noprec):   reduce arg --> 'LPAREN' 'LID' 'COLON' typ 'RPAREN'
    action 'OF' (noprec):   reduce arg --> 'LPAREN' 'LID' 'COLON' typ 'RPAREN'
    action 'TYPE' (noprec):   reduce arg --> 'LPAREN' 'LID' 'COLON' typ 'RPAREN'
    action 'MATCH' (noprec):   reduce arg --> 'LPAREN' 'LID' 'COLON' typ 'RPAREN'
    action 'FUN' (noprec):   reduce arg --> 'LPAREN' 'LID' 'COLON' typ 'RPAREN'
    action 'TICK' (noprec):   reduce arg --> 'LPAREN' 'LID' 'COLON' typ 'RPAREN'
    action 'PROJ' (noprec):   reduce arg --> 'LPAREN' 'LID' 'COLON' typ 'RPAREN'
    action 'UID' (noprec):   reduce arg --> 'LPAREN' 'LID' 'COLON' typ 'RPAREN'
    action 'LID' (noprec):   reduce arg --> 'LPAREN' 'LID' 'COLON' typ 'RPAREN'
    action 'INT' (noprec):   reduce arg --> 'LPAREN' 'LID' 'COLON' typ 'RPAREN'
    action 'error' (noprec):   reduce arg --> 'LPAREN' 'LID' 'COLON' typ 'RPAREN'
    action '#' (noprec):   reduce arg --> 'LPAREN' 'LID' 'COLON' typ 'RPAREN'
    action '$$' (noprec):   reduce arg --> 'LPAREN' 'LID' 'COLON' typ 'RPAREN'

  immediate action:   reduce arg --> 'LPAREN' 'LID' 'COLON' typ 'RPAREN'
 gotos:

state 73:
  items:
    args_list_one -> arg . 

  actions:
    action 'EOF' (noprec):   reduce args_list_one --> arg
    action 'TUP' (noprec):   reduce args_list_one --> arg
    action 'CTOR_ALONE' (noprec):   reduce args_list_one --> arg
    action 'CTOR_ARG' (noprec):   reduce args_list_one --> arg
    action 'P4' (noprec):   reduce args_list_one --> arg
    action 'P3' (noprec):   reduce args_list_one --> arg
    action 'P2' (noprec):   reduce args_list_one --> arg
    action 'P1' (noprec):   reduce args_list_one --> arg
    action 'OR' (noprec):   reduce args_list_one --> arg
    action 'AND' (noprec):   reduce args_list_one --> arg
    action 'SEMI' (noprec):   reduce args_list_one --> arg
    action 'RBRACKET' (noprec):   reduce args_list_one --> arg
    action 'LBRACKET' (noprec):   reduce args_list_one --> arg
    action 'RPAREN' (noprec):   reduce args_list_one --> arg
    action 'LPAREN' (noprec):   reduce args_list_one --> arg
    action 'PIPE' (noprec):   reduce args_list_one --> arg
    action 'STAR' (noprec):   reduce args_list_one --> arg
    action 'COLON' (noprec):   reduce args_list_one --> arg
    action 'COMMA' (noprec):   reduce args_list_one --> arg
    action 'ARROW' (noprec):   reduce args_list_one --> arg
    action 'EQUAL' (noprec):   reduce args_list_one --> arg
    action 'REFINES' (noprec):   reduce args_list_one --> arg
    action 'HOLE' (noprec):   reduce args_list_one --> arg
    action 'WITH' (noprec):   reduce args_list_one --> arg
    action 'NOT' (noprec):   reduce args_list_one --> arg
    action 'UNIT' (noprec):   reduce args_list_one --> arg
    action 'REC' (noprec):   reduce args_list_one --> arg
    action 'LET' (noprec):   reduce args_list_one --> arg
    action 'OF' (noprec):   reduce args_list_one --> arg
    action 'TYPE' (noprec):   reduce args_list_one --> arg
    action 'MATCH' (noprec):   reduce args_list_one --> arg
    action 'FUN' (noprec):   reduce args_list_one --> arg
    action 'TICK' (noprec):   reduce args_list_one --> arg
    action 'PROJ' (noprec):   reduce args_list_one --> arg
    action 'UID' (noprec):   reduce args_list_one --> arg
    action 'LID' (noprec):   reduce args_list_one --> arg
    action 'INT' (noprec):   reduce args_list_one --> arg
    action 'error' (noprec):   reduce args_list_one --> arg
    action '#' (noprec):   reduce args_list_one --> arg
    action '$$' (noprec):   reduce args_list_one --> arg

  immediate action:   reduce args_list_one --> arg
 gotos:

state 74:
  items:
    args_list_one -> args_list_one arg . 

  actions:
    action 'EOF' (noprec):   reduce args_list_one --> args_list_one arg
    action 'TUP' (noprec):   reduce args_list_one --> args_list_one arg
    action 'CTOR_ALONE' (noprec):   reduce args_list_one --> args_list_one arg
    action 'CTOR_ARG' (noprec):   reduce args_list_one --> args_list_one arg
    action 'P4' (noprec):   reduce args_list_one --> args_list_one arg
    action 'P3' (noprec):   reduce args_list_one --> args_list_one arg
    action 'P2' (noprec):   reduce args_list_one --> args_list_one arg
    action 'P1' (noprec):   reduce args_list_one --> args_list_one arg
    action 'OR' (noprec):   reduce args_list_one --> args_list_one arg
    action 'AND' (noprec):   reduce args_list_one --> args_list_one arg
    action 'SEMI' (noprec):   reduce args_list_one --> args_list_one arg
    action 'RBRACKET' (noprec):   reduce args_list_one --> args_list_one arg
    action 'LBRACKET' (noprec):   reduce args_list_one --> args_list_one arg
    action 'RPAREN' (noprec):   reduce args_list_one --> args_list_one arg
    action 'LPAREN' (noprec):   reduce args_list_one --> args_list_one arg
    action 'PIPE' (noprec):   reduce args_list_one --> args_list_one arg
    action 'STAR' (noprec):   reduce args_list_one --> args_list_one arg
    action 'COLON' (noprec):   reduce args_list_one --> args_list_one arg
    action 'COMMA' (noprec):   reduce args_list_one --> args_list_one arg
    action 'ARROW' (noprec):   reduce args_list_one --> args_list_one arg
    action 'EQUAL' (noprec):   reduce args_list_one --> args_list_one arg
    action 'REFINES' (noprec):   reduce args_list_one --> args_list_one arg
    action 'HOLE' (noprec):   reduce args_list_one --> args_list_one arg
    action 'WITH' (noprec):   reduce args_list_one --> args_list_one arg
    action 'NOT' (noprec):   reduce args_list_one --> args_list_one arg
    action 'UNIT' (noprec):   reduce args_list_one --> args_list_one arg
    action 'REC' (noprec):   reduce args_list_one --> args_list_one arg
    action 'LET' (noprec):   reduce args_list_one --> args_list_one arg
    action 'OF' (noprec):   reduce args_list_one --> args_list_one arg
    action 'TYPE' (noprec):   reduce args_list_one --> args_list_one arg
    action 'MATCH' (noprec):   reduce args_list_one --> args_list_one arg
    action 'FUN' (noprec):   reduce args_list_one --> args_list_one arg
    action 'TICK' (noprec):   reduce args_list_one --> args_list_one arg
    action 'PROJ' (noprec):   reduce args_list_one --> args_list_one arg
    action 'UID' (noprec):   reduce args_list_one --> args_list_one arg
    action 'LID' (noprec):   reduce args_list_one --> args_list_one arg
    action 'INT' (noprec):   reduce args_list_one --> args_list_one arg
    action 'error' (noprec):   reduce args_list_one --> args_list_one arg
    action '#' (noprec):   reduce args_list_one --> args_list_one arg
    action '$$' (noprec):   reduce args_list_one --> args_list_one arg

  immediate action:   reduce args_list_one --> args_list_one arg
 gotos:

state 75:
  items:
    let_head -> 'LET' 'LID' 'COLON' . typ

  actions:
    action 'EOF' (noprec):   error
    action 'TUP' (noprec):   error
    action 'CTOR_ALONE' (noprec):   error
    action 'CTOR_ARG' (noprec):   error
    action 'P4' (noprec):   error
    action 'P3' (noprec):   error
    action 'P2' (noprec):   error
    action 'P1' (noprec):   error
    action 'OR' (noprec):   error
    action 'AND' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LPAREN' (noprec):   shift 126
    action 'PIPE' (noprec):   error
    action 'STAR' (noprec):   error
    action 'COLON' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'ARROW' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'REFINES' (noprec):   error
    action 'HOLE' (noprec):   error
    action 'WITH' (noprec):   error
    action 'NOT' (noprec):   error
    action 'UNIT' (noprec):   shift 117
    action 'REC' (noprec):   error
    action 'LET' (noprec):   error
    action 'OF' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'FUN' (noprec):   error
    action 'TICK' (noprec):   shift 124
    action 'PROJ' (noprec):   error
    action 'UID' (noprec):   error
    action 'LID' (noprec):   shift 133
    action 'INT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto typ: 76
    goto typ_in_tup: 144
    goto typ_base: 123
    goto typ_star_one: 125
    goto typ_star: 141

state 76:
  items:
    let_head -> 'LET' 'LID' 'COLON' typ . 
    typ -> typ . 'ARROW' typ

  actions:
    action 'EOF' (noprec):   reduce let_head --> 'LET' 'LID' 'COLON' typ
    action 'TUP' (noprec):   reduce let_head --> 'LET' 'LID' 'COLON' typ
    action 'CTOR_ALONE' (noprec):   reduce let_head --> 'LET' 'LID' 'COLON' typ
    action 'CTOR_ARG' (noprec):   reduce let_head --> 'LET' 'LID' 'COLON' typ
    action 'P4' (noprec):   reduce let_head --> 'LET' 'LID' 'COLON' typ
    action 'P3' (noprec):   reduce let_head --> 'LET' 'LID' 'COLON' typ
    action 'P2' (noprec):   reduce let_head --> 'LET' 'LID' 'COLON' typ
    action 'P1' (noprec):   reduce let_head --> 'LET' 'LID' 'COLON' typ
    action 'OR' (noprec):   reduce let_head --> 'LET' 'LID' 'COLON' typ
    action 'AND' (noprec):   reduce let_head --> 'LET' 'LID' 'COLON' typ
    action 'SEMI' (noprec):   reduce let_head --> 'LET' 'LID' 'COLON' typ
    action 'RBRACKET' (noprec):   reduce let_head --> 'LET' 'LID' 'COLON' typ
    action 'LBRACKET' (noprec):   reduce let_head --> 'LET' 'LID' 'COLON' typ
    action 'RPAREN' (noprec):   reduce let_head --> 'LET' 'LID' 'COLON' typ
    action 'LPAREN' (noprec):   reduce let_head --> 'LET' 'LID' 'COLON' typ
    action 'PIPE' (noprec):   reduce let_head --> 'LET' 'LID' 'COLON' typ
    action 'STAR' (noprec):   reduce let_head --> 'LET' 'LID' 'COLON' typ
    action 'COLON' (noprec):   reduce let_head --> 'LET' 'LID' 'COLON' typ
    action 'COMMA' (noprec):   reduce let_head --> 'LET' 'LID' 'COLON' typ
    action 'ARROW' (explicit right 9993):   shift 122
    action 'EQUAL' (noprec):   reduce let_head --> 'LET' 'LID' 'COLON' typ
    action 'REFINES' (noprec):   reduce let_head --> 'LET' 'LID' 'COLON' typ
    action 'HOLE' (noprec):   reduce let_head --> 'LET' 'LID' 'COLON' typ
    action 'WITH' (noprec):   reduce let_head --> 'LET' 'LID' 'COLON' typ
    action 'NOT' (noprec):   reduce let_head --> 'LET' 'LID' 'COLON' typ
    action 'UNIT' (noprec):   reduce let_head --> 'LET' 'LID' 'COLON' typ
    action 'REC' (noprec):   reduce let_head --> 'LET' 'LID' 'COLON' typ
    action 'LET' (noprec):   reduce let_head --> 'LET' 'LID' 'COLON' typ
    action 'OF' (noprec):   reduce let_head --> 'LET' 'LID' 'COLON' typ
    action 'TYPE' (noprec):   reduce let_head --> 'LET' 'LID' 'COLON' typ
    action 'MATCH' (noprec):   reduce let_head --> 'LET' 'LID' 'COLON' typ
    action 'FUN' (noprec):   reduce let_head --> 'LET' 'LID' 'COLON' typ
    action 'TICK' (noprec):   reduce let_head --> 'LET' 'LID' 'COLON' typ
    action 'PROJ' (noprec):   reduce let_head --> 'LET' 'LID' 'COLON' typ
    action 'UID' (noprec):   reduce let_head --> 'LET' 'LID' 'COLON' typ
    action 'LID' (noprec):   reduce let_head --> 'LET' 'LID' 'COLON' typ
    action 'INT' (noprec):   reduce let_head --> 'LET' 'LID' 'COLON' typ
    action 'error' (noprec):   reduce let_head --> 'LET' 'LID' 'COLON' typ
    action '#' (noprec):   reduce let_head --> 'LET' 'LID' 'COLON' typ
    action '$$' (noprec):   reduce let_head --> 'LET' 'LID' 'COLON' typ

  immediate action: <none>
 gotos:

state 77:
  items:
    let_rec_head -> 'LET' 'REC' . 'LID'

  actions:
    action 'EOF' (noprec):   error
    action 'TUP' (noprec):   error
    action 'CTOR_ALONE' (noprec):   error
    action 'CTOR_ARG' (noprec):   error
    action 'P4' (noprec):   error
    action 'P3' (noprec):   error
    action 'P2' (noprec):   error
    action 'P1' (noprec):   error
    action 'OR' (noprec):   error
    action 'AND' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'PIPE' (noprec):   error
    action 'STAR' (noprec):   error
    action 'COLON' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'ARROW' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'REFINES' (noprec):   error
    action 'HOLE' (noprec):   error
    action 'WITH' (noprec):   error
    action 'NOT' (noprec):   error
    action 'UNIT' (noprec):   error
    action 'REC' (noprec):   error
    action 'LET' (noprec):   error
    action 'OF' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'FUN' (noprec):   error
    action 'TICK' (noprec):   error
    action 'PROJ' (noprec):   error
    action 'UID' (noprec):   error
    action 'LID' (noprec):   shift 78
    action 'INT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 78:
  items:
    let_rec_head -> 'LET' 'REC' 'LID' . 

  actions:
    action 'EOF' (noprec):   reduce let_rec_head --> 'LET' 'REC' 'LID'
    action 'TUP' (noprec):   reduce let_rec_head --> 'LET' 'REC' 'LID'
    action 'CTOR_ALONE' (noprec):   reduce let_rec_head --> 'LET' 'REC' 'LID'
    action 'CTOR_ARG' (noprec):   reduce let_rec_head --> 'LET' 'REC' 'LID'
    action 'P4' (noprec):   reduce let_rec_head --> 'LET' 'REC' 'LID'
    action 'P3' (noprec):   reduce let_rec_head --> 'LET' 'REC' 'LID'
    action 'P2' (noprec):   reduce let_rec_head --> 'LET' 'REC' 'LID'
    action 'P1' (noprec):   reduce let_rec_head --> 'LET' 'REC' 'LID'
    action 'OR' (noprec):   reduce let_rec_head --> 'LET' 'REC' 'LID'
    action 'AND' (noprec):   reduce let_rec_head --> 'LET' 'REC' 'LID'
    action 'SEMI' (noprec):   reduce let_rec_head --> 'LET' 'REC' 'LID'
    action 'RBRACKET' (noprec):   reduce let_rec_head --> 'LET' 'REC' 'LID'
    action 'LBRACKET' (noprec):   reduce let_rec_head --> 'LET' 'REC' 'LID'
    action 'RPAREN' (noprec):   reduce let_rec_head --> 'LET' 'REC' 'LID'
    action 'LPAREN' (noprec):   reduce let_rec_head --> 'LET' 'REC' 'LID'
    action 'PIPE' (noprec):   reduce let_rec_head --> 'LET' 'REC' 'LID'
    action 'STAR' (noprec):   reduce let_rec_head --> 'LET' 'REC' 'LID'
    action 'COLON' (noprec):   reduce let_rec_head --> 'LET' 'REC' 'LID'
    action 'COMMA' (noprec):   reduce let_rec_head --> 'LET' 'REC' 'LID'
    action 'ARROW' (noprec):   reduce let_rec_head --> 'LET' 'REC' 'LID'
    action 'EQUAL' (noprec):   reduce let_rec_head --> 'LET' 'REC' 'LID'
    action 'REFINES' (noprec):   reduce let_rec_head --> 'LET' 'REC' 'LID'
    action 'HOLE' (noprec):   reduce let_rec_head --> 'LET' 'REC' 'LID'
    action 'WITH' (noprec):   reduce let_rec_head --> 'LET' 'REC' 'LID'
    action 'NOT' (noprec):   reduce let_rec_head --> 'LET' 'REC' 'LID'
    action 'UNIT' (noprec):   reduce let_rec_head --> 'LET' 'REC' 'LID'
    action 'REC' (noprec):   reduce let_rec_head --> 'LET' 'REC' 'LID'
    action 'LET' (noprec):   reduce let_rec_head --> 'LET' 'REC' 'LID'
    action 'OF' (noprec):   reduce let_rec_head --> 'LET' 'REC' 'LID'
    action 'TYPE' (noprec):   reduce let_rec_head --> 'LET' 'REC' 'LID'
    action 'MATCH' (noprec):   reduce let_rec_head --> 'LET' 'REC' 'LID'
    action 'FUN' (noprec):   reduce let_rec_head --> 'LET' 'REC' 'LID'
    action 'TICK' (noprec):   reduce let_rec_head --> 'LET' 'REC' 'LID'
    action 'PROJ' (noprec):   reduce let_rec_head --> 'LET' 'REC' 'LID'
    action 'UID' (noprec):   reduce let_rec_head --> 'LET' 'REC' 'LID'
    action 'LID' (noprec):   reduce let_rec_head --> 'LET' 'REC' 'LID'
    action 'INT' (noprec):   reduce let_rec_head --> 'LET' 'REC' 'LID'
    action 'error' (noprec):   reduce let_rec_head --> 'LET' 'REC' 'LID'
    action '#' (noprec):   reduce let_rec_head --> 'LET' 'REC' 'LID'
    action '$$' (noprec):   reduce let_rec_head --> 'LET' 'REC' 'LID'

  immediate action:   reduce let_rec_head --> 'LET' 'REC' 'LID'
 gotos:

state 79:
  items:
    refn -> 'INT' . 

  actions:
    action 'EOF' (noprec):   reduce refn --> 'INT'
    action 'TUP' (noprec):   reduce refn --> 'INT'
    action 'CTOR_ALONE' (noprec):   reduce refn --> 'INT'
    action 'CTOR_ARG' (noprec):   reduce refn --> 'INT'
    action 'P4' (noprec):   reduce refn --> 'INT'
    action 'P3' (noprec):   reduce refn --> 'INT'
    action 'P2' (noprec):   reduce refn --> 'INT'
    action 'P1' (noprec):   reduce refn --> 'INT'
    action 'OR' (noprec):   reduce refn --> 'INT'
    action 'AND' (noprec):   reduce refn --> 'INT'
    action 'SEMI' (noprec):   reduce refn --> 'INT'
    action 'RBRACKET' (noprec):   reduce refn --> 'INT'
    action 'LBRACKET' (noprec):   reduce refn --> 'INT'
    action 'RPAREN' (noprec):   reduce refn --> 'INT'
    action 'LPAREN' (noprec):   reduce refn --> 'INT'
    action 'PIPE' (noprec):   reduce refn --> 'INT'
    action 'STAR' (noprec):   reduce refn --> 'INT'
    action 'COLON' (noprec):   reduce refn --> 'INT'
    action 'COMMA' (noprec):   reduce refn --> 'INT'
    action 'ARROW' (noprec):   reduce refn --> 'INT'
    action 'EQUAL' (noprec):   reduce refn --> 'INT'
    action 'REFINES' (noprec):   reduce refn --> 'INT'
    action 'HOLE' (noprec):   reduce refn --> 'INT'
    action 'WITH' (noprec):   reduce refn --> 'INT'
    action 'NOT' (noprec):   reduce refn --> 'INT'
    action 'UNIT' (noprec):   reduce refn --> 'INT'
    action 'REC' (noprec):   reduce refn --> 'INT'
    action 'LET' (noprec):   reduce refn --> 'INT'
    action 'OF' (noprec):   reduce refn --> 'INT'
    action 'TYPE' (noprec):   reduce refn --> 'INT'
    action 'MATCH' (noprec):   reduce refn --> 'INT'
    action 'FUN' (noprec):   reduce refn --> 'INT'
    action 'TICK' (noprec):   reduce refn --> 'INT'
    action 'PROJ' (noprec):   reduce refn --> 'INT'
    action 'UID' (noprec):   reduce refn --> 'INT'
    action 'LID' (noprec):   reduce refn --> 'INT'
    action 'INT' (noprec):   reduce refn --> 'INT'
    action 'error' (noprec):   reduce refn --> 'INT'
    action '#' (noprec):   reduce refn --> 'INT'
    action '$$' (noprec):   reduce refn --> 'INT'

  immediate action:   reduce refn --> 'INT'
 gotos:

state 80:
  items:
    refn -> 'LBRACKET' . refn_semi 'RBRACKET'

  actions:
    action 'EOF' (noprec):   reduce refn_semi --> 
    action 'TUP' (noprec):   reduce refn_semi --> 
    action 'CTOR_ALONE' (noprec):   reduce refn_semi --> 
    action 'CTOR_ARG' (noprec):   reduce refn_semi --> 
    action 'P4' (noprec):   reduce refn_semi --> 
    action 'P3' (noprec):   reduce refn_semi --> 
    action 'P2' (noprec):   reduce refn_semi --> 
    action 'P1' (noprec):   reduce refn_semi --> 
    action 'OR' (noprec):   shift 91
    action 'AND' (noprec):   shift 87
    action 'SEMI' (noprec):   reduce refn_semi --> 
    action 'RBRACKET' (noprec):   reduce refn_semi --> 
    action 'LBRACKET' (noprec):   shift 80
    action 'RPAREN' (noprec):   reduce refn_semi --> 
    action 'LPAREN' (noprec):   shift 104
    action 'PIPE' (noprec):   reduce refn_semi --> 
    action 'STAR' (noprec):   reduce refn_semi --> 
    action 'COLON' (noprec):   reduce refn_semi --> 
    action 'COMMA' (noprec):   reduce refn_semi --> 
    action 'ARROW' (noprec):   reduce refn_semi --> 
    action 'EQUAL' (noprec):   reduce refn_semi --> 
    action 'REFINES' (noprec):   reduce refn_semi --> 
    action 'HOLE' (noprec):   reduce refn_semi --> 
    action 'WITH' (noprec):   reduce refn_semi --> 
    action 'NOT' (noprec):   shift 83
    action 'UNIT' (noprec):   reduce refn_semi --> 
    action 'REC' (noprec):   reduce refn_semi --> 
    action 'LET' (noprec):   reduce refn_semi --> 
    action 'OF' (noprec):   reduce refn_semi --> 
    action 'TYPE' (noprec):   reduce refn_semi --> 
    action 'MATCH' (noprec):   reduce refn_semi --> 
    action 'FUN' (noprec):   reduce refn_semi --> 
    action 'TICK' (noprec):   shift 111
    action 'PROJ' (noprec):   reduce refn_semi --> 
    action 'UID' (noprec):   shift 109
    action 'LID' (noprec):   shift 110
    action 'INT' (noprec):   shift 79
    action 'error' (noprec):   reduce refn_semi --> 
    action '#' (noprec):   reduce refn_semi --> 
    action '$$' (noprec):   reduce refn_semi --> 

  immediate action: <none>
 gotos:
    goto refn: 101
    goto refn_semi: 81
    goto refn_semi2: 115

state 81:
  items:
    refn -> 'LBRACKET' refn_semi . 'RBRACKET'

  actions:
    action 'EOF' (noprec):   error
    action 'TUP' (noprec):   error
    action 'CTOR_ALONE' (noprec):   error
    action 'CTOR_ARG' (noprec):   error
    action 'P4' (noprec):   error
    action 'P3' (noprec):   error
    action 'P2' (noprec):   error
    action 'P1' (noprec):   error
    action 'OR' (noprec):   error
    action 'AND' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'RBRACKET' (noprec):   shift 82
    action 'LBRACKET' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'PIPE' (noprec):   error
    action 'STAR' (noprec):   error
    action 'COLON' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'ARROW' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'REFINES' (noprec):   error
    action 'HOLE' (noprec):   error
    action 'WITH' (noprec):   error
    action 'NOT' (noprec):   error
    action 'UNIT' (noprec):   error
    action 'REC' (noprec):   error
    action 'LET' (noprec):   error
    action 'OF' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'FUN' (noprec):   error
    action 'TICK' (noprec):   error
    action 'PROJ' (noprec):   error
    action 'UID' (noprec):   error
    action 'LID' (noprec):   error
    action 'INT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 82:
  items:
    refn -> 'LBRACKET' refn_semi 'RBRACKET' . 

  actions:
    action 'EOF' (noprec):   reduce refn --> 'LBRACKET' refn_semi 'RBRACKET'
    action 'TUP' (noprec):   reduce refn --> 'LBRACKET' refn_semi 'RBRACKET'
    action 'CTOR_ALONE' (noprec):   reduce refn --> 'LBRACKET' refn_semi 'RBRACKET'
    action 'CTOR_ARG' (noprec):   reduce refn --> 'LBRACKET' refn_semi 'RBRACKET'
    action 'P4' (noprec):   reduce refn --> 'LBRACKET' refn_semi 'RBRACKET'
    action 'P3' (noprec):   reduce refn --> 'LBRACKET' refn_semi 'RBRACKET'
    action 'P2' (noprec):   reduce refn --> 'LBRACKET' refn_semi 'RBRACKET'
    action 'P1' (noprec):   reduce refn --> 'LBRACKET' refn_semi 'RBRACKET'
    action 'OR' (noprec):   reduce refn --> 'LBRACKET' refn_semi 'RBRACKET'
    action 'AND' (noprec):   reduce refn --> 'LBRACKET' refn_semi 'RBRACKET'
    action 'SEMI' (noprec):   reduce refn --> 'LBRACKET' refn_semi 'RBRACKET'
    action 'RBRACKET' (noprec):   reduce refn --> 'LBRACKET' refn_semi 'RBRACKET'
    action 'LBRACKET' (noprec):   reduce refn --> 'LBRACKET' refn_semi 'RBRACKET'
    action 'RPAREN' (noprec):   reduce refn --> 'LBRACKET' refn_semi 'RBRACKET'
    action 'LPAREN' (noprec):   reduce refn --> 'LBRACKET' refn_semi 'RBRACKET'
    action 'PIPE' (noprec):   reduce refn --> 'LBRACKET' refn_semi 'RBRACKET'
    action 'STAR' (noprec):   reduce refn --> 'LBRACKET' refn_semi 'RBRACKET'
    action 'COLON' (noprec):   reduce refn --> 'LBRACKET' refn_semi 'RBRACKET'
    action 'COMMA' (noprec):   reduce refn --> 'LBRACKET' refn_semi 'RBRACKET'
    action 'ARROW' (noprec):   reduce refn --> 'LBRACKET' refn_semi 'RBRACKET'
    action 'EQUAL' (noprec):   reduce refn --> 'LBRACKET' refn_semi 'RBRACKET'
    action 'REFINES' (noprec):   reduce refn --> 'LBRACKET' refn_semi 'RBRACKET'
    action 'HOLE' (noprec):   reduce refn --> 'LBRACKET' refn_semi 'RBRACKET'
    action 'WITH' (noprec):   reduce refn --> 'LBRACKET' refn_semi 'RBRACKET'
    action 'NOT' (noprec):   reduce refn --> 'LBRACKET' refn_semi 'RBRACKET'
    action 'UNIT' (noprec):   reduce refn --> 'LBRACKET' refn_semi 'RBRACKET'
    action 'REC' (noprec):   reduce refn --> 'LBRACKET' refn_semi 'RBRACKET'
    action 'LET' (noprec):   reduce refn --> 'LBRACKET' refn_semi 'RBRACKET'
    action 'OF' (noprec):   reduce refn --> 'LBRACKET' refn_semi 'RBRACKET'
    action 'TYPE' (noprec):   reduce refn --> 'LBRACKET' refn_semi 'RBRACKET'
    action 'MATCH' (noprec):   reduce refn --> 'LBRACKET' refn_semi 'RBRACKET'
    action 'FUN' (noprec):   reduce refn --> 'LBRACKET' refn_semi 'RBRACKET'
    action 'TICK' (noprec):   reduce refn --> 'LBRACKET' refn_semi 'RBRACKET'
    action 'PROJ' (noprec):   reduce refn --> 'LBRACKET' refn_semi 'RBRACKET'
    action 'UID' (noprec):   reduce refn --> 'LBRACKET' refn_semi 'RBRACKET'
    action 'LID' (noprec):   reduce refn --> 'LBRACKET' refn_semi 'RBRACKET'
    action 'INT' (noprec):   reduce refn --> 'LBRACKET' refn_semi 'RBRACKET'
    action 'error' (noprec):   reduce refn --> 'LBRACKET' refn_semi 'RBRACKET'
    action '#' (noprec):   reduce refn --> 'LBRACKET' refn_semi 'RBRACKET'
    action '$$' (noprec):   reduce refn --> 'LBRACKET' refn_semi 'RBRACKET'

  immediate action:   reduce refn --> 'LBRACKET' refn_semi 'RBRACKET'
 gotos:

state 83:
  items:
    refn -> 'NOT' . 'LPAREN' refn 'RPAREN'

  actions:
    action 'EOF' (noprec):   error
    action 'TUP' (noprec):   error
    action 'CTOR_ALONE' (noprec):   error
    action 'CTOR_ARG' (noprec):   error
    action 'P4' (noprec):   error
    action 'P3' (noprec):   error
    action 'P2' (noprec):   error
    action 'P1' (noprec):   error
    action 'OR' (noprec):   error
    action 'AND' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LPAREN' (noprec):   shift 84
    action 'PIPE' (noprec):   error
    action 'STAR' (noprec):   error
    action 'COLON' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'ARROW' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'REFINES' (noprec):   error
    action 'HOLE' (noprec):   error
    action 'WITH' (noprec):   error
    action 'NOT' (noprec):   error
    action 'UNIT' (noprec):   error
    action 'REC' (noprec):   error
    action 'LET' (noprec):   error
    action 'OF' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'FUN' (noprec):   error
    action 'TICK' (noprec):   error
    action 'PROJ' (noprec):   error
    action 'UID' (noprec):   error
    action 'LID' (noprec):   error
    action 'INT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 84:
  items:
    refn -> 'NOT' 'LPAREN' . refn 'RPAREN'

  actions:
    action 'EOF' (noprec):   error
    action 'TUP' (noprec):   error
    action 'CTOR_ALONE' (noprec):   error
    action 'CTOR_ARG' (noprec):   error
    action 'P4' (noprec):   error
    action 'P3' (noprec):   error
    action 'P2' (noprec):   error
    action 'P1' (noprec):   error
    action 'OR' (noprec):   shift 91
    action 'AND' (noprec):   shift 87
    action 'SEMI' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LBRACKET' (noprec):   shift 80
    action 'RPAREN' (noprec):   error
    action 'LPAREN' (noprec):   shift 104
    action 'PIPE' (noprec):   error
    action 'STAR' (noprec):   error
    action 'COLON' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'ARROW' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'REFINES' (noprec):   error
    action 'HOLE' (noprec):   error
    action 'WITH' (noprec):   error
    action 'NOT' (noprec):   shift 83
    action 'UNIT' (noprec):   error
    action 'REC' (noprec):   error
    action 'LET' (noprec):   error
    action 'OF' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'FUN' (noprec):   error
    action 'TICK' (noprec):   shift 111
    action 'PROJ' (noprec):   error
    action 'UID' (noprec):   shift 109
    action 'LID' (noprec):   shift 110
    action 'INT' (noprec):   shift 79
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto refn: 85

state 85:
  items:
    refn -> 'NOT' 'LPAREN' refn . 'RPAREN'
    refn -> refn . 'ARROW' refn

  actions:
    action 'EOF' (noprec):   error
    action 'TUP' (noprec):   error
    action 'CTOR_ALONE' (noprec):   error
    action 'CTOR_ARG' (noprec):   error
    action 'P4' (noprec):   error
    action 'P3' (noprec):   error
    action 'P2' (noprec):   error
    action 'P1' (noprec):   error
    action 'OR' (noprec):   error
    action 'AND' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RPAREN' (noprec):   shift 86
    action 'LPAREN' (noprec):   error
    action 'PIPE' (noprec):   error
    action 'STAR' (noprec):   error
    action 'COLON' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'ARROW' (explicit right 9993):   shift 103
    action 'EQUAL' (noprec):   error
    action 'REFINES' (noprec):   error
    action 'HOLE' (noprec):   error
    action 'WITH' (noprec):   error
    action 'NOT' (noprec):   error
    action 'UNIT' (noprec):   error
    action 'REC' (noprec):   error
    action 'LET' (noprec):   error
    action 'OF' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'FUN' (noprec):   error
    action 'TICK' (noprec):   error
    action 'PROJ' (noprec):   error
    action 'UID' (noprec):   error
    action 'LID' (noprec):   error
    action 'INT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 86:
  items:
    refn -> 'NOT' 'LPAREN' refn 'RPAREN' . 

  actions:
    action 'EOF' (noprec):   reduce refn --> 'NOT' 'LPAREN' refn 'RPAREN'
    action 'TUP' (noprec):   reduce refn --> 'NOT' 'LPAREN' refn 'RPAREN'
    action 'CTOR_ALONE' (noprec):   reduce refn --> 'NOT' 'LPAREN' refn 'RPAREN'
    action 'CTOR_ARG' (noprec):   reduce refn --> 'NOT' 'LPAREN' refn 'RPAREN'
    action 'P4' (noprec):   reduce refn --> 'NOT' 'LPAREN' refn 'RPAREN'
    action 'P3' (noprec):   reduce refn --> 'NOT' 'LPAREN' refn 'RPAREN'
    action 'P2' (noprec):   reduce refn --> 'NOT' 'LPAREN' refn 'RPAREN'
    action 'P1' (noprec):   reduce refn --> 'NOT' 'LPAREN' refn 'RPAREN'
    action 'OR' (noprec):   reduce refn --> 'NOT' 'LPAREN' refn 'RPAREN'
    action 'AND' (noprec):   reduce refn --> 'NOT' 'LPAREN' refn 'RPAREN'
    action 'SEMI' (noprec):   reduce refn --> 'NOT' 'LPAREN' refn 'RPAREN'
    action 'RBRACKET' (noprec):   reduce refn --> 'NOT' 'LPAREN' refn 'RPAREN'
    action 'LBRACKET' (noprec):   reduce refn --> 'NOT' 'LPAREN' refn 'RPAREN'
    action 'RPAREN' (noprec):   reduce refn --> 'NOT' 'LPAREN' refn 'RPAREN'
    action 'LPAREN' (noprec):   reduce refn --> 'NOT' 'LPAREN' refn 'RPAREN'
    action 'PIPE' (noprec):   reduce refn --> 'NOT' 'LPAREN' refn 'RPAREN'
    action 'STAR' (noprec):   reduce refn --> 'NOT' 'LPAREN' refn 'RPAREN'
    action 'COLON' (noprec):   reduce refn --> 'NOT' 'LPAREN' refn 'RPAREN'
    action 'COMMA' (noprec):   reduce refn --> 'NOT' 'LPAREN' refn 'RPAREN'
    action 'ARROW' (noprec):   reduce refn --> 'NOT' 'LPAREN' refn 'RPAREN'
    action 'EQUAL' (noprec):   reduce refn --> 'NOT' 'LPAREN' refn 'RPAREN'
    action 'REFINES' (noprec):   reduce refn --> 'NOT' 'LPAREN' refn 'RPAREN'
    action 'HOLE' (noprec):   reduce refn --> 'NOT' 'LPAREN' refn 'RPAREN'
    action 'WITH' (noprec):   reduce refn --> 'NOT' 'LPAREN' refn 'RPAREN'
    action 'NOT' (noprec):   reduce refn --> 'NOT' 'LPAREN' refn 'RPAREN'
    action 'UNIT' (noprec):   reduce refn --> 'NOT' 'LPAREN' refn 'RPAREN'
    action 'REC' (noprec):   reduce refn --> 'NOT' 'LPAREN' refn 'RPAREN'
    action 'LET' (noprec):   reduce refn --> 'NOT' 'LPAREN' refn 'RPAREN'
    action 'OF' (noprec):   reduce refn --> 'NOT' 'LPAREN' refn 'RPAREN'
    action 'TYPE' (noprec):   reduce refn --> 'NOT' 'LPAREN' refn 'RPAREN'
    action 'MATCH' (noprec):   reduce refn --> 'NOT' 'LPAREN' refn 'RPAREN'
    action 'FUN' (noprec):   reduce refn --> 'NOT' 'LPAREN' refn 'RPAREN'
    action 'TICK' (noprec):   reduce refn --> 'NOT' 'LPAREN' refn 'RPAREN'
    action 'PROJ' (noprec):   reduce refn --> 'NOT' 'LPAREN' refn 'RPAREN'
    action 'UID' (noprec):   reduce refn --> 'NOT' 'LPAREN' refn 'RPAREN'
    action 'LID' (noprec):   reduce refn --> 'NOT' 'LPAREN' refn 'RPAREN'
    action 'INT' (noprec):   reduce refn --> 'NOT' 'LPAREN' refn 'RPAREN'
    action 'error' (noprec):   reduce refn --> 'NOT' 'LPAREN' refn 'RPAREN'
    action '#' (noprec):   reduce refn --> 'NOT' 'LPAREN' refn 'RPAREN'
    action '$$' (noprec):   reduce refn --> 'NOT' 'LPAREN' refn 'RPAREN'

  immediate action:   reduce refn --> 'NOT' 'LPAREN' refn 'RPAREN'
 gotos:

state 87:
  items:
    refn -> 'AND' . 'LPAREN' refn_comma 'RPAREN'

  actions:
    action 'EOF' (noprec):   error
    action 'TUP' (noprec):   error
    action 'CTOR_ALONE' (noprec):   error
    action 'CTOR_ARG' (noprec):   error
    action 'P4' (noprec):   error
    action 'P3' (noprec):   error
    action 'P2' (noprec):   error
    action 'P1' (noprec):   error
    action 'OR' (noprec):   error
    action 'AND' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LPAREN' (noprec):   shift 88
    action 'PIPE' (noprec):   error
    action 'STAR' (noprec):   error
    action 'COLON' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'ARROW' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'REFINES' (noprec):   error
    action 'HOLE' (noprec):   error
    action 'WITH' (noprec):   error
    action 'NOT' (noprec):   error
    action 'UNIT' (noprec):   error
    action 'REC' (noprec):   error
    action 'LET' (noprec):   error
    action 'OF' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'FUN' (noprec):   error
    action 'TICK' (noprec):   error
    action 'PROJ' (noprec):   error
    action 'UID' (noprec):   error
    action 'LID' (noprec):   error
    action 'INT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 88:
  items:
    refn -> 'AND' 'LPAREN' . refn_comma 'RPAREN'

  actions:
    action 'EOF' (noprec):   error
    action 'TUP' (noprec):   error
    action 'CTOR_ALONE' (noprec):   error
    action 'CTOR_ARG' (noprec):   error
    action 'P4' (noprec):   error
    action 'P3' (noprec):   error
    action 'P2' (noprec):   error
    action 'P1' (noprec):   error
    action 'OR' (noprec):   shift 91
    action 'AND' (noprec):   shift 87
    action 'SEMI' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LBRACKET' (noprec):   shift 80
    action 'RPAREN' (noprec):   error
    action 'LPAREN' (noprec):   shift 104
    action 'PIPE' (noprec):   error
    action 'STAR' (noprec):   error
    action 'COLON' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'ARROW' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'REFINES' (noprec):   error
    action 'HOLE' (noprec):   error
    action 'WITH' (noprec):   error
    action 'NOT' (noprec):   shift 83
    action 'UNIT' (noprec):   error
    action 'REC' (noprec):   error
    action 'LET' (noprec):   error
    action 'OF' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'FUN' (noprec):   error
    action 'TICK' (noprec):   shift 111
    action 'PROJ' (noprec):   error
    action 'UID' (noprec):   shift 109
    action 'LID' (noprec):   shift 110
    action 'INT' (noprec):   shift 79
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto refn: 99
    goto refn_comma: 89

state 89:
  items:
    refn -> 'AND' 'LPAREN' refn_comma . 'RPAREN'
    refn_comma -> refn_comma . 'COMMA' refn

  actions:
    action 'EOF' (noprec):   error
    action 'TUP' (noprec):   error
    action 'CTOR_ALONE' (noprec):   error
    action 'CTOR_ARG' (noprec):   error
    action 'P4' (noprec):   error
    action 'P3' (noprec):   error
    action 'P2' (noprec):   error
    action 'P1' (noprec):   error
    action 'OR' (noprec):   error
    action 'AND' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RPAREN' (noprec):   shift 90
    action 'LPAREN' (noprec):   error
    action 'PIPE' (noprec):   error
    action 'STAR' (noprec):   error
    action 'COLON' (noprec):   error
    action 'COMMA' (noprec):   shift 114
    action 'ARROW' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'REFINES' (noprec):   error
    action 'HOLE' (noprec):   error
    action 'WITH' (noprec):   error
    action 'NOT' (noprec):   error
    action 'UNIT' (noprec):   error
    action 'REC' (noprec):   error
    action 'LET' (noprec):   error
    action 'OF' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'FUN' (noprec):   error
    action 'TICK' (noprec):   error
    action 'PROJ' (noprec):   error
    action 'UID' (noprec):   error
    action 'LID' (noprec):   error
    action 'INT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 90:
  items:
    refn -> 'AND' 'LPAREN' refn_comma 'RPAREN' . 

  actions:
    action 'EOF' (noprec):   reduce refn --> 'AND' 'LPAREN' refn_comma 'RPAREN'
    action 'TUP' (noprec):   reduce refn --> 'AND' 'LPAREN' refn_comma 'RPAREN'
    action 'CTOR_ALONE' (noprec):   reduce refn --> 'AND' 'LPAREN' refn_comma 'RPAREN'
    action 'CTOR_ARG' (noprec):   reduce refn --> 'AND' 'LPAREN' refn_comma 'RPAREN'
    action 'P4' (noprec):   reduce refn --> 'AND' 'LPAREN' refn_comma 'RPAREN'
    action 'P3' (noprec):   reduce refn --> 'AND' 'LPAREN' refn_comma 'RPAREN'
    action 'P2' (noprec):   reduce refn --> 'AND' 'LPAREN' refn_comma 'RPAREN'
    action 'P1' (noprec):   reduce refn --> 'AND' 'LPAREN' refn_comma 'RPAREN'
    action 'OR' (noprec):   reduce refn --> 'AND' 'LPAREN' refn_comma 'RPAREN'
    action 'AND' (noprec):   reduce refn --> 'AND' 'LPAREN' refn_comma 'RPAREN'
    action 'SEMI' (noprec):   reduce refn --> 'AND' 'LPAREN' refn_comma 'RPAREN'
    action 'RBRACKET' (noprec):   reduce refn --> 'AND' 'LPAREN' refn_comma 'RPAREN'
    action 'LBRACKET' (noprec):   reduce refn --> 'AND' 'LPAREN' refn_comma 'RPAREN'
    action 'RPAREN' (noprec):   reduce refn --> 'AND' 'LPAREN' refn_comma 'RPAREN'
    action 'LPAREN' (noprec):   reduce refn --> 'AND' 'LPAREN' refn_comma 'RPAREN'
    action 'PIPE' (noprec):   reduce refn --> 'AND' 'LPAREN' refn_comma 'RPAREN'
    action 'STAR' (noprec):   reduce refn --> 'AND' 'LPAREN' refn_comma 'RPAREN'
    action 'COLON' (noprec):   reduce refn --> 'AND' 'LPAREN' refn_comma 'RPAREN'
    action 'COMMA' (noprec):   reduce refn --> 'AND' 'LPAREN' refn_comma 'RPAREN'
    action 'ARROW' (noprec):   reduce refn --> 'AND' 'LPAREN' refn_comma 'RPAREN'
    action 'EQUAL' (noprec):   reduce refn --> 'AND' 'LPAREN' refn_comma 'RPAREN'
    action 'REFINES' (noprec):   reduce refn --> 'AND' 'LPAREN' refn_comma 'RPAREN'
    action 'HOLE' (noprec):   reduce refn --> 'AND' 'LPAREN' refn_comma 'RPAREN'
    action 'WITH' (noprec):   reduce refn --> 'AND' 'LPAREN' refn_comma 'RPAREN'
    action 'NOT' (noprec):   reduce refn --> 'AND' 'LPAREN' refn_comma 'RPAREN'
    action 'UNIT' (noprec):   reduce refn --> 'AND' 'LPAREN' refn_comma 'RPAREN'
    action 'REC' (noprec):   reduce refn --> 'AND' 'LPAREN' refn_comma 'RPAREN'
    action 'LET' (noprec):   reduce refn --> 'AND' 'LPAREN' refn_comma 'RPAREN'
    action 'OF' (noprec):   reduce refn --> 'AND' 'LPAREN' refn_comma 'RPAREN'
    action 'TYPE' (noprec):   reduce refn --> 'AND' 'LPAREN' refn_comma 'RPAREN'
    action 'MATCH' (noprec):   reduce refn --> 'AND' 'LPAREN' refn_comma 'RPAREN'
    action 'FUN' (noprec):   reduce refn --> 'AND' 'LPAREN' refn_comma 'RPAREN'
    action 'TICK' (noprec):   reduce refn --> 'AND' 'LPAREN' refn_comma 'RPAREN'
    action 'PROJ' (noprec):   reduce refn --> 'AND' 'LPAREN' refn_comma 'RPAREN'
    action 'UID' (noprec):   reduce refn --> 'AND' 'LPAREN' refn_comma 'RPAREN'
    action 'LID' (noprec):   reduce refn --> 'AND' 'LPAREN' refn_comma 'RPAREN'
    action 'INT' (noprec):   reduce refn --> 'AND' 'LPAREN' refn_comma 'RPAREN'
    action 'error' (noprec):   reduce refn --> 'AND' 'LPAREN' refn_comma 'RPAREN'
    action '#' (noprec):   reduce refn --> 'AND' 'LPAREN' refn_comma 'RPAREN'
    action '$$' (noprec):   reduce refn --> 'AND' 'LPAREN' refn_comma 'RPAREN'

  immediate action:   reduce refn --> 'AND' 'LPAREN' refn_comma 'RPAREN'
 gotos:

state 91:
  items:
    refn -> 'OR' . 'LPAREN' refn_comma 'RPAREN'

  actions:
    action 'EOF' (noprec):   error
    action 'TUP' (noprec):   error
    action 'CTOR_ALONE' (noprec):   error
    action 'CTOR_ARG' (noprec):   error
    action 'P4' (noprec):   error
    action 'P3' (noprec):   error
    action 'P2' (noprec):   error
    action 'P1' (noprec):   error
    action 'OR' (noprec):   error
    action 'AND' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LPAREN' (noprec):   shift 92
    action 'PIPE' (noprec):   error
    action 'STAR' (noprec):   error
    action 'COLON' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'ARROW' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'REFINES' (noprec):   error
    action 'HOLE' (noprec):   error
    action 'WITH' (noprec):   error
    action 'NOT' (noprec):   error
    action 'UNIT' (noprec):   error
    action 'REC' (noprec):   error
    action 'LET' (noprec):   error
    action 'OF' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'FUN' (noprec):   error
    action 'TICK' (noprec):   error
    action 'PROJ' (noprec):   error
    action 'UID' (noprec):   error
    action 'LID' (noprec):   error
    action 'INT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 92:
  items:
    refn -> 'OR' 'LPAREN' . refn_comma 'RPAREN'

  actions:
    action 'EOF' (noprec):   error
    action 'TUP' (noprec):   error
    action 'CTOR_ALONE' (noprec):   error
    action 'CTOR_ARG' (noprec):   error
    action 'P4' (noprec):   error
    action 'P3' (noprec):   error
    action 'P2' (noprec):   error
    action 'P1' (noprec):   error
    action 'OR' (noprec):   shift 91
    action 'AND' (noprec):   shift 87
    action 'SEMI' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LBRACKET' (noprec):   shift 80
    action 'RPAREN' (noprec):   error
    action 'LPAREN' (noprec):   shift 104
    action 'PIPE' (noprec):   error
    action 'STAR' (noprec):   error
    action 'COLON' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'ARROW' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'REFINES' (noprec):   error
    action 'HOLE' (noprec):   error
    action 'WITH' (noprec):   error
    action 'NOT' (noprec):   shift 83
    action 'UNIT' (noprec):   error
    action 'REC' (noprec):   error
    action 'LET' (noprec):   error
    action 'OF' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'FUN' (noprec):   error
    action 'TICK' (noprec):   shift 111
    action 'PROJ' (noprec):   error
    action 'UID' (noprec):   shift 109
    action 'LID' (noprec):   shift 110
    action 'INT' (noprec):   shift 79
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto refn: 99
    goto refn_comma: 93

state 93:
  items:
    refn -> 'OR' 'LPAREN' refn_comma . 'RPAREN'
    refn_comma -> refn_comma . 'COMMA' refn

  actions:
    action 'EOF' (noprec):   error
    action 'TUP' (noprec):   error
    action 'CTOR_ALONE' (noprec):   error
    action 'CTOR_ARG' (noprec):   error
    action 'P4' (noprec):   error
    action 'P3' (noprec):   error
    action 'P2' (noprec):   error
    action 'P1' (noprec):   error
    action 'OR' (noprec):   error
    action 'AND' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RPAREN' (noprec):   shift 94
    action 'LPAREN' (noprec):   error
    action 'PIPE' (noprec):   error
    action 'STAR' (noprec):   error
    action 'COLON' (noprec):   error
    action 'COMMA' (noprec):   shift 114
    action 'ARROW' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'REFINES' (noprec):   error
    action 'HOLE' (noprec):   error
    action 'WITH' (noprec):   error
    action 'NOT' (noprec):   error
    action 'UNIT' (noprec):   error
    action 'REC' (noprec):   error
    action 'LET' (noprec):   error
    action 'OF' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'FUN' (noprec):   error
    action 'TICK' (noprec):   error
    action 'PROJ' (noprec):   error
    action 'UID' (noprec):   error
    action 'LID' (noprec):   error
    action 'INT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 94:
  items:
    refn -> 'OR' 'LPAREN' refn_comma 'RPAREN' . 

  actions:
    action 'EOF' (noprec):   reduce refn --> 'OR' 'LPAREN' refn_comma 'RPAREN'
    action 'TUP' (noprec):   reduce refn --> 'OR' 'LPAREN' refn_comma 'RPAREN'
    action 'CTOR_ALONE' (noprec):   reduce refn --> 'OR' 'LPAREN' refn_comma 'RPAREN'
    action 'CTOR_ARG' (noprec):   reduce refn --> 'OR' 'LPAREN' refn_comma 'RPAREN'
    action 'P4' (noprec):   reduce refn --> 'OR' 'LPAREN' refn_comma 'RPAREN'
    action 'P3' (noprec):   reduce refn --> 'OR' 'LPAREN' refn_comma 'RPAREN'
    action 'P2' (noprec):   reduce refn --> 'OR' 'LPAREN' refn_comma 'RPAREN'
    action 'P1' (noprec):   reduce refn --> 'OR' 'LPAREN' refn_comma 'RPAREN'
    action 'OR' (noprec):   reduce refn --> 'OR' 'LPAREN' refn_comma 'RPAREN'
    action 'AND' (noprec):   reduce refn --> 'OR' 'LPAREN' refn_comma 'RPAREN'
    action 'SEMI' (noprec):   reduce refn --> 'OR' 'LPAREN' refn_comma 'RPAREN'
    action 'RBRACKET' (noprec):   reduce refn --> 'OR' 'LPAREN' refn_comma 'RPAREN'
    action 'LBRACKET' (noprec):   reduce refn --> 'OR' 'LPAREN' refn_comma 'RPAREN'
    action 'RPAREN' (noprec):   reduce refn --> 'OR' 'LPAREN' refn_comma 'RPAREN'
    action 'LPAREN' (noprec):   reduce refn --> 'OR' 'LPAREN' refn_comma 'RPAREN'
    action 'PIPE' (noprec):   reduce refn --> 'OR' 'LPAREN' refn_comma 'RPAREN'
    action 'STAR' (noprec):   reduce refn --> 'OR' 'LPAREN' refn_comma 'RPAREN'
    action 'COLON' (noprec):   reduce refn --> 'OR' 'LPAREN' refn_comma 'RPAREN'
    action 'COMMA' (noprec):   reduce refn --> 'OR' 'LPAREN' refn_comma 'RPAREN'
    action 'ARROW' (noprec):   reduce refn --> 'OR' 'LPAREN' refn_comma 'RPAREN'
    action 'EQUAL' (noprec):   reduce refn --> 'OR' 'LPAREN' refn_comma 'RPAREN'
    action 'REFINES' (noprec):   reduce refn --> 'OR' 'LPAREN' refn_comma 'RPAREN'
    action 'HOLE' (noprec):   reduce refn --> 'OR' 'LPAREN' refn_comma 'RPAREN'
    action 'WITH' (noprec):   reduce refn --> 'OR' 'LPAREN' refn_comma 'RPAREN'
    action 'NOT' (noprec):   reduce refn --> 'OR' 'LPAREN' refn_comma 'RPAREN'
    action 'UNIT' (noprec):   reduce refn --> 'OR' 'LPAREN' refn_comma 'RPAREN'
    action 'REC' (noprec):   reduce refn --> 'OR' 'LPAREN' refn_comma 'RPAREN'
    action 'LET' (noprec):   reduce refn --> 'OR' 'LPAREN' refn_comma 'RPAREN'
    action 'OF' (noprec):   reduce refn --> 'OR' 'LPAREN' refn_comma 'RPAREN'
    action 'TYPE' (noprec):   reduce refn --> 'OR' 'LPAREN' refn_comma 'RPAREN'
    action 'MATCH' (noprec):   reduce refn --> 'OR' 'LPAREN' refn_comma 'RPAREN'
    action 'FUN' (noprec):   reduce refn --> 'OR' 'LPAREN' refn_comma 'RPAREN'
    action 'TICK' (noprec):   reduce refn --> 'OR' 'LPAREN' refn_comma 'RPAREN'
    action 'PROJ' (noprec):   reduce refn --> 'OR' 'LPAREN' refn_comma 'RPAREN'
    action 'UID' (noprec):   reduce refn --> 'OR' 'LPAREN' refn_comma 'RPAREN'
    action 'LID' (noprec):   reduce refn --> 'OR' 'LPAREN' refn_comma 'RPAREN'
    action 'INT' (noprec):   reduce refn --> 'OR' 'LPAREN' refn_comma 'RPAREN'
    action 'error' (noprec):   reduce refn --> 'OR' 'LPAREN' refn_comma 'RPAREN'
    action '#' (noprec):   reduce refn --> 'OR' 'LPAREN' refn_comma 'RPAREN'
    action '$$' (noprec):   reduce refn --> 'OR' 'LPAREN' refn_comma 'RPAREN'

  immediate action:   reduce refn --> 'OR' 'LPAREN' refn_comma 'RPAREN'
 gotos:

state 95:
  items:
    refn -> refn . 'ARROW' refn
    refn -> refn 'ARROW' refn . 

  actions:
    action 'EOF' (explicit right 9993):   reduce refn --> refn 'ARROW' refn
    action 'TUP' (explicit right 9993):   reduce refn --> refn 'ARROW' refn
    action 'CTOR_ALONE' (explicit right 9993):   reduce refn --> refn 'ARROW' refn
    action 'CTOR_ARG' (explicit right 9993):   reduce refn --> refn 'ARROW' refn
    action 'P4' (explicit right 9993):   reduce refn --> refn 'ARROW' refn
    action 'P3' (explicit right 9993):   reduce refn --> refn 'ARROW' refn
    action 'P2' (explicit right 9993):   reduce refn --> refn 'ARROW' refn
    action 'P1' (explicit right 9993):   reduce refn --> refn 'ARROW' refn
    action 'OR' (explicit right 9993):   reduce refn --> refn 'ARROW' refn
    action 'AND' (explicit right 9993):   reduce refn --> refn 'ARROW' refn
    action 'SEMI' (explicit right 9993):   reduce refn --> refn 'ARROW' refn
    action 'RBRACKET' (explicit right 9993):   reduce refn --> refn 'ARROW' refn
    action 'LBRACKET' (explicit right 9993):   reduce refn --> refn 'ARROW' refn
    action 'RPAREN' (explicit right 9993):   reduce refn --> refn 'ARROW' refn
    action 'LPAREN' (explicit right 9993):   reduce refn --> refn 'ARROW' refn
    action 'PIPE' (explicit right 9993):   reduce refn --> refn 'ARROW' refn
    action 'STAR' (explicit right 9993):   reduce refn --> refn 'ARROW' refn
    action 'COLON' (explicit right 9993):   reduce refn --> refn 'ARROW' refn
    action 'COMMA' (explicit right 9993):   reduce refn --> refn 'ARROW' refn
    action 'ARROW' (explicit right 9993):   shift 103
    action 'EQUAL' (explicit right 9993):   reduce refn --> refn 'ARROW' refn
    action 'REFINES' (explicit right 9993):   reduce refn --> refn 'ARROW' refn
    action 'HOLE' (explicit right 9993):   reduce refn --> refn 'ARROW' refn
    action 'WITH' (explicit right 9993):   reduce refn --> refn 'ARROW' refn
    action 'NOT' (explicit right 9993):   reduce refn --> refn 'ARROW' refn
    action 'UNIT' (explicit right 9993):   reduce refn --> refn 'ARROW' refn
    action 'REC' (explicit right 9993):   reduce refn --> refn 'ARROW' refn
    action 'LET' (explicit right 9993):   reduce refn --> refn 'ARROW' refn
    action 'OF' (explicit right 9993):   reduce refn --> refn 'ARROW' refn
    action 'TYPE' (explicit right 9993):   reduce refn --> refn 'ARROW' refn
    action 'MATCH' (explicit right 9993):   reduce refn --> refn 'ARROW' refn
    action 'FUN' (explicit right 9993):   reduce refn --> refn 'ARROW' refn
    action 'TICK' (explicit right 9993):   reduce refn --> refn 'ARROW' refn
    action 'PROJ' (explicit right 9993):   reduce refn --> refn 'ARROW' refn
    action 'UID' (explicit right 9993):   reduce refn --> refn 'ARROW' refn
    action 'LID' (explicit right 9993):   reduce refn --> refn 'ARROW' refn
    action 'INT' (explicit right 9993):   reduce refn --> refn 'ARROW' refn
    action 'error' (explicit right 9993):   reduce refn --> refn 'ARROW' refn
    action '#' (explicit right 9993):   reduce refn --> refn 'ARROW' refn
    action '$$' (explicit right 9993):   reduce refn --> refn 'ARROW' refn

  immediate action: <none>
 gotos:

state 96:
  items:
    refn -> refn . 'ARROW' refn
    refn -> 'LPAREN' refn . 'RPAREN'
    refn_comma -> refn . 

  actions:
    action 'EOF' (noprec):   reduce refn_comma --> refn
    action 'TUP' (noprec):   reduce refn_comma --> refn
    action 'CTOR_ALONE' (noprec):   reduce refn_comma --> refn
    action 'CTOR_ARG' (noprec):   reduce refn_comma --> refn
    action 'P4' (noprec):   reduce refn_comma --> refn
    action 'P3' (noprec):   reduce refn_comma --> refn
    action 'P2' (noprec):   reduce refn_comma --> refn
    action 'P1' (noprec):   reduce refn_comma --> refn
    action 'OR' (noprec):   reduce refn_comma --> refn
    action 'AND' (noprec):   reduce refn_comma --> refn
    action 'SEMI' (noprec):   reduce refn_comma --> refn
    action 'RBRACKET' (noprec):   reduce refn_comma --> refn
    action 'LBRACKET' (noprec):   reduce refn_comma --> refn
    action 'RPAREN' (noprec):   shift 106
    action 'LPAREN' (noprec):   reduce refn_comma --> refn
    action 'PIPE' (noprec):   reduce refn_comma --> refn
    action 'STAR' (noprec):   reduce refn_comma --> refn
    action 'COLON' (noprec):   reduce refn_comma --> refn
    action 'COMMA' (noprec):   reduce refn_comma --> refn
    action 'ARROW' (explicit right 9993):   shift 103
    action 'EQUAL' (noprec):   reduce refn_comma --> refn
    action 'REFINES' (noprec):   reduce refn_comma --> refn
    action 'HOLE' (noprec):   reduce refn_comma --> refn
    action 'WITH' (noprec):   reduce refn_comma --> refn
    action 'NOT' (noprec):   reduce refn_comma --> refn
    action 'UNIT' (noprec):   reduce refn_comma --> refn
    action 'REC' (noprec):   reduce refn_comma --> refn
    action 'LET' (noprec):   reduce refn_comma --> refn
    action 'OF' (noprec):   reduce refn_comma --> refn
    action 'TYPE' (noprec):   reduce refn_comma --> refn
    action 'MATCH' (noprec):   reduce refn_comma --> refn
    action 'FUN' (noprec):   reduce refn_comma --> refn
    action 'TICK' (noprec):   reduce refn_comma --> refn
    action 'PROJ' (noprec):   reduce refn_comma --> refn
    action 'UID' (noprec):   reduce refn_comma --> refn
    action 'LID' (noprec):   reduce refn_comma --> refn
    action 'INT' (noprec):   reduce refn_comma --> refn
    action 'error' (noprec):   reduce refn_comma --> refn
    action '#' (noprec):   reduce refn_comma --> refn
    action '$$' (noprec):   reduce refn_comma --> refn

  immediate action: <none>
 gotos:

state 97:
  items:
    refn -> refn . 'ARROW' refn
    refn -> 'UID' refn . 

  actions:
    action 'EOF' (explicit nonassoc 9996):   reduce refn --> 'UID' refn
    action 'TUP' (explicit nonassoc 9996):   reduce refn --> 'UID' refn
    action 'CTOR_ALONE' (explicit nonassoc 9996):   reduce refn --> 'UID' refn
    action 'CTOR_ARG' (explicit nonassoc 9996):   reduce refn --> 'UID' refn
    action 'P4' (explicit nonassoc 9996):   reduce refn --> 'UID' refn
    action 'P3' (explicit nonassoc 9996):   reduce refn --> 'UID' refn
    action 'P2' (explicit nonassoc 9996):   reduce refn --> 'UID' refn
    action 'P1' (explicit nonassoc 9996):   reduce refn --> 'UID' refn
    action 'OR' (explicit nonassoc 9996):   reduce refn --> 'UID' refn
    action 'AND' (explicit nonassoc 9996):   reduce refn --> 'UID' refn
    action 'SEMI' (explicit nonassoc 9996):   reduce refn --> 'UID' refn
    action 'RBRACKET' (explicit nonassoc 9996):   reduce refn --> 'UID' refn
    action 'LBRACKET' (explicit nonassoc 9996):   reduce refn --> 'UID' refn
    action 'RPAREN' (explicit nonassoc 9996):   reduce refn --> 'UID' refn
    action 'LPAREN' (explicit nonassoc 9996):   reduce refn --> 'UID' refn
    action 'PIPE' (explicit nonassoc 9996):   reduce refn --> 'UID' refn
    action 'STAR' (explicit nonassoc 9996):   reduce refn --> 'UID' refn
    action 'COLON' (explicit nonassoc 9996):   reduce refn --> 'UID' refn
    action 'COMMA' (explicit nonassoc 9996):   reduce refn --> 'UID' refn
    action 'ARROW' (explicit nonassoc 9996):   reduce refn --> 'UID' refn
    action 'EQUAL' (explicit nonassoc 9996):   reduce refn --> 'UID' refn
    action 'REFINES' (explicit nonassoc 9996):   reduce refn --> 'UID' refn
    action 'HOLE' (explicit nonassoc 9996):   reduce refn --> 'UID' refn
    action 'WITH' (explicit nonassoc 9996):   reduce refn --> 'UID' refn
    action 'NOT' (explicit nonassoc 9996):   reduce refn --> 'UID' refn
    action 'UNIT' (explicit nonassoc 9996):   reduce refn --> 'UID' refn
    action 'REC' (explicit nonassoc 9996):   reduce refn --> 'UID' refn
    action 'LET' (explicit nonassoc 9996):   reduce refn --> 'UID' refn
    action 'OF' (explicit nonassoc 9996):   reduce refn --> 'UID' refn
    action 'TYPE' (explicit nonassoc 9996):   reduce refn --> 'UID' refn
    action 'MATCH' (explicit nonassoc 9996):   reduce refn --> 'UID' refn
    action 'FUN' (explicit nonassoc 9996):   reduce refn --> 'UID' refn
    action 'TICK' (explicit nonassoc 9996):   reduce refn --> 'UID' refn
    action 'PROJ' (explicit nonassoc 9996):   reduce refn --> 'UID' refn
    action 'UID' (explicit nonassoc 9996):   reduce refn --> 'UID' refn
    action 'LID' (explicit nonassoc 9996):   reduce refn --> 'UID' refn
    action 'INT' (explicit nonassoc 9996):   reduce refn --> 'UID' refn
    action 'error' (explicit nonassoc 9996):   reduce refn --> 'UID' refn
    action '#' (explicit nonassoc 9996):   reduce refn --> 'UID' refn
    action '$$' (explicit nonassoc 9996):   reduce refn --> 'UID' refn

  immediate action: <none>
 gotos:

state 98:
  items:
    refn -> refn . 'ARROW' refn
    refn_comma_one -> refn_comma 'COMMA' refn . 
    refn_comma -> refn_comma 'COMMA' refn . 

  actions:
    action 'EOF' (noprec):   reduce refn_comma_one --> refn_comma 'COMMA' refn
    action 'TUP' (noprec):   reduce refn_comma_one --> refn_comma 'COMMA' refn
    action 'CTOR_ALONE' (noprec):   reduce refn_comma_one --> refn_comma 'COMMA' refn
    action 'CTOR_ARG' (noprec):   reduce refn_comma_one --> refn_comma 'COMMA' refn
    action 'P4' (noprec):   reduce refn_comma_one --> refn_comma 'COMMA' refn
    action 'P3' (noprec):   reduce refn_comma_one --> refn_comma 'COMMA' refn
    action 'P2' (noprec):   reduce refn_comma_one --> refn_comma 'COMMA' refn
    action 'P1' (noprec):   reduce refn_comma_one --> refn_comma 'COMMA' refn
    action 'OR' (noprec):   reduce refn_comma_one --> refn_comma 'COMMA' refn
    action 'AND' (noprec):   reduce refn_comma_one --> refn_comma 'COMMA' refn
    action 'SEMI' (noprec):   reduce refn_comma_one --> refn_comma 'COMMA' refn
    action 'RBRACKET' (noprec):   reduce refn_comma_one --> refn_comma 'COMMA' refn
    action 'LBRACKET' (noprec):   reduce refn_comma_one --> refn_comma 'COMMA' refn
    action 'RPAREN' (noprec):   reduce refn_comma_one --> refn_comma 'COMMA' refn
    action 'LPAREN' (noprec):   reduce refn_comma_one --> refn_comma 'COMMA' refn
    action 'PIPE' (noprec):   reduce refn_comma_one --> refn_comma 'COMMA' refn
    action 'STAR' (noprec):   reduce refn_comma_one --> refn_comma 'COMMA' refn
    action 'COLON' (noprec):   reduce refn_comma_one --> refn_comma 'COMMA' refn
    action 'COMMA' (noprec):   reduce refn_comma --> refn_comma 'COMMA' refn
    action 'ARROW' (explicit right 9993):   shift 103
    action 'EQUAL' (noprec):   reduce refn_comma_one --> refn_comma 'COMMA' refn
    action 'REFINES' (noprec):   reduce refn_comma_one --> refn_comma 'COMMA' refn
    action 'HOLE' (noprec):   reduce refn_comma_one --> refn_comma 'COMMA' refn
    action 'WITH' (noprec):   reduce refn_comma_one --> refn_comma 'COMMA' refn
    action 'NOT' (noprec):   reduce refn_comma_one --> refn_comma 'COMMA' refn
    action 'UNIT' (noprec):   reduce refn_comma_one --> refn_comma 'COMMA' refn
    action 'REC' (noprec):   reduce refn_comma_one --> refn_comma 'COMMA' refn
    action 'LET' (noprec):   reduce refn_comma_one --> refn_comma 'COMMA' refn
    action 'OF' (noprec):   reduce refn_comma_one --> refn_comma 'COMMA' refn
    action 'TYPE' (noprec):   reduce refn_comma_one --> refn_comma 'COMMA' refn
    action 'MATCH' (noprec):   reduce refn_comma_one --> refn_comma 'COMMA' refn
    action 'FUN' (noprec):   reduce refn_comma_one --> refn_comma 'COMMA' refn
    action 'TICK' (noprec):   reduce refn_comma_one --> refn_comma 'COMMA' refn
    action 'PROJ' (noprec):   reduce refn_comma_one --> refn_comma 'COMMA' refn
    action 'UID' (noprec):   reduce refn_comma_one --> refn_comma 'COMMA' refn
    action 'LID' (noprec):   reduce refn_comma_one --> refn_comma 'COMMA' refn
    action 'INT' (noprec):   reduce refn_comma_one --> refn_comma 'COMMA' refn
    action 'error' (noprec):   reduce refn_comma_one --> refn_comma 'COMMA' refn
    action '#' (noprec):   reduce refn_comma_one --> refn_comma 'COMMA' refn
    action '$$' (noprec):   reduce refn_comma_one --> refn_comma 'COMMA' refn

  immediate action: <none>
 gotos:

state 99:
  items:
    refn -> refn . 'ARROW' refn
    refn_comma -> refn . 

  actions:
    action 'EOF' (noprec):   reduce refn_comma --> refn
    action 'TUP' (noprec):   reduce refn_comma --> refn
    action 'CTOR_ALONE' (noprec):   reduce refn_comma --> refn
    action 'CTOR_ARG' (noprec):   reduce refn_comma --> refn
    action 'P4' (noprec):   reduce refn_comma --> refn
    action 'P3' (noprec):   reduce refn_comma --> refn
    action 'P2' (noprec):   reduce refn_comma --> refn
    action 'P1' (noprec):   reduce refn_comma --> refn
    action 'OR' (noprec):   reduce refn_comma --> refn
    action 'AND' (noprec):   reduce refn_comma --> refn
    action 'SEMI' (noprec):   reduce refn_comma --> refn
    action 'RBRACKET' (noprec):   reduce refn_comma --> refn
    action 'LBRACKET' (noprec):   reduce refn_comma --> refn
    action 'RPAREN' (noprec):   reduce refn_comma --> refn
    action 'LPAREN' (noprec):   reduce refn_comma --> refn
    action 'PIPE' (noprec):   reduce refn_comma --> refn
    action 'STAR' (noprec):   reduce refn_comma --> refn
    action 'COLON' (noprec):   reduce refn_comma --> refn
    action 'COMMA' (noprec):   reduce refn_comma --> refn
    action 'ARROW' (explicit right 9993):   shift 103
    action 'EQUAL' (noprec):   reduce refn_comma --> refn
    action 'REFINES' (noprec):   reduce refn_comma --> refn
    action 'HOLE' (noprec):   reduce refn_comma --> refn
    action 'WITH' (noprec):   reduce refn_comma --> refn
    action 'NOT' (noprec):   reduce refn_comma --> refn
    action 'UNIT' (noprec):   reduce refn_comma --> refn
    action 'REC' (noprec):   reduce refn_comma --> refn
    action 'LET' (noprec):   reduce refn_comma --> refn
    action 'OF' (noprec):   reduce refn_comma --> refn
    action 'TYPE' (noprec):   reduce refn_comma --> refn
    action 'MATCH' (noprec):   reduce refn_comma --> refn
    action 'FUN' (noprec):   reduce refn_comma --> refn
    action 'TICK' (noprec):   reduce refn_comma --> refn
    action 'PROJ' (noprec):   reduce refn_comma --> refn
    action 'UID' (noprec):   reduce refn_comma --> refn
    action 'LID' (noprec):   reduce refn_comma --> refn
    action 'INT' (noprec):   reduce refn_comma --> refn
    action 'error' (noprec):   reduce refn_comma --> refn
    action '#' (noprec):   reduce refn_comma --> refn
    action '$$' (noprec):   reduce refn_comma --> refn

  immediate action: <none>
 gotos:

state 100:
  items:
    refn -> refn . 'ARROW' refn
    refn_comma -> refn_comma 'COMMA' refn . 

  actions:
    action 'EOF' (noprec):   reduce refn_comma --> refn_comma 'COMMA' refn
    action 'TUP' (noprec):   reduce refn_comma --> refn_comma 'COMMA' refn
    action 'CTOR_ALONE' (noprec):   reduce refn_comma --> refn_comma 'COMMA' refn
    action 'CTOR_ARG' (noprec):   reduce refn_comma --> refn_comma 'COMMA' refn
    action 'P4' (noprec):   reduce refn_comma --> refn_comma 'COMMA' refn
    action 'P3' (noprec):   reduce refn_comma --> refn_comma 'COMMA' refn
    action 'P2' (noprec):   reduce refn_comma --> refn_comma 'COMMA' refn
    action 'P1' (noprec):   reduce refn_comma --> refn_comma 'COMMA' refn
    action 'OR' (noprec):   reduce refn_comma --> refn_comma 'COMMA' refn
    action 'AND' (noprec):   reduce refn_comma --> refn_comma 'COMMA' refn
    action 'SEMI' (noprec):   reduce refn_comma --> refn_comma 'COMMA' refn
    action 'RBRACKET' (noprec):   reduce refn_comma --> refn_comma 'COMMA' refn
    action 'LBRACKET' (noprec):   reduce refn_comma --> refn_comma 'COMMA' refn
    action 'RPAREN' (noprec):   reduce refn_comma --> refn_comma 'COMMA' refn
    action 'LPAREN' (noprec):   reduce refn_comma --> refn_comma 'COMMA' refn
    action 'PIPE' (noprec):   reduce refn_comma --> refn_comma 'COMMA' refn
    action 'STAR' (noprec):   reduce refn_comma --> refn_comma 'COMMA' refn
    action 'COLON' (noprec):   reduce refn_comma --> refn_comma 'COMMA' refn
    action 'COMMA' (noprec):   reduce refn_comma --> refn_comma 'COMMA' refn
    action 'ARROW' (explicit right 9993):   shift 103
    action 'EQUAL' (noprec):   reduce refn_comma --> refn_comma 'COMMA' refn
    action 'REFINES' (noprec):   reduce refn_comma --> refn_comma 'COMMA' refn
    action 'HOLE' (noprec):   reduce refn_comma --> refn_comma 'COMMA' refn
    action 'WITH' (noprec):   reduce refn_comma --> refn_comma 'COMMA' refn
    action 'NOT' (noprec):   reduce refn_comma --> refn_comma 'COMMA' refn
    action 'UNIT' (noprec):   reduce refn_comma --> refn_comma 'COMMA' refn
    action 'REC' (noprec):   reduce refn_comma --> refn_comma 'COMMA' refn
    action 'LET' (noprec):   reduce refn_comma --> refn_comma 'COMMA' refn
    action 'OF' (noprec):   reduce refn_comma --> refn_comma 'COMMA' refn
    action 'TYPE' (noprec):   reduce refn_comma --> refn_comma 'COMMA' refn
    action 'MATCH' (noprec):   reduce refn_comma --> refn_comma 'COMMA' refn
    action 'FUN' (noprec):   reduce refn_comma --> refn_comma 'COMMA' refn
    action 'TICK' (noprec):   reduce refn_comma --> refn_comma 'COMMA' refn
    action 'PROJ' (noprec):   reduce refn_comma --> refn_comma 'COMMA' refn
    action 'UID' (noprec):   reduce refn_comma --> refn_comma 'COMMA' refn
    action 'LID' (noprec):   reduce refn_comma --> refn_comma 'COMMA' refn
    action 'INT' (noprec):   reduce refn_comma --> refn_comma 'COMMA' refn
    action 'error' (noprec):   reduce refn_comma --> refn_comma 'COMMA' refn
    action '#' (noprec):   reduce refn_comma --> refn_comma 'COMMA' refn
    action '$$' (noprec):   reduce refn_comma --> refn_comma 'COMMA' refn

  immediate action: <none>
 gotos:

state 101:
  items:
    refn -> refn . 'ARROW' refn
    refn_semi2 -> refn . 

  actions:
    action 'EOF' (noprec):   reduce refn_semi2 --> refn
    action 'TUP' (noprec):   reduce refn_semi2 --> refn
    action 'CTOR_ALONE' (noprec):   reduce refn_semi2 --> refn
    action 'CTOR_ARG' (noprec):   reduce refn_semi2 --> refn
    action 'P4' (noprec):   reduce refn_semi2 --> refn
    action 'P3' (noprec):   reduce refn_semi2 --> refn
    action 'P2' (noprec):   reduce refn_semi2 --> refn
    action 'P1' (noprec):   reduce refn_semi2 --> refn
    action 'OR' (noprec):   reduce refn_semi2 --> refn
    action 'AND' (noprec):   reduce refn_semi2 --> refn
    action 'SEMI' (noprec):   reduce refn_semi2 --> refn
    action 'RBRACKET' (noprec):   reduce refn_semi2 --> refn
    action 'LBRACKET' (noprec):   reduce refn_semi2 --> refn
    action 'RPAREN' (noprec):   reduce refn_semi2 --> refn
    action 'LPAREN' (noprec):   reduce refn_semi2 --> refn
    action 'PIPE' (noprec):   reduce refn_semi2 --> refn
    action 'STAR' (noprec):   reduce refn_semi2 --> refn
    action 'COLON' (noprec):   reduce refn_semi2 --> refn
    action 'COMMA' (noprec):   reduce refn_semi2 --> refn
    action 'ARROW' (explicit right 9993):   shift 103
    action 'EQUAL' (noprec):   reduce refn_semi2 --> refn
    action 'REFINES' (noprec):   reduce refn_semi2 --> refn
    action 'HOLE' (noprec):   reduce refn_semi2 --> refn
    action 'WITH' (noprec):   reduce refn_semi2 --> refn
    action 'NOT' (noprec):   reduce refn_semi2 --> refn
    action 'UNIT' (noprec):   reduce refn_semi2 --> refn
    action 'REC' (noprec):   reduce refn_semi2 --> refn
    action 'LET' (noprec):   reduce refn_semi2 --> refn
    action 'OF' (noprec):   reduce refn_semi2 --> refn
    action 'TYPE' (noprec):   reduce refn_semi2 --> refn
    action 'MATCH' (noprec):   reduce refn_semi2 --> refn
    action 'FUN' (noprec):   reduce refn_semi2 --> refn
    action 'TICK' (noprec):   reduce refn_semi2 --> refn
    action 'PROJ' (noprec):   reduce refn_semi2 --> refn
    action 'UID' (noprec):   reduce refn_semi2 --> refn
    action 'LID' (noprec):   reduce refn_semi2 --> refn
    action 'INT' (noprec):   reduce refn_semi2 --> refn
    action 'error' (noprec):   reduce refn_semi2 --> refn
    action '#' (noprec):   reduce refn_semi2 --> refn
    action '$$' (noprec):   reduce refn_semi2 --> refn

  immediate action: <none>
 gotos:

state 102:
  items:
    refn -> refn . 'ARROW' refn
    refn_semi2 -> refn_semi2 'SEMI' refn . 

  actions:
    action 'EOF' (noprec):   reduce refn_semi2 --> refn_semi2 'SEMI' refn
    action 'TUP' (noprec):   reduce refn_semi2 --> refn_semi2 'SEMI' refn
    action 'CTOR_ALONE' (noprec):   reduce refn_semi2 --> refn_semi2 'SEMI' refn
    action 'CTOR_ARG' (noprec):   reduce refn_semi2 --> refn_semi2 'SEMI' refn
    action 'P4' (noprec):   reduce refn_semi2 --> refn_semi2 'SEMI' refn
    action 'P3' (noprec):   reduce refn_semi2 --> refn_semi2 'SEMI' refn
    action 'P2' (noprec):   reduce refn_semi2 --> refn_semi2 'SEMI' refn
    action 'P1' (noprec):   reduce refn_semi2 --> refn_semi2 'SEMI' refn
    action 'OR' (noprec):   reduce refn_semi2 --> refn_semi2 'SEMI' refn
    action 'AND' (noprec):   reduce refn_semi2 --> refn_semi2 'SEMI' refn
    action 'SEMI' (noprec):   reduce refn_semi2 --> refn_semi2 'SEMI' refn
    action 'RBRACKET' (noprec):   reduce refn_semi2 --> refn_semi2 'SEMI' refn
    action 'LBRACKET' (noprec):   reduce refn_semi2 --> refn_semi2 'SEMI' refn
    action 'RPAREN' (noprec):   reduce refn_semi2 --> refn_semi2 'SEMI' refn
    action 'LPAREN' (noprec):   reduce refn_semi2 --> refn_semi2 'SEMI' refn
    action 'PIPE' (noprec):   reduce refn_semi2 --> refn_semi2 'SEMI' refn
    action 'STAR' (noprec):   reduce refn_semi2 --> refn_semi2 'SEMI' refn
    action 'COLON' (noprec):   reduce refn_semi2 --> refn_semi2 'SEMI' refn
    action 'COMMA' (noprec):   reduce refn_semi2 --> refn_semi2 'SEMI' refn
    action 'ARROW' (explicit right 9993):   shift 103
    action 'EQUAL' (noprec):   reduce refn_semi2 --> refn_semi2 'SEMI' refn
    action 'REFINES' (noprec):   reduce refn_semi2 --> refn_semi2 'SEMI' refn
    action 'HOLE' (noprec):   reduce refn_semi2 --> refn_semi2 'SEMI' refn
    action 'WITH' (noprec):   reduce refn_semi2 --> refn_semi2 'SEMI' refn
    action 'NOT' (noprec):   reduce refn_semi2 --> refn_semi2 'SEMI' refn
    action 'UNIT' (noprec):   reduce refn_semi2 --> refn_semi2 'SEMI' refn
    action 'REC' (noprec):   reduce refn_semi2 --> refn_semi2 'SEMI' refn
    action 'LET' (noprec):   reduce refn_semi2 --> refn_semi2 'SEMI' refn
    action 'OF' (noprec):   reduce refn_semi2 --> refn_semi2 'SEMI' refn
    action 'TYPE' (noprec):   reduce refn_semi2 --> refn_semi2 'SEMI' refn
    action 'MATCH' (noprec):   reduce refn_semi2 --> refn_semi2 'SEMI' refn
    action 'FUN' (noprec):   reduce refn_semi2 --> refn_semi2 'SEMI' refn
    action 'TICK' (noprec):   reduce refn_semi2 --> refn_semi2 'SEMI' refn
    action 'PROJ' (noprec):   reduce refn_semi2 --> refn_semi2 'SEMI' refn
    action 'UID' (noprec):   reduce refn_semi2 --> refn_semi2 'SEMI' refn
    action 'LID' (noprec):   reduce refn_semi2 --> refn_semi2 'SEMI' refn
    action 'INT' (noprec):   reduce refn_semi2 --> refn_semi2 'SEMI' refn
    action 'error' (noprec):   reduce refn_semi2 --> refn_semi2 'SEMI' refn
    action '#' (noprec):   reduce refn_semi2 --> refn_semi2 'SEMI' refn
    action '$$' (noprec):   reduce refn_semi2 --> refn_semi2 'SEMI' refn

  immediate action: <none>
 gotos:

state 103:
  items:
    refn -> refn 'ARROW' . refn

  actions:
    action 'EOF' (noprec):   error
    action 'TUP' (noprec):   error
    action 'CTOR_ALONE' (noprec):   error
    action 'CTOR_ARG' (noprec):   error
    action 'P4' (noprec):   error
    action 'P3' (noprec):   error
    action 'P2' (noprec):   error
    action 'P1' (noprec):   error
    action 'OR' (noprec):   shift 91
    action 'AND' (noprec):   shift 87
    action 'SEMI' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LBRACKET' (noprec):   shift 80
    action 'RPAREN' (noprec):   error
    action 'LPAREN' (noprec):   shift 104
    action 'PIPE' (noprec):   error
    action 'STAR' (noprec):   error
    action 'COLON' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'ARROW' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'REFINES' (noprec):   error
    action 'HOLE' (noprec):   error
    action 'WITH' (noprec):   error
    action 'NOT' (noprec):   shift 83
    action 'UNIT' (noprec):   error
    action 'REC' (noprec):   error
    action 'LET' (noprec):   error
    action 'OF' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'FUN' (noprec):   error
    action 'TICK' (noprec):   shift 111
    action 'PROJ' (noprec):   error
    action 'UID' (noprec):   shift 109
    action 'LID' (noprec):   shift 110
    action 'INT' (noprec):   shift 79
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto refn: 95

state 104:
  items:
    refn -> 'LPAREN' . 'RPAREN'
    refn -> 'LPAREN' . refn 'RPAREN'
    refn -> 'LPAREN' . refn_comma_one 'RPAREN'

  actions:
    action 'EOF' (noprec):   error
    action 'TUP' (noprec):   error
    action 'CTOR_ALONE' (noprec):   error
    action 'CTOR_ARG' (noprec):   error
    action 'P4' (noprec):   error
    action 'P3' (noprec):   error
    action 'P2' (noprec):   error
    action 'P1' (noprec):   error
    action 'OR' (noprec):   shift 91
    action 'AND' (noprec):   shift 87
    action 'SEMI' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LBRACKET' (noprec):   shift 80
    action 'RPAREN' (noprec):   shift 105
    action 'LPAREN' (noprec):   shift 104
    action 'PIPE' (noprec):   error
    action 'STAR' (noprec):   error
    action 'COLON' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'ARROW' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'REFINES' (noprec):   error
    action 'HOLE' (noprec):   error
    action 'WITH' (noprec):   error
    action 'NOT' (noprec):   shift 83
    action 'UNIT' (noprec):   error
    action 'REC' (noprec):   error
    action 'LET' (noprec):   error
    action 'OF' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'FUN' (noprec):   error
    action 'TICK' (noprec):   shift 111
    action 'PROJ' (noprec):   error
    action 'UID' (noprec):   shift 109
    action 'LID' (noprec):   shift 110
    action 'INT' (noprec):   shift 79
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto refn: 96
    goto refn_comma_one: 107
    goto refn_comma: 112

state 105:
  items:
    refn -> 'LPAREN' 'RPAREN' . 

  actions:
    action 'EOF' (noprec):   reduce refn --> 'LPAREN' 'RPAREN'
    action 'TUP' (noprec):   reduce refn --> 'LPAREN' 'RPAREN'
    action 'CTOR_ALONE' (noprec):   reduce refn --> 'LPAREN' 'RPAREN'
    action 'CTOR_ARG' (noprec):   reduce refn --> 'LPAREN' 'RPAREN'
    action 'P4' (noprec):   reduce refn --> 'LPAREN' 'RPAREN'
    action 'P3' (noprec):   reduce refn --> 'LPAREN' 'RPAREN'
    action 'P2' (noprec):   reduce refn --> 'LPAREN' 'RPAREN'
    action 'P1' (noprec):   reduce refn --> 'LPAREN' 'RPAREN'
    action 'OR' (noprec):   reduce refn --> 'LPAREN' 'RPAREN'
    action 'AND' (noprec):   reduce refn --> 'LPAREN' 'RPAREN'
    action 'SEMI' (noprec):   reduce refn --> 'LPAREN' 'RPAREN'
    action 'RBRACKET' (noprec):   reduce refn --> 'LPAREN' 'RPAREN'
    action 'LBRACKET' (noprec):   reduce refn --> 'LPAREN' 'RPAREN'
    action 'RPAREN' (noprec):   reduce refn --> 'LPAREN' 'RPAREN'
    action 'LPAREN' (noprec):   reduce refn --> 'LPAREN' 'RPAREN'
    action 'PIPE' (noprec):   reduce refn --> 'LPAREN' 'RPAREN'
    action 'STAR' (noprec):   reduce refn --> 'LPAREN' 'RPAREN'
    action 'COLON' (noprec):   reduce refn --> 'LPAREN' 'RPAREN'
    action 'COMMA' (noprec):   reduce refn --> 'LPAREN' 'RPAREN'
    action 'ARROW' (noprec):   reduce refn --> 'LPAREN' 'RPAREN'
    action 'EQUAL' (noprec):   reduce refn --> 'LPAREN' 'RPAREN'
    action 'REFINES' (noprec):   reduce refn --> 'LPAREN' 'RPAREN'
    action 'HOLE' (noprec):   reduce refn --> 'LPAREN' 'RPAREN'
    action 'WITH' (noprec):   reduce refn --> 'LPAREN' 'RPAREN'
    action 'NOT' (noprec):   reduce refn --> 'LPAREN' 'RPAREN'
    action 'UNIT' (noprec):   reduce refn --> 'LPAREN' 'RPAREN'
    action 'REC' (noprec):   reduce refn --> 'LPAREN' 'RPAREN'
    action 'LET' (noprec):   reduce refn --> 'LPAREN' 'RPAREN'
    action 'OF' (noprec):   reduce refn --> 'LPAREN' 'RPAREN'
    action 'TYPE' (noprec):   reduce refn --> 'LPAREN' 'RPAREN'
    action 'MATCH' (noprec):   reduce refn --> 'LPAREN' 'RPAREN'
    action 'FUN' (noprec):   reduce refn --> 'LPAREN' 'RPAREN'
    action 'TICK' (noprec):   reduce refn --> 'LPAREN' 'RPAREN'
    action 'PROJ' (noprec):   reduce refn --> 'LPAREN' 'RPAREN'
    action 'UID' (noprec):   reduce refn --> 'LPAREN' 'RPAREN'
    action 'LID' (noprec):   reduce refn --> 'LPAREN' 'RPAREN'
    action 'INT' (noprec):   reduce refn --> 'LPAREN' 'RPAREN'
    action 'error' (noprec):   reduce refn --> 'LPAREN' 'RPAREN'
    action '#' (noprec):   reduce refn --> 'LPAREN' 'RPAREN'
    action '$$' (noprec):   reduce refn --> 'LPAREN' 'RPAREN'

  immediate action:   reduce refn --> 'LPAREN' 'RPAREN'
 gotos:

state 106:
  items:
    refn -> 'LPAREN' refn 'RPAREN' . 

  actions:
    action 'EOF' (noprec):   reduce refn --> 'LPAREN' refn 'RPAREN'
    action 'TUP' (noprec):   reduce refn --> 'LPAREN' refn 'RPAREN'
    action 'CTOR_ALONE' (noprec):   reduce refn --> 'LPAREN' refn 'RPAREN'
    action 'CTOR_ARG' (noprec):   reduce refn --> 'LPAREN' refn 'RPAREN'
    action 'P4' (noprec):   reduce refn --> 'LPAREN' refn 'RPAREN'
    action 'P3' (noprec):   reduce refn --> 'LPAREN' refn 'RPAREN'
    action 'P2' (noprec):   reduce refn --> 'LPAREN' refn 'RPAREN'
    action 'P1' (noprec):   reduce refn --> 'LPAREN' refn 'RPAREN'
    action 'OR' (noprec):   reduce refn --> 'LPAREN' refn 'RPAREN'
    action 'AND' (noprec):   reduce refn --> 'LPAREN' refn 'RPAREN'
    action 'SEMI' (noprec):   reduce refn --> 'LPAREN' refn 'RPAREN'
    action 'RBRACKET' (noprec):   reduce refn --> 'LPAREN' refn 'RPAREN'
    action 'LBRACKET' (noprec):   reduce refn --> 'LPAREN' refn 'RPAREN'
    action 'RPAREN' (noprec):   reduce refn --> 'LPAREN' refn 'RPAREN'
    action 'LPAREN' (noprec):   reduce refn --> 'LPAREN' refn 'RPAREN'
    action 'PIPE' (noprec):   reduce refn --> 'LPAREN' refn 'RPAREN'
    action 'STAR' (noprec):   reduce refn --> 'LPAREN' refn 'RPAREN'
    action 'COLON' (noprec):   reduce refn --> 'LPAREN' refn 'RPAREN'
    action 'COMMA' (noprec):   reduce refn --> 'LPAREN' refn 'RPAREN'
    action 'ARROW' (noprec):   reduce refn --> 'LPAREN' refn 'RPAREN'
    action 'EQUAL' (noprec):   reduce refn --> 'LPAREN' refn 'RPAREN'
    action 'REFINES' (noprec):   reduce refn --> 'LPAREN' refn 'RPAREN'
    action 'HOLE' (noprec):   reduce refn --> 'LPAREN' refn 'RPAREN'
    action 'WITH' (noprec):   reduce refn --> 'LPAREN' refn 'RPAREN'
    action 'NOT' (noprec):   reduce refn --> 'LPAREN' refn 'RPAREN'
    action 'UNIT' (noprec):   reduce refn --> 'LPAREN' refn 'RPAREN'
    action 'REC' (noprec):   reduce refn --> 'LPAREN' refn 'RPAREN'
    action 'LET' (noprec):   reduce refn --> 'LPAREN' refn 'RPAREN'
    action 'OF' (noprec):   reduce refn --> 'LPAREN' refn 'RPAREN'
    action 'TYPE' (noprec):   reduce refn --> 'LPAREN' refn 'RPAREN'
    action 'MATCH' (noprec):   reduce refn --> 'LPAREN' refn 'RPAREN'
    action 'FUN' (noprec):   reduce refn --> 'LPAREN' refn 'RPAREN'
    action 'TICK' (noprec):   reduce refn --> 'LPAREN' refn 'RPAREN'
    action 'PROJ' (noprec):   reduce refn --> 'LPAREN' refn 'RPAREN'
    action 'UID' (noprec):   reduce refn --> 'LPAREN' refn 'RPAREN'
    action 'LID' (noprec):   reduce refn --> 'LPAREN' refn 'RPAREN'
    action 'INT' (noprec):   reduce refn --> 'LPAREN' refn 'RPAREN'
    action 'error' (noprec):   reduce refn --> 'LPAREN' refn 'RPAREN'
    action '#' (noprec):   reduce refn --> 'LPAREN' refn 'RPAREN'
    action '$$' (noprec):   reduce refn --> 'LPAREN' refn 'RPAREN'

  immediate action:   reduce refn --> 'LPAREN' refn 'RPAREN'
 gotos:

state 107:
  items:
    refn -> 'LPAREN' refn_comma_one . 'RPAREN'

  actions:
    action 'EOF' (noprec):   error
    action 'TUP' (noprec):   error
    action 'CTOR_ALONE' (noprec):   error
    action 'CTOR_ARG' (noprec):   error
    action 'P4' (noprec):   error
    action 'P3' (noprec):   error
    action 'P2' (noprec):   error
    action 'P1' (noprec):   error
    action 'OR' (noprec):   error
    action 'AND' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RPAREN' (noprec):   shift 108
    action 'LPAREN' (noprec):   error
    action 'PIPE' (noprec):   error
    action 'STAR' (noprec):   error
    action 'COLON' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'ARROW' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'REFINES' (noprec):   error
    action 'HOLE' (noprec):   error
    action 'WITH' (noprec):   error
    action 'NOT' (noprec):   error
    action 'UNIT' (noprec):   error
    action 'REC' (noprec):   error
    action 'LET' (noprec):   error
    action 'OF' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'FUN' (noprec):   error
    action 'TICK' (noprec):   error
    action 'PROJ' (noprec):   error
    action 'UID' (noprec):   error
    action 'LID' (noprec):   error
    action 'INT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 108:
  items:
    refn -> 'LPAREN' refn_comma_one 'RPAREN' . 

  actions:
    action 'EOF' (noprec):   reduce refn --> 'LPAREN' refn_comma_one 'RPAREN'
    action 'TUP' (noprec):   reduce refn --> 'LPAREN' refn_comma_one 'RPAREN'
    action 'CTOR_ALONE' (noprec):   reduce refn --> 'LPAREN' refn_comma_one 'RPAREN'
    action 'CTOR_ARG' (noprec):   reduce refn --> 'LPAREN' refn_comma_one 'RPAREN'
    action 'P4' (noprec):   reduce refn --> 'LPAREN' refn_comma_one 'RPAREN'
    action 'P3' (noprec):   reduce refn --> 'LPAREN' refn_comma_one 'RPAREN'
    action 'P2' (noprec):   reduce refn --> 'LPAREN' refn_comma_one 'RPAREN'
    action 'P1' (noprec):   reduce refn --> 'LPAREN' refn_comma_one 'RPAREN'
    action 'OR' (noprec):   reduce refn --> 'LPAREN' refn_comma_one 'RPAREN'
    action 'AND' (noprec):   reduce refn --> 'LPAREN' refn_comma_one 'RPAREN'
    action 'SEMI' (noprec):   reduce refn --> 'LPAREN' refn_comma_one 'RPAREN'
    action 'RBRACKET' (noprec):   reduce refn --> 'LPAREN' refn_comma_one 'RPAREN'
    action 'LBRACKET' (noprec):   reduce refn --> 'LPAREN' refn_comma_one 'RPAREN'
    action 'RPAREN' (noprec):   reduce refn --> 'LPAREN' refn_comma_one 'RPAREN'
    action 'LPAREN' (noprec):   reduce refn --> 'LPAREN' refn_comma_one 'RPAREN'
    action 'PIPE' (noprec):   reduce refn --> 'LPAREN' refn_comma_one 'RPAREN'
    action 'STAR' (noprec):   reduce refn --> 'LPAREN' refn_comma_one 'RPAREN'
    action 'COLON' (noprec):   reduce refn --> 'LPAREN' refn_comma_one 'RPAREN'
    action 'COMMA' (noprec):   reduce refn --> 'LPAREN' refn_comma_one 'RPAREN'
    action 'ARROW' (noprec):   reduce refn --> 'LPAREN' refn_comma_one 'RPAREN'
    action 'EQUAL' (noprec):   reduce refn --> 'LPAREN' refn_comma_one 'RPAREN'
    action 'REFINES' (noprec):   reduce refn --> 'LPAREN' refn_comma_one 'RPAREN'
    action 'HOLE' (noprec):   reduce refn --> 'LPAREN' refn_comma_one 'RPAREN'
    action 'WITH' (noprec):   reduce refn --> 'LPAREN' refn_comma_one 'RPAREN'
    action 'NOT' (noprec):   reduce refn --> 'LPAREN' refn_comma_one 'RPAREN'
    action 'UNIT' (noprec):   reduce refn --> 'LPAREN' refn_comma_one 'RPAREN'
    action 'REC' (noprec):   reduce refn --> 'LPAREN' refn_comma_one 'RPAREN'
    action 'LET' (noprec):   reduce refn --> 'LPAREN' refn_comma_one 'RPAREN'
    action 'OF' (noprec):   reduce refn --> 'LPAREN' refn_comma_one 'RPAREN'
    action 'TYPE' (noprec):   reduce refn --> 'LPAREN' refn_comma_one 'RPAREN'
    action 'MATCH' (noprec):   reduce refn --> 'LPAREN' refn_comma_one 'RPAREN'
    action 'FUN' (noprec):   reduce refn --> 'LPAREN' refn_comma_one 'RPAREN'
    action 'TICK' (noprec):   reduce refn --> 'LPAREN' refn_comma_one 'RPAREN'
    action 'PROJ' (noprec):   reduce refn --> 'LPAREN' refn_comma_one 'RPAREN'
    action 'UID' (noprec):   reduce refn --> 'LPAREN' refn_comma_one 'RPAREN'
    action 'LID' (noprec):   reduce refn --> 'LPAREN' refn_comma_one 'RPAREN'
    action 'INT' (noprec):   reduce refn --> 'LPAREN' refn_comma_one 'RPAREN'
    action 'error' (noprec):   reduce refn --> 'LPAREN' refn_comma_one 'RPAREN'
    action '#' (noprec):   reduce refn --> 'LPAREN' refn_comma_one 'RPAREN'
    action '$$' (noprec):   reduce refn --> 'LPAREN' refn_comma_one 'RPAREN'

  immediate action:   reduce refn --> 'LPAREN' refn_comma_one 'RPAREN'
 gotos:

state 109:
  items:
    refn -> 'UID' . refn
    refn -> 'UID' . 

  actions:
    action 'EOF' (explicit nonassoc 9995):   reduce refn --> 'UID'
    action 'TUP' (explicit nonassoc 9995):   reduce refn --> 'UID'
    action 'CTOR_ALONE' (explicit nonassoc 9995):   reduce refn --> 'UID'
    action 'CTOR_ARG' (explicit nonassoc 9995):   reduce refn --> 'UID'
    action 'P4' (explicit nonassoc 9995):   reduce refn --> 'UID'
    action 'P3' (explicit nonassoc 9995):   reduce refn --> 'UID'
    action 'P2' (explicit nonassoc 9995):   reduce refn --> 'UID'
    action 'P1' (explicit nonassoc 9995):   reduce refn --> 'UID'
    action 'OR' (noprec):   shift 91
    action 'AND' (noprec):   shift 87
    action 'SEMI' (explicit nonassoc 9995):   reduce refn --> 'UID'
    action 'RBRACKET' (explicit nonassoc 9995):   reduce refn --> 'UID'
    action 'LBRACKET' (noprec):   shift 80
    action 'RPAREN' (explicit nonassoc 9995):   reduce refn --> 'UID'
    action 'LPAREN' (noprec):   shift 104
    action 'PIPE' (explicit nonassoc 9995):   reduce refn --> 'UID'
    action 'STAR' (explicit nonassoc 9995):   reduce refn --> 'UID'
    action 'COLON' (explicit nonassoc 9995):   reduce refn --> 'UID'
    action 'COMMA' (explicit nonassoc 9995):   reduce refn --> 'UID'
    action 'ARROW' (explicit nonassoc 9995):   reduce refn --> 'UID'
    action 'EQUAL' (explicit nonassoc 9995):   reduce refn --> 'UID'
    action 'REFINES' (explicit nonassoc 9995):   reduce refn --> 'UID'
    action 'HOLE' (explicit nonassoc 9995):   reduce refn --> 'UID'
    action 'WITH' (explicit nonassoc 9995):   reduce refn --> 'UID'
    action 'NOT' (noprec):   shift 83
    action 'UNIT' (explicit nonassoc 9995):   reduce refn --> 'UID'
    action 'REC' (explicit nonassoc 9995):   reduce refn --> 'UID'
    action 'LET' (explicit nonassoc 9995):   reduce refn --> 'UID'
    action 'OF' (explicit nonassoc 9995):   reduce refn --> 'UID'
    action 'TYPE' (explicit nonassoc 9995):   reduce refn --> 'UID'
    action 'MATCH' (explicit nonassoc 9995):   reduce refn --> 'UID'
    action 'FUN' (explicit nonassoc 9995):   reduce refn --> 'UID'
    action 'TICK' (noprec):   shift 111
    action 'PROJ' (explicit nonassoc 9995):   reduce refn --> 'UID'
    action 'UID' (noprec):   shift 109
    action 'LID' (noprec):   shift 110
    action 'INT' (noprec):   shift 79
    action 'error' (explicit nonassoc 9995):   reduce refn --> 'UID'
    action '#' (explicit nonassoc 9995):   reduce refn --> 'UID'
    action '$$' (explicit nonassoc 9995):   reduce refn --> 'UID'

  immediate action: <none>
 gotos:
    goto refn: 97

state 110:
  items:
    refn -> 'LID' . 

  actions:
    action 'EOF' (noprec):   reduce refn --> 'LID'
    action 'TUP' (noprec):   reduce refn --> 'LID'
    action 'CTOR_ALONE' (noprec):   reduce refn --> 'LID'
    action 'CTOR_ARG' (noprec):   reduce refn --> 'LID'
    action 'P4' (noprec):   reduce refn --> 'LID'
    action 'P3' (noprec):   reduce refn --> 'LID'
    action 'P2' (noprec):   reduce refn --> 'LID'
    action 'P1' (noprec):   reduce refn --> 'LID'
    action 'OR' (noprec):   reduce refn --> 'LID'
    action 'AND' (noprec):   reduce refn --> 'LID'
    action 'SEMI' (noprec):   reduce refn --> 'LID'
    action 'RBRACKET' (noprec):   reduce refn --> 'LID'
    action 'LBRACKET' (noprec):   reduce refn --> 'LID'
    action 'RPAREN' (noprec):   reduce refn --> 'LID'
    action 'LPAREN' (noprec):   reduce refn --> 'LID'
    action 'PIPE' (noprec):   reduce refn --> 'LID'
    action 'STAR' (noprec):   reduce refn --> 'LID'
    action 'COLON' (noprec):   reduce refn --> 'LID'
    action 'COMMA' (noprec):   reduce refn --> 'LID'
    action 'ARROW' (noprec):   reduce refn --> 'LID'
    action 'EQUAL' (noprec):   reduce refn --> 'LID'
    action 'REFINES' (noprec):   reduce refn --> 'LID'
    action 'HOLE' (noprec):   reduce refn --> 'LID'
    action 'WITH' (noprec):   reduce refn --> 'LID'
    action 'NOT' (noprec):   reduce refn --> 'LID'
    action 'UNIT' (noprec):   reduce refn --> 'LID'
    action 'REC' (noprec):   reduce refn --> 'LID'
    action 'LET' (noprec):   reduce refn --> 'LID'
    action 'OF' (noprec):   reduce refn --> 'LID'
    action 'TYPE' (noprec):   reduce refn --> 'LID'
    action 'MATCH' (noprec):   reduce refn --> 'LID'
    action 'FUN' (noprec):   reduce refn --> 'LID'
    action 'TICK' (noprec):   reduce refn --> 'LID'
    action 'PROJ' (noprec):   reduce refn --> 'LID'
    action 'UID' (noprec):   reduce refn --> 'LID'
    action 'LID' (noprec):   reduce refn --> 'LID'
    action 'INT' (noprec):   reduce refn --> 'LID'
    action 'error' (noprec):   reduce refn --> 'LID'
    action '#' (noprec):   reduce refn --> 'LID'
    action '$$' (noprec):   reduce refn --> 'LID'

  immediate action:   reduce refn --> 'LID'
 gotos:

state 111:
  items:
    refn -> 'TICK' . 

  actions:
    action 'EOF' (noprec):   reduce refn --> 'TICK'
    action 'TUP' (noprec):   reduce refn --> 'TICK'
    action 'CTOR_ALONE' (noprec):   reduce refn --> 'TICK'
    action 'CTOR_ARG' (noprec):   reduce refn --> 'TICK'
    action 'P4' (noprec):   reduce refn --> 'TICK'
    action 'P3' (noprec):   reduce refn --> 'TICK'
    action 'P2' (noprec):   reduce refn --> 'TICK'
    action 'P1' (noprec):   reduce refn --> 'TICK'
    action 'OR' (noprec):   reduce refn --> 'TICK'
    action 'AND' (noprec):   reduce refn --> 'TICK'
    action 'SEMI' (noprec):   reduce refn --> 'TICK'
    action 'RBRACKET' (noprec):   reduce refn --> 'TICK'
    action 'LBRACKET' (noprec):   reduce refn --> 'TICK'
    action 'RPAREN' (noprec):   reduce refn --> 'TICK'
    action 'LPAREN' (noprec):   reduce refn --> 'TICK'
    action 'PIPE' (noprec):   reduce refn --> 'TICK'
    action 'STAR' (noprec):   reduce refn --> 'TICK'
    action 'COLON' (noprec):   reduce refn --> 'TICK'
    action 'COMMA' (noprec):   reduce refn --> 'TICK'
    action 'ARROW' (noprec):   reduce refn --> 'TICK'
    action 'EQUAL' (noprec):   reduce refn --> 'TICK'
    action 'REFINES' (noprec):   reduce refn --> 'TICK'
    action 'HOLE' (noprec):   reduce refn --> 'TICK'
    action 'WITH' (noprec):   reduce refn --> 'TICK'
    action 'NOT' (noprec):   reduce refn --> 'TICK'
    action 'UNIT' (noprec):   reduce refn --> 'TICK'
    action 'REC' (noprec):   reduce refn --> 'TICK'
    action 'LET' (noprec):   reduce refn --> 'TICK'
    action 'OF' (noprec):   reduce refn --> 'TICK'
    action 'TYPE' (noprec):   reduce refn --> 'TICK'
    action 'MATCH' (noprec):   reduce refn --> 'TICK'
    action 'FUN' (noprec):   reduce refn --> 'TICK'
    action 'TICK' (noprec):   reduce refn --> 'TICK'
    action 'PROJ' (noprec):   reduce refn --> 'TICK'
    action 'UID' (noprec):   reduce refn --> 'TICK'
    action 'LID' (noprec):   reduce refn --> 'TICK'
    action 'INT' (noprec):   reduce refn --> 'TICK'
    action 'error' (noprec):   reduce refn --> 'TICK'
    action '#' (noprec):   reduce refn --> 'TICK'
    action '$$' (noprec):   reduce refn --> 'TICK'

  immediate action:   reduce refn --> 'TICK'
 gotos:

state 112:
  items:
    refn_comma_one -> refn_comma . 'COMMA' refn
    refn_comma -> refn_comma . 'COMMA' refn

  actions:
    action 'EOF' (noprec):   error
    action 'TUP' (noprec):   error
    action 'CTOR_ALONE' (noprec):   error
    action 'CTOR_ARG' (noprec):   error
    action 'P4' (noprec):   error
    action 'P3' (noprec):   error
    action 'P2' (noprec):   error
    action 'P1' (noprec):   error
    action 'OR' (noprec):   error
    action 'AND' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'PIPE' (noprec):   error
    action 'STAR' (noprec):   error
    action 'COLON' (noprec):   error
    action 'COMMA' (noprec):   shift 113
    action 'ARROW' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'REFINES' (noprec):   error
    action 'HOLE' (noprec):   error
    action 'WITH' (noprec):   error
    action 'NOT' (noprec):   error
    action 'UNIT' (noprec):   error
    action 'REC' (noprec):   error
    action 'LET' (noprec):   error
    action 'OF' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'FUN' (noprec):   error
    action 'TICK' (noprec):   error
    action 'PROJ' (noprec):   error
    action 'UID' (noprec):   error
    action 'LID' (noprec):   error
    action 'INT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 113:
  items:
    refn_comma_one -> refn_comma 'COMMA' . refn
    refn_comma -> refn_comma 'COMMA' . refn

  actions:
    action 'EOF' (noprec):   error
    action 'TUP' (noprec):   error
    action 'CTOR_ALONE' (noprec):   error
    action 'CTOR_ARG' (noprec):   error
    action 'P4' (noprec):   error
    action 'P3' (noprec):   error
    action 'P2' (noprec):   error
    action 'P1' (noprec):   error
    action 'OR' (noprec):   shift 91
    action 'AND' (noprec):   shift 87
    action 'SEMI' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LBRACKET' (noprec):   shift 80
    action 'RPAREN' (noprec):   error
    action 'LPAREN' (noprec):   shift 104
    action 'PIPE' (noprec):   error
    action 'STAR' (noprec):   error
    action 'COLON' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'ARROW' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'REFINES' (noprec):   error
    action 'HOLE' (noprec):   error
    action 'WITH' (noprec):   error
    action 'NOT' (noprec):   shift 83
    action 'UNIT' (noprec):   error
    action 'REC' (noprec):   error
    action 'LET' (noprec):   error
    action 'OF' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'FUN' (noprec):   error
    action 'TICK' (noprec):   shift 111
    action 'PROJ' (noprec):   error
    action 'UID' (noprec):   shift 109
    action 'LID' (noprec):   shift 110
    action 'INT' (noprec):   shift 79
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto refn: 98

state 114:
  items:
    refn_comma -> refn_comma 'COMMA' . refn

  actions:
    action 'EOF' (noprec):   error
    action 'TUP' (noprec):   error
    action 'CTOR_ALONE' (noprec):   error
    action 'CTOR_ARG' (noprec):   error
    action 'P4' (noprec):   error
    action 'P3' (noprec):   error
    action 'P2' (noprec):   error
    action 'P1' (noprec):   error
    action 'OR' (noprec):   shift 91
    action 'AND' (noprec):   shift 87
    action 'SEMI' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LBRACKET' (noprec):   shift 80
    action 'RPAREN' (noprec):   error
    action 'LPAREN' (noprec):   shift 104
    action 'PIPE' (noprec):   error
    action 'STAR' (noprec):   error
    action 'COLON' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'ARROW' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'REFINES' (noprec):   error
    action 'HOLE' (noprec):   error
    action 'WITH' (noprec):   error
    action 'NOT' (noprec):   shift 83
    action 'UNIT' (noprec):   error
    action 'REC' (noprec):   error
    action 'LET' (noprec):   error
    action 'OF' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'FUN' (noprec):   error
    action 'TICK' (noprec):   shift 111
    action 'PROJ' (noprec):   error
    action 'UID' (noprec):   shift 109
    action 'LID' (noprec):   shift 110
    action 'INT' (noprec):   shift 79
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto refn: 100

state 115:
  items:
    refn_semi -> refn_semi2 . 
    refn_semi2 -> refn_semi2 . 'SEMI' refn

  actions:
    action 'EOF' (noprec):   reduce refn_semi --> refn_semi2
    action 'TUP' (noprec):   reduce refn_semi --> refn_semi2
    action 'CTOR_ALONE' (noprec):   reduce refn_semi --> refn_semi2
    action 'CTOR_ARG' (noprec):   reduce refn_semi --> refn_semi2
    action 'P4' (noprec):   reduce refn_semi --> refn_semi2
    action 'P3' (noprec):   reduce refn_semi --> refn_semi2
    action 'P2' (noprec):   reduce refn_semi --> refn_semi2
    action 'P1' (noprec):   reduce refn_semi --> refn_semi2
    action 'OR' (noprec):   reduce refn_semi --> refn_semi2
    action 'AND' (noprec):   reduce refn_semi --> refn_semi2
    action 'SEMI' (noprec):   shift 116
    action 'RBRACKET' (noprec):   reduce refn_semi --> refn_semi2
    action 'LBRACKET' (noprec):   reduce refn_semi --> refn_semi2
    action 'RPAREN' (noprec):   reduce refn_semi --> refn_semi2
    action 'LPAREN' (noprec):   reduce refn_semi --> refn_semi2
    action 'PIPE' (noprec):   reduce refn_semi --> refn_semi2
    action 'STAR' (noprec):   reduce refn_semi --> refn_semi2
    action 'COLON' (noprec):   reduce refn_semi --> refn_semi2
    action 'COMMA' (noprec):   reduce refn_semi --> refn_semi2
    action 'ARROW' (noprec):   reduce refn_semi --> refn_semi2
    action 'EQUAL' (noprec):   reduce refn_semi --> refn_semi2
    action 'REFINES' (noprec):   reduce refn_semi --> refn_semi2
    action 'HOLE' (noprec):   reduce refn_semi --> refn_semi2
    action 'WITH' (noprec):   reduce refn_semi --> refn_semi2
    action 'NOT' (noprec):   reduce refn_semi --> refn_semi2
    action 'UNIT' (noprec):   reduce refn_semi --> refn_semi2
    action 'REC' (noprec):   reduce refn_semi --> refn_semi2
    action 'LET' (noprec):   reduce refn_semi --> refn_semi2
    action 'OF' (noprec):   reduce refn_semi --> refn_semi2
    action 'TYPE' (noprec):   reduce refn_semi --> refn_semi2
    action 'MATCH' (noprec):   reduce refn_semi --> refn_semi2
    action 'FUN' (noprec):   reduce refn_semi --> refn_semi2
    action 'TICK' (noprec):   reduce refn_semi --> refn_semi2
    action 'PROJ' (noprec):   reduce refn_semi --> refn_semi2
    action 'UID' (noprec):   reduce refn_semi --> refn_semi2
    action 'LID' (noprec):   reduce refn_semi --> refn_semi2
    action 'INT' (noprec):   reduce refn_semi --> refn_semi2
    action 'error' (noprec):   reduce refn_semi --> refn_semi2
    action '#' (noprec):   reduce refn_semi --> refn_semi2
    action '$$' (noprec):   reduce refn_semi --> refn_semi2

  immediate action: <none>
 gotos:

state 116:
  items:
    refn_semi2 -> refn_semi2 'SEMI' . refn

  actions:
    action 'EOF' (noprec):   error
    action 'TUP' (noprec):   error
    action 'CTOR_ALONE' (noprec):   error
    action 'CTOR_ARG' (noprec):   error
    action 'P4' (noprec):   error
    action 'P3' (noprec):   error
    action 'P2' (noprec):   error
    action 'P1' (noprec):   error
    action 'OR' (noprec):   shift 91
    action 'AND' (noprec):   shift 87
    action 'SEMI' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LBRACKET' (noprec):   shift 80
    action 'RPAREN' (noprec):   error
    action 'LPAREN' (noprec):   shift 104
    action 'PIPE' (noprec):   error
    action 'STAR' (noprec):   error
    action 'COLON' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'ARROW' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'REFINES' (noprec):   error
    action 'HOLE' (noprec):   error
    action 'WITH' (noprec):   error
    action 'NOT' (noprec):   shift 83
    action 'UNIT' (noprec):   error
    action 'REC' (noprec):   error
    action 'LET' (noprec):   error
    action 'OF' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'FUN' (noprec):   error
    action 'TICK' (noprec):   shift 111
    action 'PROJ' (noprec):   error
    action 'UID' (noprec):   shift 109
    action 'LID' (noprec):   shift 110
    action 'INT' (noprec):   shift 79
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto refn: 102

state 117:
  items:
    typ -> 'UNIT' . 
    typ_in_tup -> 'UNIT' . 
    typ_base -> 'UNIT' . 'LID'

  actions:
    action 'EOF' (noprec):   reduce typ --> 'UNIT'
    action 'TUP' (noprec):   reduce typ --> 'UNIT'
    action 'CTOR_ALONE' (noprec):   reduce typ --> 'UNIT'
    action 'CTOR_ARG' (noprec):   reduce typ --> 'UNIT'
    action 'P4' (noprec):   reduce typ --> 'UNIT'
    action 'P3' (noprec):   reduce typ --> 'UNIT'
    action 'P2' (noprec):   reduce typ --> 'UNIT'
    action 'P1' (noprec):   reduce typ --> 'UNIT'
    action 'OR' (noprec):   reduce typ --> 'UNIT'
    action 'AND' (noprec):   reduce typ --> 'UNIT'
    action 'SEMI' (noprec):   reduce typ --> 'UNIT'
    action 'RBRACKET' (noprec):   reduce typ --> 'UNIT'
    action 'LBRACKET' (noprec):   reduce typ --> 'UNIT'
    action 'RPAREN' (noprec):   reduce typ --> 'UNIT'
    action 'LPAREN' (noprec):   reduce typ --> 'UNIT'
    action 'PIPE' (noprec):   reduce typ --> 'UNIT'
    action 'STAR' (noprec):   reduce typ_in_tup --> 'UNIT'
    action 'COLON' (noprec):   reduce typ --> 'UNIT'
    action 'COMMA' (noprec):   reduce typ --> 'UNIT'
    action 'ARROW' (noprec):   reduce typ --> 'UNIT'
    action 'EQUAL' (noprec):   reduce typ --> 'UNIT'
    action 'REFINES' (noprec):   reduce typ --> 'UNIT'
    action 'HOLE' (noprec):   reduce typ --> 'UNIT'
    action 'WITH' (noprec):   reduce typ --> 'UNIT'
    action 'NOT' (noprec):   reduce typ --> 'UNIT'
    action 'UNIT' (noprec):   reduce typ --> 'UNIT'
    action 'REC' (noprec):   reduce typ --> 'UNIT'
    action 'LET' (noprec):   reduce typ --> 'UNIT'
    action 'OF' (noprec):   reduce typ --> 'UNIT'
    action 'TYPE' (noprec):   reduce typ --> 'UNIT'
    action 'MATCH' (noprec):   reduce typ --> 'UNIT'
    action 'FUN' (noprec):   reduce typ --> 'UNIT'
    action 'TICK' (noprec):   reduce typ --> 'UNIT'
    action 'PROJ' (noprec):   reduce typ --> 'UNIT'
    action 'UID' (noprec):   reduce typ --> 'UNIT'
    action 'LID' (noprec):   shift 135
    action 'INT' (noprec):   reduce typ --> 'UNIT'
    action 'error' (noprec):   reduce typ --> 'UNIT'
    action '#' (noprec):   reduce typ --> 'UNIT'
    action '$$' (noprec):   reduce typ --> 'UNIT'

  immediate action: <none>
 gotos:

state 118:
  items:
    typ -> typ . 'ARROW' typ
    typ -> typ 'ARROW' typ . 

  actions:
    action 'EOF' (explicit right 9993):   reduce typ --> typ 'ARROW' typ
    action 'TUP' (explicit right 9993):   reduce typ --> typ 'ARROW' typ
    action 'CTOR_ALONE' (explicit right 9993):   reduce typ --> typ 'ARROW' typ
    action 'CTOR_ARG' (explicit right 9993):   reduce typ --> typ 'ARROW' typ
    action 'P4' (explicit right 9993):   reduce typ --> typ 'ARROW' typ
    action 'P3' (explicit right 9993):   reduce typ --> typ 'ARROW' typ
    action 'P2' (explicit right 9993):   reduce typ --> typ 'ARROW' typ
    action 'P1' (explicit right 9993):   reduce typ --> typ 'ARROW' typ
    action 'OR' (explicit right 9993):   reduce typ --> typ 'ARROW' typ
    action 'AND' (explicit right 9993):   reduce typ --> typ 'ARROW' typ
    action 'SEMI' (explicit right 9993):   reduce typ --> typ 'ARROW' typ
    action 'RBRACKET' (explicit right 9993):   reduce typ --> typ 'ARROW' typ
    action 'LBRACKET' (explicit right 9993):   reduce typ --> typ 'ARROW' typ
    action 'RPAREN' (explicit right 9993):   reduce typ --> typ 'ARROW' typ
    action 'LPAREN' (explicit right 9993):   reduce typ --> typ 'ARROW' typ
    action 'PIPE' (explicit right 9993):   reduce typ --> typ 'ARROW' typ
    action 'STAR' (explicit right 9993):   reduce typ --> typ 'ARROW' typ
    action 'COLON' (explicit right 9993):   reduce typ --> typ 'ARROW' typ
    action 'COMMA' (explicit right 9993):   reduce typ --> typ 'ARROW' typ
    action 'ARROW' (explicit right 9993):   shift 122
    action 'EQUAL' (explicit right 9993):   reduce typ --> typ 'ARROW' typ
    action 'REFINES' (explicit right 9993):   reduce typ --> typ 'ARROW' typ
    action 'HOLE' (explicit right 9993):   reduce typ --> typ 'ARROW' typ
    action 'WITH' (explicit right 9993):   reduce typ --> typ 'ARROW' typ
    action 'NOT' (explicit right 9993):   reduce typ --> typ 'ARROW' typ
    action 'UNIT' (explicit right 9993):   reduce typ --> typ 'ARROW' typ
    action 'REC' (explicit right 9993):   reduce typ --> typ 'ARROW' typ
    action 'LET' (explicit right 9993):   reduce typ --> typ 'ARROW' typ
    action 'OF' (explicit right 9993):   reduce typ --> typ 'ARROW' typ
    action 'TYPE' (explicit right 9993):   reduce typ --> typ 'ARROW' typ
    action 'MATCH' (explicit right 9993):   reduce typ --> typ 'ARROW' typ
    action 'FUN' (explicit right 9993):   reduce typ --> typ 'ARROW' typ
    action 'TICK' (explicit right 9993):   reduce typ --> typ 'ARROW' typ
    action 'PROJ' (explicit right 9993):   reduce typ --> typ 'ARROW' typ
    action 'UID' (explicit right 9993):   reduce typ --> typ 'ARROW' typ
    action 'LID' (explicit right 9993):   reduce typ --> typ 'ARROW' typ
    action 'INT' (explicit right 9993):   reduce typ --> typ 'ARROW' typ
    action 'error' (explicit right 9993):   reduce typ --> typ 'ARROW' typ
    action '#' (explicit right 9993):   reduce typ --> typ 'ARROW' typ
    action '$$' (explicit right 9993):   reduce typ --> typ 'ARROW' typ

  immediate action: <none>
 gotos:

state 119:
  items:
    typ -> typ . 'ARROW' typ
    typ -> 'LPAREN' typ . 'RPAREN'
    typ_in_tup -> 'LPAREN' typ . 'RPAREN'
    typ_base -> 'LPAREN' typ . 'RPAREN' 'LID'
    typ_comma -> typ . 

  actions:
    action 'EOF' (noprec):   reduce typ_comma --> typ
    action 'TUP' (noprec):   reduce typ_comma --> typ
    action 'CTOR_ALONE' (noprec):   reduce typ_comma --> typ
    action 'CTOR_ARG' (noprec):   reduce typ_comma --> typ
    action 'P4' (noprec):   reduce typ_comma --> typ
    action 'P3' (noprec):   reduce typ_comma --> typ
    action 'P2' (noprec):   reduce typ_comma --> typ
    action 'P1' (noprec):   reduce typ_comma --> typ
    action 'OR' (noprec):   reduce typ_comma --> typ
    action 'AND' (noprec):   reduce typ_comma --> typ
    action 'SEMI' (noprec):   reduce typ_comma --> typ
    action 'RBRACKET' (noprec):   reduce typ_comma --> typ
    action 'LBRACKET' (noprec):   reduce typ_comma --> typ
    action 'RPAREN' (noprec):   shift 127
    action 'LPAREN' (noprec):   reduce typ_comma --> typ
    action 'PIPE' (noprec):   reduce typ_comma --> typ
    action 'STAR' (noprec):   reduce typ_comma --> typ
    action 'COLON' (noprec):   reduce typ_comma --> typ
    action 'COMMA' (noprec):   reduce typ_comma --> typ
    action 'ARROW' (explicit right 9993):   shift 122
    action 'EQUAL' (noprec):   reduce typ_comma --> typ
    action 'REFINES' (noprec):   reduce typ_comma --> typ
    action 'HOLE' (noprec):   reduce typ_comma --> typ
    action 'WITH' (noprec):   reduce typ_comma --> typ
    action 'NOT' (noprec):   reduce typ_comma --> typ
    action 'UNIT' (noprec):   reduce typ_comma --> typ
    action 'REC' (noprec):   reduce typ_comma --> typ
    action 'LET' (noprec):   reduce typ_comma --> typ
    action 'OF' (noprec):   reduce typ_comma --> typ
    action 'TYPE' (noprec):   reduce typ_comma --> typ
    action 'MATCH' (noprec):   reduce typ_comma --> typ
    action 'FUN' (noprec):   reduce typ_comma --> typ
    action 'TICK' (noprec):   reduce typ_comma --> typ
    action 'PROJ' (noprec):   reduce typ_comma --> typ
    action 'UID' (noprec):   reduce typ_comma --> typ
    action 'LID' (noprec):   reduce typ_comma --> typ
    action 'INT' (noprec):   reduce typ_comma --> typ
    action 'error' (noprec):   reduce typ_comma --> typ
    action '#' (noprec):   reduce typ_comma --> typ
    action '$$' (noprec):   reduce typ_comma --> typ

  immediate action: <none>
 gotos:

state 120:
  items:
    typ -> typ . 'ARROW' typ
    typ_in_tup -> 'LPAREN' typ . 'RPAREN'
    typ_base -> 'LPAREN' typ . 'RPAREN' 'LID'
    typ_comma -> typ . 

  actions:
    action 'EOF' (noprec):   reduce typ_comma --> typ
    action 'TUP' (noprec):   reduce typ_comma --> typ
    action 'CTOR_ALONE' (noprec):   reduce typ_comma --> typ
    action 'CTOR_ARG' (noprec):   reduce typ_comma --> typ
    action 'P4' (noprec):   reduce typ_comma --> typ
    action 'P3' (noprec):   reduce typ_comma --> typ
    action 'P2' (noprec):   reduce typ_comma --> typ
    action 'P1' (noprec):   reduce typ_comma --> typ
    action 'OR' (noprec):   reduce typ_comma --> typ
    action 'AND' (noprec):   reduce typ_comma --> typ
    action 'SEMI' (noprec):   reduce typ_comma --> typ
    action 'RBRACKET' (noprec):   reduce typ_comma --> typ
    action 'LBRACKET' (noprec):   reduce typ_comma --> typ
    action 'RPAREN' (noprec):   shift 132
    action 'LPAREN' (noprec):   reduce typ_comma --> typ
    action 'PIPE' (noprec):   reduce typ_comma --> typ
    action 'STAR' (noprec):   reduce typ_comma --> typ
    action 'COLON' (noprec):   reduce typ_comma --> typ
    action 'COMMA' (noprec):   reduce typ_comma --> typ
    action 'ARROW' (explicit right 9993):   shift 122
    action 'EQUAL' (noprec):   reduce typ_comma --> typ
    action 'REFINES' (noprec):   reduce typ_comma --> typ
    action 'HOLE' (noprec):   reduce typ_comma --> typ
    action 'WITH' (noprec):   reduce typ_comma --> typ
    action 'NOT' (noprec):   reduce typ_comma --> typ
    action 'UNIT' (noprec):   reduce typ_comma --> typ
    action 'REC' (noprec):   reduce typ_comma --> typ
    action 'LET' (noprec):   reduce typ_comma --> typ
    action 'OF' (noprec):   reduce typ_comma --> typ
    action 'TYPE' (noprec):   reduce typ_comma --> typ
    action 'MATCH' (noprec):   reduce typ_comma --> typ
    action 'FUN' (noprec):   reduce typ_comma --> typ
    action 'TICK' (noprec):   reduce typ_comma --> typ
    action 'PROJ' (noprec):   reduce typ_comma --> typ
    action 'UID' (noprec):   reduce typ_comma --> typ
    action 'LID' (noprec):   reduce typ_comma --> typ
    action 'INT' (noprec):   reduce typ_comma --> typ
    action 'error' (noprec):   reduce typ_comma --> typ
    action '#' (noprec):   reduce typ_comma --> typ
    action '$$' (noprec):   reduce typ_comma --> typ

  immediate action: <none>
 gotos:

state 121:
  items:
    typ -> typ . 'ARROW' typ
    typ_comma_one -> typ_comma 'COMMA' typ . 
    typ_comma -> typ_comma 'COMMA' typ . 

  actions:
    action 'EOF' (noprec):   reduce typ_comma_one --> typ_comma 'COMMA' typ
    action 'TUP' (noprec):   reduce typ_comma_one --> typ_comma 'COMMA' typ
    action 'CTOR_ALONE' (noprec):   reduce typ_comma_one --> typ_comma 'COMMA' typ
    action 'CTOR_ARG' (noprec):   reduce typ_comma_one --> typ_comma 'COMMA' typ
    action 'P4' (noprec):   reduce typ_comma_one --> typ_comma 'COMMA' typ
    action 'P3' (noprec):   reduce typ_comma_one --> typ_comma 'COMMA' typ
    action 'P2' (noprec):   reduce typ_comma_one --> typ_comma 'COMMA' typ
    action 'P1' (noprec):   reduce typ_comma_one --> typ_comma 'COMMA' typ
    action 'OR' (noprec):   reduce typ_comma_one --> typ_comma 'COMMA' typ
    action 'AND' (noprec):   reduce typ_comma_one --> typ_comma 'COMMA' typ
    action 'SEMI' (noprec):   reduce typ_comma_one --> typ_comma 'COMMA' typ
    action 'RBRACKET' (noprec):   reduce typ_comma_one --> typ_comma 'COMMA' typ
    action 'LBRACKET' (noprec):   reduce typ_comma_one --> typ_comma 'COMMA' typ
    action 'RPAREN' (noprec):   reduce typ_comma_one --> typ_comma 'COMMA' typ
    action 'LPAREN' (noprec):   reduce typ_comma_one --> typ_comma 'COMMA' typ
    action 'PIPE' (noprec):   reduce typ_comma_one --> typ_comma 'COMMA' typ
    action 'STAR' (noprec):   reduce typ_comma_one --> typ_comma 'COMMA' typ
    action 'COLON' (noprec):   reduce typ_comma_one --> typ_comma 'COMMA' typ
    action 'COMMA' (noprec):   reduce typ_comma --> typ_comma 'COMMA' typ
    action 'ARROW' (explicit right 9993):   shift 122
    action 'EQUAL' (noprec):   reduce typ_comma_one --> typ_comma 'COMMA' typ
    action 'REFINES' (noprec):   reduce typ_comma_one --> typ_comma 'COMMA' typ
    action 'HOLE' (noprec):   reduce typ_comma_one --> typ_comma 'COMMA' typ
    action 'WITH' (noprec):   reduce typ_comma_one --> typ_comma 'COMMA' typ
    action 'NOT' (noprec):   reduce typ_comma_one --> typ_comma 'COMMA' typ
    action 'UNIT' (noprec):   reduce typ_comma_one --> typ_comma 'COMMA' typ
    action 'REC' (noprec):   reduce typ_comma_one --> typ_comma 'COMMA' typ
    action 'LET' (noprec):   reduce typ_comma_one --> typ_comma 'COMMA' typ
    action 'OF' (noprec):   reduce typ_comma_one --> typ_comma 'COMMA' typ
    action 'TYPE' (noprec):   reduce typ_comma_one --> typ_comma 'COMMA' typ
    action 'MATCH' (noprec):   reduce typ_comma_one --> typ_comma 'COMMA' typ
    action 'FUN' (noprec):   reduce typ_comma_one --> typ_comma 'COMMA' typ
    action 'TICK' (noprec):   reduce typ_comma_one --> typ_comma 'COMMA' typ
    action 'PROJ' (noprec):   reduce typ_comma_one --> typ_comma 'COMMA' typ
    action 'UID' (noprec):   reduce typ_comma_one --> typ_comma 'COMMA' typ
    action 'LID' (noprec):   reduce typ_comma_one --> typ_comma 'COMMA' typ
    action 'INT' (noprec):   reduce typ_comma_one --> typ_comma 'COMMA' typ
    action 'error' (noprec):   reduce typ_comma_one --> typ_comma 'COMMA' typ
    action '#' (noprec):   reduce typ_comma_one --> typ_comma 'COMMA' typ
    action '$$' (noprec):   reduce typ_comma_one --> typ_comma 'COMMA' typ

  immediate action: <none>
 gotos:

state 122:
  items:
    typ -> typ 'ARROW' . typ

  actions:
    action 'EOF' (noprec):   error
    action 'TUP' (noprec):   error
    action 'CTOR_ALONE' (noprec):   error
    action 'CTOR_ARG' (noprec):   error
    action 'P4' (noprec):   error
    action 'P3' (noprec):   error
    action 'P2' (noprec):   error
    action 'P1' (noprec):   error
    action 'OR' (noprec):   error
    action 'AND' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LPAREN' (noprec):   shift 126
    action 'PIPE' (noprec):   error
    action 'STAR' (noprec):   error
    action 'COLON' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'ARROW' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'REFINES' (noprec):   error
    action 'HOLE' (noprec):   error
    action 'WITH' (noprec):   error
    action 'NOT' (noprec):   error
    action 'UNIT' (noprec):   shift 117
    action 'REC' (noprec):   error
    action 'LET' (noprec):   error
    action 'OF' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'FUN' (noprec):   error
    action 'TICK' (noprec):   shift 124
    action 'PROJ' (noprec):   error
    action 'UID' (noprec):   error
    action 'LID' (noprec):   shift 133
    action 'INT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto typ: 118
    goto typ_in_tup: 144
    goto typ_base: 123
    goto typ_star_one: 125
    goto typ_star: 141

state 123:
  items:
    typ -> typ_base . 
    typ_in_tup -> typ_base . 

  actions:
    action 'EOF' (noprec):   reduce typ --> typ_base
    action 'TUP' (noprec):   reduce typ --> typ_base
    action 'CTOR_ALONE' (noprec):   reduce typ --> typ_base
    action 'CTOR_ARG' (noprec):   reduce typ --> typ_base
    action 'P4' (noprec):   reduce typ --> typ_base
    action 'P3' (noprec):   reduce typ --> typ_base
    action 'P2' (noprec):   reduce typ --> typ_base
    action 'P1' (noprec):   reduce typ --> typ_base
    action 'OR' (noprec):   reduce typ --> typ_base
    action 'AND' (noprec):   reduce typ --> typ_base
    action 'SEMI' (noprec):   reduce typ --> typ_base
    action 'RBRACKET' (noprec):   reduce typ --> typ_base
    action 'LBRACKET' (noprec):   reduce typ --> typ_base
    action 'RPAREN' (noprec):   reduce typ --> typ_base
    action 'LPAREN' (noprec):   reduce typ --> typ_base
    action 'PIPE' (noprec):   reduce typ --> typ_base
    action 'STAR' (noprec):   reduce typ_in_tup --> typ_base
    action 'COLON' (noprec):   reduce typ --> typ_base
    action 'COMMA' (noprec):   reduce typ --> typ_base
    action 'ARROW' (noprec):   reduce typ --> typ_base
    action 'EQUAL' (noprec):   reduce typ --> typ_base
    action 'REFINES' (noprec):   reduce typ --> typ_base
    action 'HOLE' (noprec):   reduce typ --> typ_base
    action 'WITH' (noprec):   reduce typ --> typ_base
    action 'NOT' (noprec):   reduce typ --> typ_base
    action 'UNIT' (noprec):   reduce typ --> typ_base
    action 'REC' (noprec):   reduce typ --> typ_base
    action 'LET' (noprec):   reduce typ --> typ_base
    action 'OF' (noprec):   reduce typ --> typ_base
    action 'TYPE' (noprec):   reduce typ --> typ_base
    action 'MATCH' (noprec):   reduce typ --> typ_base
    action 'FUN' (noprec):   reduce typ --> typ_base
    action 'TICK' (noprec):   reduce typ --> typ_base
    action 'PROJ' (noprec):   reduce typ --> typ_base
    action 'UID' (noprec):   reduce typ --> typ_base
    action 'LID' (noprec):   reduce typ --> typ_base
    action 'INT' (noprec):   reduce typ --> typ_base
    action 'error' (noprec):   reduce typ --> typ_base
    action '#' (noprec):   reduce typ --> typ_base
    action '$$' (noprec):   reduce typ --> typ_base

  immediate action: <none>
 gotos:

state 124:
  items:
    typ -> 'TICK' . 
    typ_in_tup -> 'TICK' . 
    typ_base -> 'TICK' . 'LID'

  actions:
    action 'EOF' (noprec):   reduce typ --> 'TICK'
    action 'TUP' (noprec):   reduce typ --> 'TICK'
    action 'CTOR_ALONE' (noprec):   reduce typ --> 'TICK'
    action 'CTOR_ARG' (noprec):   reduce typ --> 'TICK'
    action 'P4' (noprec):   reduce typ --> 'TICK'
    action 'P3' (noprec):   reduce typ --> 'TICK'
    action 'P2' (noprec):   reduce typ --> 'TICK'
    action 'P1' (noprec):   reduce typ --> 'TICK'
    action 'OR' (noprec):   reduce typ --> 'TICK'
    action 'AND' (noprec):   reduce typ --> 'TICK'
    action 'SEMI' (noprec):   reduce typ --> 'TICK'
    action 'RBRACKET' (noprec):   reduce typ --> 'TICK'
    action 'LBRACKET' (noprec):   reduce typ --> 'TICK'
    action 'RPAREN' (noprec):   reduce typ --> 'TICK'
    action 'LPAREN' (noprec):   reduce typ --> 'TICK'
    action 'PIPE' (noprec):   reduce typ --> 'TICK'
    action 'STAR' (noprec):   reduce typ_in_tup --> 'TICK'
    action 'COLON' (noprec):   reduce typ --> 'TICK'
    action 'COMMA' (noprec):   reduce typ --> 'TICK'
    action 'ARROW' (noprec):   reduce typ --> 'TICK'
    action 'EQUAL' (noprec):   reduce typ --> 'TICK'
    action 'REFINES' (noprec):   reduce typ --> 'TICK'
    action 'HOLE' (noprec):   reduce typ --> 'TICK'
    action 'WITH' (noprec):   reduce typ --> 'TICK'
    action 'NOT' (noprec):   reduce typ --> 'TICK'
    action 'UNIT' (noprec):   reduce typ --> 'TICK'
    action 'REC' (noprec):   reduce typ --> 'TICK'
    action 'LET' (noprec):   reduce typ --> 'TICK'
    action 'OF' (noprec):   reduce typ --> 'TICK'
    action 'TYPE' (noprec):   reduce typ --> 'TICK'
    action 'MATCH' (noprec):   reduce typ --> 'TICK'
    action 'FUN' (noprec):   reduce typ --> 'TICK'
    action 'TICK' (noprec):   reduce typ --> 'TICK'
    action 'PROJ' (noprec):   reduce typ --> 'TICK'
    action 'UID' (noprec):   reduce typ --> 'TICK'
    action 'LID' (noprec):   shift 136
    action 'INT' (noprec):   reduce typ --> 'TICK'
    action 'error' (noprec):   reduce typ --> 'TICK'
    action '#' (noprec):   reduce typ --> 'TICK'
    action '$$' (noprec):   reduce typ --> 'TICK'

  immediate action: <none>
 gotos:

state 125:
  items:
    typ -> typ_star_one . 

  actions:
    action 'EOF' (noprec):   reduce typ --> typ_star_one
    action 'TUP' (noprec):   reduce typ --> typ_star_one
    action 'CTOR_ALONE' (noprec):   reduce typ --> typ_star_one
    action 'CTOR_ARG' (noprec):   reduce typ --> typ_star_one
    action 'P4' (noprec):   reduce typ --> typ_star_one
    action 'P3' (noprec):   reduce typ --> typ_star_one
    action 'P2' (noprec):   reduce typ --> typ_star_one
    action 'P1' (noprec):   reduce typ --> typ_star_one
    action 'OR' (noprec):   reduce typ --> typ_star_one
    action 'AND' (noprec):   reduce typ --> typ_star_one
    action 'SEMI' (noprec):   reduce typ --> typ_star_one
    action 'RBRACKET' (noprec):   reduce typ --> typ_star_one
    action 'LBRACKET' (noprec):   reduce typ --> typ_star_one
    action 'RPAREN' (noprec):   reduce typ --> typ_star_one
    action 'LPAREN' (noprec):   reduce typ --> typ_star_one
    action 'PIPE' (noprec):   reduce typ --> typ_star_one
    action 'STAR' (noprec):   reduce typ --> typ_star_one
    action 'COLON' (noprec):   reduce typ --> typ_star_one
    action 'COMMA' (noprec):   reduce typ --> typ_star_one
    action 'ARROW' (noprec):   reduce typ --> typ_star_one
    action 'EQUAL' (noprec):   reduce typ --> typ_star_one
    action 'REFINES' (noprec):   reduce typ --> typ_star_one
    action 'HOLE' (noprec):   reduce typ --> typ_star_one
    action 'WITH' (noprec):   reduce typ --> typ_star_one
    action 'NOT' (noprec):   reduce typ --> typ_star_one
    action 'UNIT' (noprec):   reduce typ --> typ_star_one
    action 'REC' (noprec):   reduce typ --> typ_star_one
    action 'LET' (noprec):   reduce typ --> typ_star_one
    action 'OF' (noprec):   reduce typ --> typ_star_one
    action 'TYPE' (noprec):   reduce typ --> typ_star_one
    action 'MATCH' (noprec):   reduce typ --> typ_star_one
    action 'FUN' (noprec):   reduce typ --> typ_star_one
    action 'TICK' (noprec):   reduce typ --> typ_star_one
    action 'PROJ' (noprec):   reduce typ --> typ_star_one
    action 'UID' (noprec):   reduce typ --> typ_star_one
    action 'LID' (noprec):   reduce typ --> typ_star_one
    action 'INT' (noprec):   reduce typ --> typ_star_one
    action 'error' (noprec):   reduce typ --> typ_star_one
    action '#' (noprec):   reduce typ --> typ_star_one
    action '$$' (noprec):   reduce typ --> typ_star_one

  immediate action:   reduce typ --> typ_star_one
 gotos:

state 126:
  items:
    typ -> 'LPAREN' . typ 'RPAREN'
    typ_in_tup -> 'LPAREN' . typ 'RPAREN'
    typ_base -> 'LPAREN' . typ 'RPAREN' 'LID'
    typ_base -> 'LPAREN' . typ_comma_one 'RPAREN' 'LID'

  actions:
    action 'EOF' (noprec):   error
    action 'TUP' (noprec):   error
    action 'CTOR_ALONE' (noprec):   error
    action 'CTOR_ARG' (noprec):   error
    action 'P4' (noprec):   error
    action 'P3' (noprec):   error
    action 'P2' (noprec):   error
    action 'P1' (noprec):   error
    action 'OR' (noprec):   error
    action 'AND' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LPAREN' (noprec):   shift 126
    action 'PIPE' (noprec):   error
    action 'STAR' (noprec):   error
    action 'COLON' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'ARROW' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'REFINES' (noprec):   error
    action 'HOLE' (noprec):   error
    action 'WITH' (noprec):   error
    action 'NOT' (noprec):   error
    action 'UNIT' (noprec):   shift 117
    action 'REC' (noprec):   error
    action 'LET' (noprec):   error
    action 'OF' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'FUN' (noprec):   error
    action 'TICK' (noprec):   shift 124
    action 'PROJ' (noprec):   error
    action 'UID' (noprec):   error
    action 'LID' (noprec):   shift 133
    action 'INT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto typ: 119
    goto typ_in_tup: 144
    goto typ_base: 123
    goto typ_star_one: 125
    goto typ_star: 141
    goto typ_comma_one: 138
    goto typ_comma: 145

state 127:
  items:
    typ -> 'LPAREN' typ 'RPAREN' . 
    typ_in_tup -> 'LPAREN' typ 'RPAREN' . 
    typ_base -> 'LPAREN' typ 'RPAREN' . 'LID'

  actions:
    action 'EOF' (noprec):   reduce typ --> 'LPAREN' typ 'RPAREN'
    action 'TUP' (noprec):   reduce typ --> 'LPAREN' typ 'RPAREN'
    action 'CTOR_ALONE' (noprec):   reduce typ --> 'LPAREN' typ 'RPAREN'
    action 'CTOR_ARG' (noprec):   reduce typ --> 'LPAREN' typ 'RPAREN'
    action 'P4' (noprec):   reduce typ --> 'LPAREN' typ 'RPAREN'
    action 'P3' (noprec):   reduce typ --> 'LPAREN' typ 'RPAREN'
    action 'P2' (noprec):   reduce typ --> 'LPAREN' typ 'RPAREN'
    action 'P1' (noprec):   reduce typ --> 'LPAREN' typ 'RPAREN'
    action 'OR' (noprec):   reduce typ --> 'LPAREN' typ 'RPAREN'
    action 'AND' (noprec):   reduce typ --> 'LPAREN' typ 'RPAREN'
    action 'SEMI' (noprec):   reduce typ --> 'LPAREN' typ 'RPAREN'
    action 'RBRACKET' (noprec):   reduce typ --> 'LPAREN' typ 'RPAREN'
    action 'LBRACKET' (noprec):   reduce typ --> 'LPAREN' typ 'RPAREN'
    action 'RPAREN' (noprec):   reduce typ --> 'LPAREN' typ 'RPAREN'
    action 'LPAREN' (noprec):   reduce typ --> 'LPAREN' typ 'RPAREN'
    action 'PIPE' (noprec):   reduce typ --> 'LPAREN' typ 'RPAREN'
    action 'STAR' (noprec):   reduce typ_in_tup --> 'LPAREN' typ 'RPAREN'
    action 'COLON' (noprec):   reduce typ --> 'LPAREN' typ 'RPAREN'
    action 'COMMA' (noprec):   reduce typ --> 'LPAREN' typ 'RPAREN'
    action 'ARROW' (noprec):   reduce typ --> 'LPAREN' typ 'RPAREN'
    action 'EQUAL' (noprec):   reduce typ --> 'LPAREN' typ 'RPAREN'
    action 'REFINES' (noprec):   reduce typ --> 'LPAREN' typ 'RPAREN'
    action 'HOLE' (noprec):   reduce typ --> 'LPAREN' typ 'RPAREN'
    action 'WITH' (noprec):   reduce typ --> 'LPAREN' typ 'RPAREN'
    action 'NOT' (noprec):   reduce typ --> 'LPAREN' typ 'RPAREN'
    action 'UNIT' (noprec):   reduce typ --> 'LPAREN' typ 'RPAREN'
    action 'REC' (noprec):   reduce typ --> 'LPAREN' typ 'RPAREN'
    action 'LET' (noprec):   reduce typ --> 'LPAREN' typ 'RPAREN'
    action 'OF' (noprec):   reduce typ --> 'LPAREN' typ 'RPAREN'
    action 'TYPE' (noprec):   reduce typ --> 'LPAREN' typ 'RPAREN'
    action 'MATCH' (noprec):   reduce typ --> 'LPAREN' typ 'RPAREN'
    action 'FUN' (noprec):   reduce typ --> 'LPAREN' typ 'RPAREN'
    action 'TICK' (noprec):   reduce typ --> 'LPAREN' typ 'RPAREN'
    action 'PROJ' (noprec):   reduce typ --> 'LPAREN' typ 'RPAREN'
    action 'UID' (noprec):   reduce typ --> 'LPAREN' typ 'RPAREN'
    action 'LID' (noprec):   shift 137
    action 'INT' (noprec):   reduce typ --> 'LPAREN' typ 'RPAREN'
    action 'error' (noprec):   reduce typ --> 'LPAREN' typ 'RPAREN'
    action '#' (noprec):   reduce typ --> 'LPAREN' typ 'RPAREN'
    action '$$' (noprec):   reduce typ --> 'LPAREN' typ 'RPAREN'

  immediate action: <none>
 gotos:

state 128:
  items:
    typ_in_tup -> 'UNIT' . 
    typ_base -> 'UNIT' . 'LID'

  actions:
    action 'EOF' (noprec):   reduce typ_in_tup --> 'UNIT'
    action 'TUP' (noprec):   reduce typ_in_tup --> 'UNIT'
    action 'CTOR_ALONE' (noprec):   reduce typ_in_tup --> 'UNIT'
    action 'CTOR_ARG' (noprec):   reduce typ_in_tup --> 'UNIT'
    action 'P4' (noprec):   reduce typ_in_tup --> 'UNIT'
    action 'P3' (noprec):   reduce typ_in_tup --> 'UNIT'
    action 'P2' (noprec):   reduce typ_in_tup --> 'UNIT'
    action 'P1' (noprec):   reduce typ_in_tup --> 'UNIT'
    action 'OR' (noprec):   reduce typ_in_tup --> 'UNIT'
    action 'AND' (noprec):   reduce typ_in_tup --> 'UNIT'
    action 'SEMI' (noprec):   reduce typ_in_tup --> 'UNIT'
    action 'RBRACKET' (noprec):   reduce typ_in_tup --> 'UNIT'
    action 'LBRACKET' (noprec):   reduce typ_in_tup --> 'UNIT'
    action 'RPAREN' (noprec):   reduce typ_in_tup --> 'UNIT'
    action 'LPAREN' (noprec):   reduce typ_in_tup --> 'UNIT'
    action 'PIPE' (noprec):   reduce typ_in_tup --> 'UNIT'
    action 'STAR' (noprec):   reduce typ_in_tup --> 'UNIT'
    action 'COLON' (noprec):   reduce typ_in_tup --> 'UNIT'
    action 'COMMA' (noprec):   reduce typ_in_tup --> 'UNIT'
    action 'ARROW' (noprec):   reduce typ_in_tup --> 'UNIT'
    action 'EQUAL' (noprec):   reduce typ_in_tup --> 'UNIT'
    action 'REFINES' (noprec):   reduce typ_in_tup --> 'UNIT'
    action 'HOLE' (noprec):   reduce typ_in_tup --> 'UNIT'
    action 'WITH' (noprec):   reduce typ_in_tup --> 'UNIT'
    action 'NOT' (noprec):   reduce typ_in_tup --> 'UNIT'
    action 'UNIT' (noprec):   reduce typ_in_tup --> 'UNIT'
    action 'REC' (noprec):   reduce typ_in_tup --> 'UNIT'
    action 'LET' (noprec):   reduce typ_in_tup --> 'UNIT'
    action 'OF' (noprec):   reduce typ_in_tup --> 'UNIT'
    action 'TYPE' (noprec):   reduce typ_in_tup --> 'UNIT'
    action 'MATCH' (noprec):   reduce typ_in_tup --> 'UNIT'
    action 'FUN' (noprec):   reduce typ_in_tup --> 'UNIT'
    action 'TICK' (noprec):   reduce typ_in_tup --> 'UNIT'
    action 'PROJ' (noprec):   reduce typ_in_tup --> 'UNIT'
    action 'UID' (noprec):   reduce typ_in_tup --> 'UNIT'
    action 'LID' (noprec):   shift 135
    action 'INT' (noprec):   reduce typ_in_tup --> 'UNIT'
    action 'error' (noprec):   reduce typ_in_tup --> 'UNIT'
    action '#' (noprec):   reduce typ_in_tup --> 'UNIT'
    action '$$' (noprec):   reduce typ_in_tup --> 'UNIT'

  immediate action: <none>
 gotos:

state 129:
  items:
    typ_in_tup -> 'TICK' . 
    typ_base -> 'TICK' . 'LID'

  actions:
    action 'EOF' (noprec):   reduce typ_in_tup --> 'TICK'
    action 'TUP' (noprec):   reduce typ_in_tup --> 'TICK'
    action 'CTOR_ALONE' (noprec):   reduce typ_in_tup --> 'TICK'
    action 'CTOR_ARG' (noprec):   reduce typ_in_tup --> 'TICK'
    action 'P4' (noprec):   reduce typ_in_tup --> 'TICK'
    action 'P3' (noprec):   reduce typ_in_tup --> 'TICK'
    action 'P2' (noprec):   reduce typ_in_tup --> 'TICK'
    action 'P1' (noprec):   reduce typ_in_tup --> 'TICK'
    action 'OR' (noprec):   reduce typ_in_tup --> 'TICK'
    action 'AND' (noprec):   reduce typ_in_tup --> 'TICK'
    action 'SEMI' (noprec):   reduce typ_in_tup --> 'TICK'
    action 'RBRACKET' (noprec):   reduce typ_in_tup --> 'TICK'
    action 'LBRACKET' (noprec):   reduce typ_in_tup --> 'TICK'
    action 'RPAREN' (noprec):   reduce typ_in_tup --> 'TICK'
    action 'LPAREN' (noprec):   reduce typ_in_tup --> 'TICK'
    action 'PIPE' (noprec):   reduce typ_in_tup --> 'TICK'
    action 'STAR' (noprec):   reduce typ_in_tup --> 'TICK'
    action 'COLON' (noprec):   reduce typ_in_tup --> 'TICK'
    action 'COMMA' (noprec):   reduce typ_in_tup --> 'TICK'
    action 'ARROW' (noprec):   reduce typ_in_tup --> 'TICK'
    action 'EQUAL' (noprec):   reduce typ_in_tup --> 'TICK'
    action 'REFINES' (noprec):   reduce typ_in_tup --> 'TICK'
    action 'HOLE' (noprec):   reduce typ_in_tup --> 'TICK'
    action 'WITH' (noprec):   reduce typ_in_tup --> 'TICK'
    action 'NOT' (noprec):   reduce typ_in_tup --> 'TICK'
    action 'UNIT' (noprec):   reduce typ_in_tup --> 'TICK'
    action 'REC' (noprec):   reduce typ_in_tup --> 'TICK'
    action 'LET' (noprec):   reduce typ_in_tup --> 'TICK'
    action 'OF' (noprec):   reduce typ_in_tup --> 'TICK'
    action 'TYPE' (noprec):   reduce typ_in_tup --> 'TICK'
    action 'MATCH' (noprec):   reduce typ_in_tup --> 'TICK'
    action 'FUN' (noprec):   reduce typ_in_tup --> 'TICK'
    action 'TICK' (noprec):   reduce typ_in_tup --> 'TICK'
    action 'PROJ' (noprec):   reduce typ_in_tup --> 'TICK'
    action 'UID' (noprec):   reduce typ_in_tup --> 'TICK'
    action 'LID' (noprec):   shift 136
    action 'INT' (noprec):   reduce typ_in_tup --> 'TICK'
    action 'error' (noprec):   reduce typ_in_tup --> 'TICK'
    action '#' (noprec):   reduce typ_in_tup --> 'TICK'
    action '$$' (noprec):   reduce typ_in_tup --> 'TICK'

  immediate action: <none>
 gotos:

state 130:
  items:
    typ_in_tup -> typ_base . 

  actions:
    action 'EOF' (noprec):   reduce typ_in_tup --> typ_base
    action 'TUP' (noprec):   reduce typ_in_tup --> typ_base
    action 'CTOR_ALONE' (noprec):   reduce typ_in_tup --> typ_base
    action 'CTOR_ARG' (noprec):   reduce typ_in_tup --> typ_base
    action 'P4' (noprec):   reduce typ_in_tup --> typ_base
    action 'P3' (noprec):   reduce typ_in_tup --> typ_base
    action 'P2' (noprec):   reduce typ_in_tup --> typ_base
    action 'P1' (noprec):   reduce typ_in_tup --> typ_base
    action 'OR' (noprec):   reduce typ_in_tup --> typ_base
    action 'AND' (noprec):   reduce typ_in_tup --> typ_base
    action 'SEMI' (noprec):   reduce typ_in_tup --> typ_base
    action 'RBRACKET' (noprec):   reduce typ_in_tup --> typ_base
    action 'LBRACKET' (noprec):   reduce typ_in_tup --> typ_base
    action 'RPAREN' (noprec):   reduce typ_in_tup --> typ_base
    action 'LPAREN' (noprec):   reduce typ_in_tup --> typ_base
    action 'PIPE' (noprec):   reduce typ_in_tup --> typ_base
    action 'STAR' (noprec):   reduce typ_in_tup --> typ_base
    action 'COLON' (noprec):   reduce typ_in_tup --> typ_base
    action 'COMMA' (noprec):   reduce typ_in_tup --> typ_base
    action 'ARROW' (noprec):   reduce typ_in_tup --> typ_base
    action 'EQUAL' (noprec):   reduce typ_in_tup --> typ_base
    action 'REFINES' (noprec):   reduce typ_in_tup --> typ_base
    action 'HOLE' (noprec):   reduce typ_in_tup --> typ_base
    action 'WITH' (noprec):   reduce typ_in_tup --> typ_base
    action 'NOT' (noprec):   reduce typ_in_tup --> typ_base
    action 'UNIT' (noprec):   reduce typ_in_tup --> typ_base
    action 'REC' (noprec):   reduce typ_in_tup --> typ_base
    action 'LET' (noprec):   reduce typ_in_tup --> typ_base
    action 'OF' (noprec):   reduce typ_in_tup --> typ_base
    action 'TYPE' (noprec):   reduce typ_in_tup --> typ_base
    action 'MATCH' (noprec):   reduce typ_in_tup --> typ_base
    action 'FUN' (noprec):   reduce typ_in_tup --> typ_base
    action 'TICK' (noprec):   reduce typ_in_tup --> typ_base
    action 'PROJ' (noprec):   reduce typ_in_tup --> typ_base
    action 'UID' (noprec):   reduce typ_in_tup --> typ_base
    action 'LID' (noprec):   reduce typ_in_tup --> typ_base
    action 'INT' (noprec):   reduce typ_in_tup --> typ_base
    action 'error' (noprec):   reduce typ_in_tup --> typ_base
    action '#' (noprec):   reduce typ_in_tup --> typ_base
    action '$$' (noprec):   reduce typ_in_tup --> typ_base

  immediate action:   reduce typ_in_tup --> typ_base
 gotos:

state 131:
  items:
    typ_in_tup -> 'LPAREN' . typ 'RPAREN'
    typ_base -> 'LPAREN' . typ 'RPAREN' 'LID'
    typ_base -> 'LPAREN' . typ_comma_one 'RPAREN' 'LID'

  actions:
    action 'EOF' (noprec):   error
    action 'TUP' (noprec):   error
    action 'CTOR_ALONE' (noprec):   error
    action 'CTOR_ARG' (noprec):   error
    action 'P4' (noprec):   error
    action 'P3' (noprec):   error
    action 'P2' (noprec):   error
    action 'P1' (noprec):   error
    action 'OR' (noprec):   error
    action 'AND' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LPAREN' (noprec):   shift 126
    action 'PIPE' (noprec):   error
    action 'STAR' (noprec):   error
    action 'COLON' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'ARROW' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'REFINES' (noprec):   error
    action 'HOLE' (noprec):   error
    action 'WITH' (noprec):   error
    action 'NOT' (noprec):   error
    action 'UNIT' (noprec):   shift 117
    action 'REC' (noprec):   error
    action 'LET' (noprec):   error
    action 'OF' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'FUN' (noprec):   error
    action 'TICK' (noprec):   shift 124
    action 'PROJ' (noprec):   error
    action 'UID' (noprec):   error
    action 'LID' (noprec):   shift 133
    action 'INT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto typ: 120
    goto typ_in_tup: 144
    goto typ_base: 123
    goto typ_star_one: 125
    goto typ_star: 141
    goto typ_comma_one: 138
    goto typ_comma: 145

state 132:
  items:
    typ_in_tup -> 'LPAREN' typ 'RPAREN' . 
    typ_base -> 'LPAREN' typ 'RPAREN' . 'LID'

  actions:
    action 'EOF' (noprec):   reduce typ_in_tup --> 'LPAREN' typ 'RPAREN'
    action 'TUP' (noprec):   reduce typ_in_tup --> 'LPAREN' typ 'RPAREN'
    action 'CTOR_ALONE' (noprec):   reduce typ_in_tup --> 'LPAREN' typ 'RPAREN'
    action 'CTOR_ARG' (noprec):   reduce typ_in_tup --> 'LPAREN' typ 'RPAREN'
    action 'P4' (noprec):   reduce typ_in_tup --> 'LPAREN' typ 'RPAREN'
    action 'P3' (noprec):   reduce typ_in_tup --> 'LPAREN' typ 'RPAREN'
    action 'P2' (noprec):   reduce typ_in_tup --> 'LPAREN' typ 'RPAREN'
    action 'P1' (noprec):   reduce typ_in_tup --> 'LPAREN' typ 'RPAREN'
    action 'OR' (noprec):   reduce typ_in_tup --> 'LPAREN' typ 'RPAREN'
    action 'AND' (noprec):   reduce typ_in_tup --> 'LPAREN' typ 'RPAREN'
    action 'SEMI' (noprec):   reduce typ_in_tup --> 'LPAREN' typ 'RPAREN'
    action 'RBRACKET' (noprec):   reduce typ_in_tup --> 'LPAREN' typ 'RPAREN'
    action 'LBRACKET' (noprec):   reduce typ_in_tup --> 'LPAREN' typ 'RPAREN'
    action 'RPAREN' (noprec):   reduce typ_in_tup --> 'LPAREN' typ 'RPAREN'
    action 'LPAREN' (noprec):   reduce typ_in_tup --> 'LPAREN' typ 'RPAREN'
    action 'PIPE' (noprec):   reduce typ_in_tup --> 'LPAREN' typ 'RPAREN'
    action 'STAR' (noprec):   reduce typ_in_tup --> 'LPAREN' typ 'RPAREN'
    action 'COLON' (noprec):   reduce typ_in_tup --> 'LPAREN' typ 'RPAREN'
    action 'COMMA' (noprec):   reduce typ_in_tup --> 'LPAREN' typ 'RPAREN'
    action 'ARROW' (noprec):   reduce typ_in_tup --> 'LPAREN' typ 'RPAREN'
    action 'EQUAL' (noprec):   reduce typ_in_tup --> 'LPAREN' typ 'RPAREN'
    action 'REFINES' (noprec):   reduce typ_in_tup --> 'LPAREN' typ 'RPAREN'
    action 'HOLE' (noprec):   reduce typ_in_tup --> 'LPAREN' typ 'RPAREN'
    action 'WITH' (noprec):   reduce typ_in_tup --> 'LPAREN' typ 'RPAREN'
    action 'NOT' (noprec):   reduce typ_in_tup --> 'LPAREN' typ 'RPAREN'
    action 'UNIT' (noprec):   reduce typ_in_tup --> 'LPAREN' typ 'RPAREN'
    action 'REC' (noprec):   reduce typ_in_tup --> 'LPAREN' typ 'RPAREN'
    action 'LET' (noprec):   reduce typ_in_tup --> 'LPAREN' typ 'RPAREN'
    action 'OF' (noprec):   reduce typ_in_tup --> 'LPAREN' typ 'RPAREN'
    action 'TYPE' (noprec):   reduce typ_in_tup --> 'LPAREN' typ 'RPAREN'
    action 'MATCH' (noprec):   reduce typ_in_tup --> 'LPAREN' typ 'RPAREN'
    action 'FUN' (noprec):   reduce typ_in_tup --> 'LPAREN' typ 'RPAREN'
    action 'TICK' (noprec):   reduce typ_in_tup --> 'LPAREN' typ 'RPAREN'
    action 'PROJ' (noprec):   reduce typ_in_tup --> 'LPAREN' typ 'RPAREN'
    action 'UID' (noprec):   reduce typ_in_tup --> 'LPAREN' typ 'RPAREN'
    action 'LID' (noprec):   shift 137
    action 'INT' (noprec):   reduce typ_in_tup --> 'LPAREN' typ 'RPAREN'
    action 'error' (noprec):   reduce typ_in_tup --> 'LPAREN' typ 'RPAREN'
    action '#' (noprec):   reduce typ_in_tup --> 'LPAREN' typ 'RPAREN'
    action '$$' (noprec):   reduce typ_in_tup --> 'LPAREN' typ 'RPAREN'

  immediate action: <none>
 gotos:

state 133:
  items:
    typ_base -> 'LID' . 
    typ_base -> 'LID' . 'LID'

  actions:
    action 'EOF' (noprec):   reduce typ_base --> 'LID'
    action 'TUP' (noprec):   reduce typ_base --> 'LID'
    action 'CTOR_ALONE' (noprec):   reduce typ_base --> 'LID'
    action 'CTOR_ARG' (noprec):   reduce typ_base --> 'LID'
    action 'P4' (noprec):   reduce typ_base --> 'LID'
    action 'P3' (noprec):   reduce typ_base --> 'LID'
    action 'P2' (noprec):   reduce typ_base --> 'LID'
    action 'P1' (noprec):   reduce typ_base --> 'LID'
    action 'OR' (noprec):   reduce typ_base --> 'LID'
    action 'AND' (noprec):   reduce typ_base --> 'LID'
    action 'SEMI' (noprec):   reduce typ_base --> 'LID'
    action 'RBRACKET' (noprec):   reduce typ_base --> 'LID'
    action 'LBRACKET' (noprec):   reduce typ_base --> 'LID'
    action 'RPAREN' (noprec):   reduce typ_base --> 'LID'
    action 'LPAREN' (noprec):   reduce typ_base --> 'LID'
    action 'PIPE' (noprec):   reduce typ_base --> 'LID'
    action 'STAR' (noprec):   reduce typ_base --> 'LID'
    action 'COLON' (noprec):   reduce typ_base --> 'LID'
    action 'COMMA' (noprec):   reduce typ_base --> 'LID'
    action 'ARROW' (noprec):   reduce typ_base --> 'LID'
    action 'EQUAL' (noprec):   reduce typ_base --> 'LID'
    action 'REFINES' (noprec):   reduce typ_base --> 'LID'
    action 'HOLE' (noprec):   reduce typ_base --> 'LID'
    action 'WITH' (noprec):   reduce typ_base --> 'LID'
    action 'NOT' (noprec):   reduce typ_base --> 'LID'
    action 'UNIT' (noprec):   reduce typ_base --> 'LID'
    action 'REC' (noprec):   reduce typ_base --> 'LID'
    action 'LET' (noprec):   reduce typ_base --> 'LID'
    action 'OF' (noprec):   reduce typ_base --> 'LID'
    action 'TYPE' (noprec):   reduce typ_base --> 'LID'
    action 'MATCH' (noprec):   reduce typ_base --> 'LID'
    action 'FUN' (noprec):   reduce typ_base --> 'LID'
    action 'TICK' (noprec):   reduce typ_base --> 'LID'
    action 'PROJ' (noprec):   reduce typ_base --> 'LID'
    action 'UID' (noprec):   reduce typ_base --> 'LID'
    action 'LID' (noprec):   shift 134
    action 'INT' (noprec):   reduce typ_base --> 'LID'
    action 'error' (noprec):   reduce typ_base --> 'LID'
    action '#' (noprec):   reduce typ_base --> 'LID'
    action '$$' (noprec):   reduce typ_base --> 'LID'

  immediate action: <none>
 gotos:

state 134:
  items:
    typ_base -> 'LID' 'LID' . 

  actions:
    action 'EOF' (noprec):   reduce typ_base --> 'LID' 'LID'
    action 'TUP' (noprec):   reduce typ_base --> 'LID' 'LID'
    action 'CTOR_ALONE' (noprec):   reduce typ_base --> 'LID' 'LID'
    action 'CTOR_ARG' (noprec):   reduce typ_base --> 'LID' 'LID'
    action 'P4' (noprec):   reduce typ_base --> 'LID' 'LID'
    action 'P3' (noprec):   reduce typ_base --> 'LID' 'LID'
    action 'P2' (noprec):   reduce typ_base --> 'LID' 'LID'
    action 'P1' (noprec):   reduce typ_base --> 'LID' 'LID'
    action 'OR' (noprec):   reduce typ_base --> 'LID' 'LID'
    action 'AND' (noprec):   reduce typ_base --> 'LID' 'LID'
    action 'SEMI' (noprec):   reduce typ_base --> 'LID' 'LID'
    action 'RBRACKET' (noprec):   reduce typ_base --> 'LID' 'LID'
    action 'LBRACKET' (noprec):   reduce typ_base --> 'LID' 'LID'
    action 'RPAREN' (noprec):   reduce typ_base --> 'LID' 'LID'
    action 'LPAREN' (noprec):   reduce typ_base --> 'LID' 'LID'
    action 'PIPE' (noprec):   reduce typ_base --> 'LID' 'LID'
    action 'STAR' (noprec):   reduce typ_base --> 'LID' 'LID'
    action 'COLON' (noprec):   reduce typ_base --> 'LID' 'LID'
    action 'COMMA' (noprec):   reduce typ_base --> 'LID' 'LID'
    action 'ARROW' (noprec):   reduce typ_base --> 'LID' 'LID'
    action 'EQUAL' (noprec):   reduce typ_base --> 'LID' 'LID'
    action 'REFINES' (noprec):   reduce typ_base --> 'LID' 'LID'
    action 'HOLE' (noprec):   reduce typ_base --> 'LID' 'LID'
    action 'WITH' (noprec):   reduce typ_base --> 'LID' 'LID'
    action 'NOT' (noprec):   reduce typ_base --> 'LID' 'LID'
    action 'UNIT' (noprec):   reduce typ_base --> 'LID' 'LID'
    action 'REC' (noprec):   reduce typ_base --> 'LID' 'LID'
    action 'LET' (noprec):   reduce typ_base --> 'LID' 'LID'
    action 'OF' (noprec):   reduce typ_base --> 'LID' 'LID'
    action 'TYPE' (noprec):   reduce typ_base --> 'LID' 'LID'
    action 'MATCH' (noprec):   reduce typ_base --> 'LID' 'LID'
    action 'FUN' (noprec):   reduce typ_base --> 'LID' 'LID'
    action 'TICK' (noprec):   reduce typ_base --> 'LID' 'LID'
    action 'PROJ' (noprec):   reduce typ_base --> 'LID' 'LID'
    action 'UID' (noprec):   reduce typ_base --> 'LID' 'LID'
    action 'LID' (noprec):   reduce typ_base --> 'LID' 'LID'
    action 'INT' (noprec):   reduce typ_base --> 'LID' 'LID'
    action 'error' (noprec):   reduce typ_base --> 'LID' 'LID'
    action '#' (noprec):   reduce typ_base --> 'LID' 'LID'
    action '$$' (noprec):   reduce typ_base --> 'LID' 'LID'

  immediate action:   reduce typ_base --> 'LID' 'LID'
 gotos:

state 135:
  items:
    typ_base -> 'UNIT' 'LID' . 

  actions:
    action 'EOF' (noprec):   reduce typ_base --> 'UNIT' 'LID'
    action 'TUP' (noprec):   reduce typ_base --> 'UNIT' 'LID'
    action 'CTOR_ALONE' (noprec):   reduce typ_base --> 'UNIT' 'LID'
    action 'CTOR_ARG' (noprec):   reduce typ_base --> 'UNIT' 'LID'
    action 'P4' (noprec):   reduce typ_base --> 'UNIT' 'LID'
    action 'P3' (noprec):   reduce typ_base --> 'UNIT' 'LID'
    action 'P2' (noprec):   reduce typ_base --> 'UNIT' 'LID'
    action 'P1' (noprec):   reduce typ_base --> 'UNIT' 'LID'
    action 'OR' (noprec):   reduce typ_base --> 'UNIT' 'LID'
    action 'AND' (noprec):   reduce typ_base --> 'UNIT' 'LID'
    action 'SEMI' (noprec):   reduce typ_base --> 'UNIT' 'LID'
    action 'RBRACKET' (noprec):   reduce typ_base --> 'UNIT' 'LID'
    action 'LBRACKET' (noprec):   reduce typ_base --> 'UNIT' 'LID'
    action 'RPAREN' (noprec):   reduce typ_base --> 'UNIT' 'LID'
    action 'LPAREN' (noprec):   reduce typ_base --> 'UNIT' 'LID'
    action 'PIPE' (noprec):   reduce typ_base --> 'UNIT' 'LID'
    action 'STAR' (noprec):   reduce typ_base --> 'UNIT' 'LID'
    action 'COLON' (noprec):   reduce typ_base --> 'UNIT' 'LID'
    action 'COMMA' (noprec):   reduce typ_base --> 'UNIT' 'LID'
    action 'ARROW' (noprec):   reduce typ_base --> 'UNIT' 'LID'
    action 'EQUAL' (noprec):   reduce typ_base --> 'UNIT' 'LID'
    action 'REFINES' (noprec):   reduce typ_base --> 'UNIT' 'LID'
    action 'HOLE' (noprec):   reduce typ_base --> 'UNIT' 'LID'
    action 'WITH' (noprec):   reduce typ_base --> 'UNIT' 'LID'
    action 'NOT' (noprec):   reduce typ_base --> 'UNIT' 'LID'
    action 'UNIT' (noprec):   reduce typ_base --> 'UNIT' 'LID'
    action 'REC' (noprec):   reduce typ_base --> 'UNIT' 'LID'
    action 'LET' (noprec):   reduce typ_base --> 'UNIT' 'LID'
    action 'OF' (noprec):   reduce typ_base --> 'UNIT' 'LID'
    action 'TYPE' (noprec):   reduce typ_base --> 'UNIT' 'LID'
    action 'MATCH' (noprec):   reduce typ_base --> 'UNIT' 'LID'
    action 'FUN' (noprec):   reduce typ_base --> 'UNIT' 'LID'
    action 'TICK' (noprec):   reduce typ_base --> 'UNIT' 'LID'
    action 'PROJ' (noprec):   reduce typ_base --> 'UNIT' 'LID'
    action 'UID' (noprec):   reduce typ_base --> 'UNIT' 'LID'
    action 'LID' (noprec):   reduce typ_base --> 'UNIT' 'LID'
    action 'INT' (noprec):   reduce typ_base --> 'UNIT' 'LID'
    action 'error' (noprec):   reduce typ_base --> 'UNIT' 'LID'
    action '#' (noprec):   reduce typ_base --> 'UNIT' 'LID'
    action '$$' (noprec):   reduce typ_base --> 'UNIT' 'LID'

  immediate action:   reduce typ_base --> 'UNIT' 'LID'
 gotos:

state 136:
  items:
    typ_base -> 'TICK' 'LID' . 

  actions:
    action 'EOF' (noprec):   reduce typ_base --> 'TICK' 'LID'
    action 'TUP' (noprec):   reduce typ_base --> 'TICK' 'LID'
    action 'CTOR_ALONE' (noprec):   reduce typ_base --> 'TICK' 'LID'
    action 'CTOR_ARG' (noprec):   reduce typ_base --> 'TICK' 'LID'
    action 'P4' (noprec):   reduce typ_base --> 'TICK' 'LID'
    action 'P3' (noprec):   reduce typ_base --> 'TICK' 'LID'
    action 'P2' (noprec):   reduce typ_base --> 'TICK' 'LID'
    action 'P1' (noprec):   reduce typ_base --> 'TICK' 'LID'
    action 'OR' (noprec):   reduce typ_base --> 'TICK' 'LID'
    action 'AND' (noprec):   reduce typ_base --> 'TICK' 'LID'
    action 'SEMI' (noprec):   reduce typ_base --> 'TICK' 'LID'
    action 'RBRACKET' (noprec):   reduce typ_base --> 'TICK' 'LID'
    action 'LBRACKET' (noprec):   reduce typ_base --> 'TICK' 'LID'
    action 'RPAREN' (noprec):   reduce typ_base --> 'TICK' 'LID'
    action 'LPAREN' (noprec):   reduce typ_base --> 'TICK' 'LID'
    action 'PIPE' (noprec):   reduce typ_base --> 'TICK' 'LID'
    action 'STAR' (noprec):   reduce typ_base --> 'TICK' 'LID'
    action 'COLON' (noprec):   reduce typ_base --> 'TICK' 'LID'
    action 'COMMA' (noprec):   reduce typ_base --> 'TICK' 'LID'
    action 'ARROW' (noprec):   reduce typ_base --> 'TICK' 'LID'
    action 'EQUAL' (noprec):   reduce typ_base --> 'TICK' 'LID'
    action 'REFINES' (noprec):   reduce typ_base --> 'TICK' 'LID'
    action 'HOLE' (noprec):   reduce typ_base --> 'TICK' 'LID'
    action 'WITH' (noprec):   reduce typ_base --> 'TICK' 'LID'
    action 'NOT' (noprec):   reduce typ_base --> 'TICK' 'LID'
    action 'UNIT' (noprec):   reduce typ_base --> 'TICK' 'LID'
    action 'REC' (noprec):   reduce typ_base --> 'TICK' 'LID'
    action 'LET' (noprec):   reduce typ_base --> 'TICK' 'LID'
    action 'OF' (noprec):   reduce typ_base --> 'TICK' 'LID'
    action 'TYPE' (noprec):   reduce typ_base --> 'TICK' 'LID'
    action 'MATCH' (noprec):   reduce typ_base --> 'TICK' 'LID'
    action 'FUN' (noprec):   reduce typ_base --> 'TICK' 'LID'
    action 'TICK' (noprec):   reduce typ_base --> 'TICK' 'LID'
    action 'PROJ' (noprec):   reduce typ_base --> 'TICK' 'LID'
    action 'UID' (noprec):   reduce typ_base --> 'TICK' 'LID'
    action 'LID' (noprec):   reduce typ_base --> 'TICK' 'LID'
    action 'INT' (noprec):   reduce typ_base --> 'TICK' 'LID'
    action 'error' (noprec):   reduce typ_base --> 'TICK' 'LID'
    action '#' (noprec):   reduce typ_base --> 'TICK' 'LID'
    action '$$' (noprec):   reduce typ_base --> 'TICK' 'LID'

  immediate action:   reduce typ_base --> 'TICK' 'LID'
 gotos:

state 137:
  items:
    typ_base -> 'LPAREN' typ 'RPAREN' 'LID' . 

  actions:
    action 'EOF' (noprec):   reduce typ_base --> 'LPAREN' typ 'RPAREN' 'LID'
    action 'TUP' (noprec):   reduce typ_base --> 'LPAREN' typ 'RPAREN' 'LID'
    action 'CTOR_ALONE' (noprec):   reduce typ_base --> 'LPAREN' typ 'RPAREN' 'LID'
    action 'CTOR_ARG' (noprec):   reduce typ_base --> 'LPAREN' typ 'RPAREN' 'LID'
    action 'P4' (noprec):   reduce typ_base --> 'LPAREN' typ 'RPAREN' 'LID'
    action 'P3' (noprec):   reduce typ_base --> 'LPAREN' typ 'RPAREN' 'LID'
    action 'P2' (noprec):   reduce typ_base --> 'LPAREN' typ 'RPAREN' 'LID'
    action 'P1' (noprec):   reduce typ_base --> 'LPAREN' typ 'RPAREN' 'LID'
    action 'OR' (noprec):   reduce typ_base --> 'LPAREN' typ 'RPAREN' 'LID'
    action 'AND' (noprec):   reduce typ_base --> 'LPAREN' typ 'RPAREN' 'LID'
    action 'SEMI' (noprec):   reduce typ_base --> 'LPAREN' typ 'RPAREN' 'LID'
    action 'RBRACKET' (noprec):   reduce typ_base --> 'LPAREN' typ 'RPAREN' 'LID'
    action 'LBRACKET' (noprec):   reduce typ_base --> 'LPAREN' typ 'RPAREN' 'LID'
    action 'RPAREN' (noprec):   reduce typ_base --> 'LPAREN' typ 'RPAREN' 'LID'
    action 'LPAREN' (noprec):   reduce typ_base --> 'LPAREN' typ 'RPAREN' 'LID'
    action 'PIPE' (noprec):   reduce typ_base --> 'LPAREN' typ 'RPAREN' 'LID'
    action 'STAR' (noprec):   reduce typ_base --> 'LPAREN' typ 'RPAREN' 'LID'
    action 'COLON' (noprec):   reduce typ_base --> 'LPAREN' typ 'RPAREN' 'LID'
    action 'COMMA' (noprec):   reduce typ_base --> 'LPAREN' typ 'RPAREN' 'LID'
    action 'ARROW' (noprec):   reduce typ_base --> 'LPAREN' typ 'RPAREN' 'LID'
    action 'EQUAL' (noprec):   reduce typ_base --> 'LPAREN' typ 'RPAREN' 'LID'
    action 'REFINES' (noprec):   reduce typ_base --> 'LPAREN' typ 'RPAREN' 'LID'
    action 'HOLE' (noprec):   reduce typ_base --> 'LPAREN' typ 'RPAREN' 'LID'
    action 'WITH' (noprec):   reduce typ_base --> 'LPAREN' typ 'RPAREN' 'LID'
    action 'NOT' (noprec):   reduce typ_base --> 'LPAREN' typ 'RPAREN' 'LID'
    action 'UNIT' (noprec):   reduce typ_base --> 'LPAREN' typ 'RPAREN' 'LID'
    action 'REC' (noprec):   reduce typ_base --> 'LPAREN' typ 'RPAREN' 'LID'
    action 'LET' (noprec):   reduce typ_base --> 'LPAREN' typ 'RPAREN' 'LID'
    action 'OF' (noprec):   reduce typ_base --> 'LPAREN' typ 'RPAREN' 'LID'
    action 'TYPE' (noprec):   reduce typ_base --> 'LPAREN' typ 'RPAREN' 'LID'
    action 'MATCH' (noprec):   reduce typ_base --> 'LPAREN' typ 'RPAREN' 'LID'
    action 'FUN' (noprec):   reduce typ_base --> 'LPAREN' typ 'RPAREN' 'LID'
    action 'TICK' (noprec):   reduce typ_base --> 'LPAREN' typ 'RPAREN' 'LID'
    action 'PROJ' (noprec):   reduce typ_base --> 'LPAREN' typ 'RPAREN' 'LID'
    action 'UID' (noprec):   reduce typ_base --> 'LPAREN' typ 'RPAREN' 'LID'
    action 'LID' (noprec):   reduce typ_base --> 'LPAREN' typ 'RPAREN' 'LID'
    action 'INT' (noprec):   reduce typ_base --> 'LPAREN' typ 'RPAREN' 'LID'
    action 'error' (noprec):   reduce typ_base --> 'LPAREN' typ 'RPAREN' 'LID'
    action '#' (noprec):   reduce typ_base --> 'LPAREN' typ 'RPAREN' 'LID'
    action '$$' (noprec):   reduce typ_base --> 'LPAREN' typ 'RPAREN' 'LID'

  immediate action:   reduce typ_base --> 'LPAREN' typ 'RPAREN' 'LID'
 gotos:

state 138:
  items:
    typ_base -> 'LPAREN' typ_comma_one . 'RPAREN' 'LID'

  actions:
    action 'EOF' (noprec):   error
    action 'TUP' (noprec):   error
    action 'CTOR_ALONE' (noprec):   error
    action 'CTOR_ARG' (noprec):   error
    action 'P4' (noprec):   error
    action 'P3' (noprec):   error
    action 'P2' (noprec):   error
    action 'P1' (noprec):   error
    action 'OR' (noprec):   error
    action 'AND' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RPAREN' (noprec):   shift 139
    action 'LPAREN' (noprec):   error
    action 'PIPE' (noprec):   error
    action 'STAR' (noprec):   error
    action 'COLON' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'ARROW' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'REFINES' (noprec):   error
    action 'HOLE' (noprec):   error
    action 'WITH' (noprec):   error
    action 'NOT' (noprec):   error
    action 'UNIT' (noprec):   error
    action 'REC' (noprec):   error
    action 'LET' (noprec):   error
    action 'OF' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'FUN' (noprec):   error
    action 'TICK' (noprec):   error
    action 'PROJ' (noprec):   error
    action 'UID' (noprec):   error
    action 'LID' (noprec):   error
    action 'INT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 139:
  items:
    typ_base -> 'LPAREN' typ_comma_one 'RPAREN' . 'LID'

  actions:
    action 'EOF' (noprec):   error
    action 'TUP' (noprec):   error
    action 'CTOR_ALONE' (noprec):   error
    action 'CTOR_ARG' (noprec):   error
    action 'P4' (noprec):   error
    action 'P3' (noprec):   error
    action 'P2' (noprec):   error
    action 'P1' (noprec):   error
    action 'OR' (noprec):   error
    action 'AND' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'PIPE' (noprec):   error
    action 'STAR' (noprec):   error
    action 'COLON' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'ARROW' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'REFINES' (noprec):   error
    action 'HOLE' (noprec):   error
    action 'WITH' (noprec):   error
    action 'NOT' (noprec):   error
    action 'UNIT' (noprec):   error
    action 'REC' (noprec):   error
    action 'LET' (noprec):   error
    action 'OF' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'FUN' (noprec):   error
    action 'TICK' (noprec):   error
    action 'PROJ' (noprec):   error
    action 'UID' (noprec):   error
    action 'LID' (noprec):   shift 140
    action 'INT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 140:
  items:
    typ_base -> 'LPAREN' typ_comma_one 'RPAREN' 'LID' . 

  actions:
    action 'EOF' (noprec):   reduce typ_base --> 'LPAREN' typ_comma_one 'RPAREN' 'LID'
    action 'TUP' (noprec):   reduce typ_base --> 'LPAREN' typ_comma_one 'RPAREN' 'LID'
    action 'CTOR_ALONE' (noprec):   reduce typ_base --> 'LPAREN' typ_comma_one 'RPAREN' 'LID'
    action 'CTOR_ARG' (noprec):   reduce typ_base --> 'LPAREN' typ_comma_one 'RPAREN' 'LID'
    action 'P4' (noprec):   reduce typ_base --> 'LPAREN' typ_comma_one 'RPAREN' 'LID'
    action 'P3' (noprec):   reduce typ_base --> 'LPAREN' typ_comma_one 'RPAREN' 'LID'
    action 'P2' (noprec):   reduce typ_base --> 'LPAREN' typ_comma_one 'RPAREN' 'LID'
    action 'P1' (noprec):   reduce typ_base --> 'LPAREN' typ_comma_one 'RPAREN' 'LID'
    action 'OR' (noprec):   reduce typ_base --> 'LPAREN' typ_comma_one 'RPAREN' 'LID'
    action 'AND' (noprec):   reduce typ_base --> 'LPAREN' typ_comma_one 'RPAREN' 'LID'
    action 'SEMI' (noprec):   reduce typ_base --> 'LPAREN' typ_comma_one 'RPAREN' 'LID'
    action 'RBRACKET' (noprec):   reduce typ_base --> 'LPAREN' typ_comma_one 'RPAREN' 'LID'
    action 'LBRACKET' (noprec):   reduce typ_base --> 'LPAREN' typ_comma_one 'RPAREN' 'LID'
    action 'RPAREN' (noprec):   reduce typ_base --> 'LPAREN' typ_comma_one 'RPAREN' 'LID'
    action 'LPAREN' (noprec):   reduce typ_base --> 'LPAREN' typ_comma_one 'RPAREN' 'LID'
    action 'PIPE' (noprec):   reduce typ_base --> 'LPAREN' typ_comma_one 'RPAREN' 'LID'
    action 'STAR' (noprec):   reduce typ_base --> 'LPAREN' typ_comma_one 'RPAREN' 'LID'
    action 'COLON' (noprec):   reduce typ_base --> 'LPAREN' typ_comma_one 'RPAREN' 'LID'
    action 'COMMA' (noprec):   reduce typ_base --> 'LPAREN' typ_comma_one 'RPAREN' 'LID'
    action 'ARROW' (noprec):   reduce typ_base --> 'LPAREN' typ_comma_one 'RPAREN' 'LID'
    action 'EQUAL' (noprec):   reduce typ_base --> 'LPAREN' typ_comma_one 'RPAREN' 'LID'
    action 'REFINES' (noprec):   reduce typ_base --> 'LPAREN' typ_comma_one 'RPAREN' 'LID'
    action 'HOLE' (noprec):   reduce typ_base --> 'LPAREN' typ_comma_one 'RPAREN' 'LID'
    action 'WITH' (noprec):   reduce typ_base --> 'LPAREN' typ_comma_one 'RPAREN' 'LID'
    action 'NOT' (noprec):   reduce typ_base --> 'LPAREN' typ_comma_one 'RPAREN' 'LID'
    action 'UNIT' (noprec):   reduce typ_base --> 'LPAREN' typ_comma_one 'RPAREN' 'LID'
    action 'REC' (noprec):   reduce typ_base --> 'LPAREN' typ_comma_one 'RPAREN' 'LID'
    action 'LET' (noprec):   reduce typ_base --> 'LPAREN' typ_comma_one 'RPAREN' 'LID'
    action 'OF' (noprec):   reduce typ_base --> 'LPAREN' typ_comma_one 'RPAREN' 'LID'
    action 'TYPE' (noprec):   reduce typ_base --> 'LPAREN' typ_comma_one 'RPAREN' 'LID'
    action 'MATCH' (noprec):   reduce typ_base --> 'LPAREN' typ_comma_one 'RPAREN' 'LID'
    action 'FUN' (noprec):   reduce typ_base --> 'LPAREN' typ_comma_one 'RPAREN' 'LID'
    action 'TICK' (noprec):   reduce typ_base --> 'LPAREN' typ_comma_one 'RPAREN' 'LID'
    action 'PROJ' (noprec):   reduce typ_base --> 'LPAREN' typ_comma_one 'RPAREN' 'LID'
    action 'UID' (noprec):   reduce typ_base --> 'LPAREN' typ_comma_one 'RPAREN' 'LID'
    action 'LID' (noprec):   reduce typ_base --> 'LPAREN' typ_comma_one 'RPAREN' 'LID'
    action 'INT' (noprec):   reduce typ_base --> 'LPAREN' typ_comma_one 'RPAREN' 'LID'
    action 'error' (noprec):   reduce typ_base --> 'LPAREN' typ_comma_one 'RPAREN' 'LID'
    action '#' (noprec):   reduce typ_base --> 'LPAREN' typ_comma_one 'RPAREN' 'LID'
    action '$$' (noprec):   reduce typ_base --> 'LPAREN' typ_comma_one 'RPAREN' 'LID'

  immediate action:   reduce typ_base --> 'LPAREN' typ_comma_one 'RPAREN' 'LID'
 gotos:

state 141:
  items:
    typ_star_one -> typ_star . 'STAR' typ_in_tup
    typ_star -> typ_star . 'STAR' typ_in_tup

  actions:
    action 'EOF' (noprec):   error
    action 'TUP' (noprec):   error
    action 'CTOR_ALONE' (noprec):   error
    action 'CTOR_ARG' (noprec):   error
    action 'P4' (noprec):   error
    action 'P3' (noprec):   error
    action 'P2' (noprec):   error
    action 'P1' (noprec):   error
    action 'OR' (noprec):   error
    action 'AND' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'PIPE' (noprec):   error
    action 'STAR' (noprec):   shift 142
    action 'COLON' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'ARROW' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'REFINES' (noprec):   error
    action 'HOLE' (noprec):   error
    action 'WITH' (noprec):   error
    action 'NOT' (noprec):   error
    action 'UNIT' (noprec):   error
    action 'REC' (noprec):   error
    action 'LET' (noprec):   error
    action 'OF' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'FUN' (noprec):   error
    action 'TICK' (noprec):   error
    action 'PROJ' (noprec):   error
    action 'UID' (noprec):   error
    action 'LID' (noprec):   error
    action 'INT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 142:
  items:
    typ_star_one -> typ_star 'STAR' . typ_in_tup
    typ_star -> typ_star 'STAR' . typ_in_tup

  actions:
    action 'EOF' (noprec):   error
    action 'TUP' (noprec):   error
    action 'CTOR_ALONE' (noprec):   error
    action 'CTOR_ARG' (noprec):   error
    action 'P4' (noprec):   error
    action 'P3' (noprec):   error
    action 'P2' (noprec):   error
    action 'P1' (noprec):   error
    action 'OR' (noprec):   error
    action 'AND' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LPAREN' (noprec):   shift 131
    action 'PIPE' (noprec):   error
    action 'STAR' (noprec):   error
    action 'COLON' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'ARROW' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'REFINES' (noprec):   error
    action 'HOLE' (noprec):   error
    action 'WITH' (noprec):   error
    action 'NOT' (noprec):   error
    action 'UNIT' (noprec):   shift 128
    action 'REC' (noprec):   error
    action 'LET' (noprec):   error
    action 'OF' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'FUN' (noprec):   error
    action 'TICK' (noprec):   shift 129
    action 'PROJ' (noprec):   error
    action 'UID' (noprec):   error
    action 'LID' (noprec):   shift 133
    action 'INT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto typ_in_tup: 143
    goto typ_base: 130

state 143:
  items:
    typ_star_one -> typ_star 'STAR' typ_in_tup . 
    typ_star -> typ_star 'STAR' typ_in_tup . 

  actions:
    action 'EOF' (noprec):   reduce typ_star_one --> typ_star 'STAR' typ_in_tup
    action 'TUP' (noprec):   reduce typ_star_one --> typ_star 'STAR' typ_in_tup
    action 'CTOR_ALONE' (noprec):   reduce typ_star_one --> typ_star 'STAR' typ_in_tup
    action 'CTOR_ARG' (noprec):   reduce typ_star_one --> typ_star 'STAR' typ_in_tup
    action 'P4' (noprec):   reduce typ_star_one --> typ_star 'STAR' typ_in_tup
    action 'P3' (noprec):   reduce typ_star_one --> typ_star 'STAR' typ_in_tup
    action 'P2' (noprec):   reduce typ_star_one --> typ_star 'STAR' typ_in_tup
    action 'P1' (noprec):   reduce typ_star_one --> typ_star 'STAR' typ_in_tup
    action 'OR' (noprec):   reduce typ_star_one --> typ_star 'STAR' typ_in_tup
    action 'AND' (noprec):   reduce typ_star_one --> typ_star 'STAR' typ_in_tup
    action 'SEMI' (noprec):   reduce typ_star_one --> typ_star 'STAR' typ_in_tup
    action 'RBRACKET' (noprec):   reduce typ_star_one --> typ_star 'STAR' typ_in_tup
    action 'LBRACKET' (noprec):   reduce typ_star_one --> typ_star 'STAR' typ_in_tup
    action 'RPAREN' (noprec):   reduce typ_star_one --> typ_star 'STAR' typ_in_tup
    action 'LPAREN' (noprec):   reduce typ_star_one --> typ_star 'STAR' typ_in_tup
    action 'PIPE' (noprec):   reduce typ_star_one --> typ_star 'STAR' typ_in_tup
    action 'STAR' (noprec):   reduce typ_star --> typ_star 'STAR' typ_in_tup
    action 'COLON' (noprec):   reduce typ_star_one --> typ_star 'STAR' typ_in_tup
    action 'COMMA' (noprec):   reduce typ_star_one --> typ_star 'STAR' typ_in_tup
    action 'ARROW' (noprec):   reduce typ_star_one --> typ_star 'STAR' typ_in_tup
    action 'EQUAL' (noprec):   reduce typ_star_one --> typ_star 'STAR' typ_in_tup
    action 'REFINES' (noprec):   reduce typ_star_one --> typ_star 'STAR' typ_in_tup
    action 'HOLE' (noprec):   reduce typ_star_one --> typ_star 'STAR' typ_in_tup
    action 'WITH' (noprec):   reduce typ_star_one --> typ_star 'STAR' typ_in_tup
    action 'NOT' (noprec):   reduce typ_star_one --> typ_star 'STAR' typ_in_tup
    action 'UNIT' (noprec):   reduce typ_star_one --> typ_star 'STAR' typ_in_tup
    action 'REC' (noprec):   reduce typ_star_one --> typ_star 'STAR' typ_in_tup
    action 'LET' (noprec):   reduce typ_star_one --> typ_star 'STAR' typ_in_tup
    action 'OF' (noprec):   reduce typ_star_one --> typ_star 'STAR' typ_in_tup
    action 'TYPE' (noprec):   reduce typ_star_one --> typ_star 'STAR' typ_in_tup
    action 'MATCH' (noprec):   reduce typ_star_one --> typ_star 'STAR' typ_in_tup
    action 'FUN' (noprec):   reduce typ_star_one --> typ_star 'STAR' typ_in_tup
    action 'TICK' (noprec):   reduce typ_star_one --> typ_star 'STAR' typ_in_tup
    action 'PROJ' (noprec):   reduce typ_star_one --> typ_star 'STAR' typ_in_tup
    action 'UID' (noprec):   reduce typ_star_one --> typ_star 'STAR' typ_in_tup
    action 'LID' (noprec):   reduce typ_star_one --> typ_star 'STAR' typ_in_tup
    action 'INT' (noprec):   reduce typ_star_one --> typ_star 'STAR' typ_in_tup
    action 'error' (noprec):   reduce typ_star_one --> typ_star 'STAR' typ_in_tup
    action '#' (noprec):   reduce typ_star_one --> typ_star 'STAR' typ_in_tup
    action '$$' (noprec):   reduce typ_star_one --> typ_star 'STAR' typ_in_tup

  immediate action: <none>
 gotos:

state 144:
  items:
    typ_star -> typ_in_tup . 

  actions:
    action 'EOF' (noprec):   reduce typ_star --> typ_in_tup
    action 'TUP' (noprec):   reduce typ_star --> typ_in_tup
    action 'CTOR_ALONE' (noprec):   reduce typ_star --> typ_in_tup
    action 'CTOR_ARG' (noprec):   reduce typ_star --> typ_in_tup
    action 'P4' (noprec):   reduce typ_star --> typ_in_tup
    action 'P3' (noprec):   reduce typ_star --> typ_in_tup
    action 'P2' (noprec):   reduce typ_star --> typ_in_tup
    action 'P1' (noprec):   reduce typ_star --> typ_in_tup
    action 'OR' (noprec):   reduce typ_star --> typ_in_tup
    action 'AND' (noprec):   reduce typ_star --> typ_in_tup
    action 'SEMI' (noprec):   reduce typ_star --> typ_in_tup
    action 'RBRACKET' (noprec):   reduce typ_star --> typ_in_tup
    action 'LBRACKET' (noprec):   reduce typ_star --> typ_in_tup
    action 'RPAREN' (noprec):   reduce typ_star --> typ_in_tup
    action 'LPAREN' (noprec):   reduce typ_star --> typ_in_tup
    action 'PIPE' (noprec):   reduce typ_star --> typ_in_tup
    action 'STAR' (noprec):   reduce typ_star --> typ_in_tup
    action 'COLON' (noprec):   reduce typ_star --> typ_in_tup
    action 'COMMA' (noprec):   reduce typ_star --> typ_in_tup
    action 'ARROW' (noprec):   reduce typ_star --> typ_in_tup
    action 'EQUAL' (noprec):   reduce typ_star --> typ_in_tup
    action 'REFINES' (noprec):   reduce typ_star --> typ_in_tup
    action 'HOLE' (noprec):   reduce typ_star --> typ_in_tup
    action 'WITH' (noprec):   reduce typ_star --> typ_in_tup
    action 'NOT' (noprec):   reduce typ_star --> typ_in_tup
    action 'UNIT' (noprec):   reduce typ_star --> typ_in_tup
    action 'REC' (noprec):   reduce typ_star --> typ_in_tup
    action 'LET' (noprec):   reduce typ_star --> typ_in_tup
    action 'OF' (noprec):   reduce typ_star --> typ_in_tup
    action 'TYPE' (noprec):   reduce typ_star --> typ_in_tup
    action 'MATCH' (noprec):   reduce typ_star --> typ_in_tup
    action 'FUN' (noprec):   reduce typ_star --> typ_in_tup
    action 'TICK' (noprec):   reduce typ_star --> typ_in_tup
    action 'PROJ' (noprec):   reduce typ_star --> typ_in_tup
    action 'UID' (noprec):   reduce typ_star --> typ_in_tup
    action 'LID' (noprec):   reduce typ_star --> typ_in_tup
    action 'INT' (noprec):   reduce typ_star --> typ_in_tup
    action 'error' (noprec):   reduce typ_star --> typ_in_tup
    action '#' (noprec):   reduce typ_star --> typ_in_tup
    action '$$' (noprec):   reduce typ_star --> typ_in_tup

  immediate action:   reduce typ_star --> typ_in_tup
 gotos:

state 145:
  items:
    typ_comma_one -> typ_comma . 'COMMA' typ
    typ_comma -> typ_comma . 'COMMA' typ

  actions:
    action 'EOF' (noprec):   error
    action 'TUP' (noprec):   error
    action 'CTOR_ALONE' (noprec):   error
    action 'CTOR_ARG' (noprec):   error
    action 'P4' (noprec):   error
    action 'P3' (noprec):   error
    action 'P2' (noprec):   error
    action 'P1' (noprec):   error
    action 'OR' (noprec):   error
    action 'AND' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'PIPE' (noprec):   error
    action 'STAR' (noprec):   error
    action 'COLON' (noprec):   error
    action 'COMMA' (noprec):   shift 146
    action 'ARROW' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'REFINES' (noprec):   error
    action 'HOLE' (noprec):   error
    action 'WITH' (noprec):   error
    action 'NOT' (noprec):   error
    action 'UNIT' (noprec):   error
    action 'REC' (noprec):   error
    action 'LET' (noprec):   error
    action 'OF' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'FUN' (noprec):   error
    action 'TICK' (noprec):   error
    action 'PROJ' (noprec):   error
    action 'UID' (noprec):   error
    action 'LID' (noprec):   error
    action 'INT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 146:
  items:
    typ_comma_one -> typ_comma 'COMMA' . typ
    typ_comma -> typ_comma 'COMMA' . typ

  actions:
    action 'EOF' (noprec):   error
    action 'TUP' (noprec):   error
    action 'CTOR_ALONE' (noprec):   error
    action 'CTOR_ARG' (noprec):   error
    action 'P4' (noprec):   error
    action 'P3' (noprec):   error
    action 'P2' (noprec):   error
    action 'P1' (noprec):   error
    action 'OR' (noprec):   error
    action 'AND' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LPAREN' (noprec):   shift 126
    action 'PIPE' (noprec):   error
    action 'STAR' (noprec):   error
    action 'COLON' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'ARROW' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'REFINES' (noprec):   error
    action 'HOLE' (noprec):   error
    action 'WITH' (noprec):   error
    action 'NOT' (noprec):   error
    action 'UNIT' (noprec):   shift 117
    action 'REC' (noprec):   error
    action 'LET' (noprec):   error
    action 'OF' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'FUN' (noprec):   error
    action 'TICK' (noprec):   shift 124
    action 'PROJ' (noprec):   error
    action 'UID' (noprec):   error
    action 'LID' (noprec):   shift 133
    action 'INT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto typ: 121
    goto typ_in_tup: 144
    goto typ_base: 123
    goto typ_star_one: 125
    goto typ_star: 141

state 147:
  items:
    expr -> expr_p1 . 

  actions:
    action 'EOF' (noprec):   reduce expr --> expr_p1
    action 'TUP' (noprec):   reduce expr --> expr_p1
    action 'CTOR_ALONE' (noprec):   reduce expr --> expr_p1
    action 'CTOR_ARG' (noprec):   reduce expr --> expr_p1
    action 'P4' (noprec):   reduce expr --> expr_p1
    action 'P3' (noprec):   reduce expr --> expr_p1
    action 'P2' (noprec):   reduce expr --> expr_p1
    action 'P1' (noprec):   reduce expr --> expr_p1
    action 'OR' (noprec):   reduce expr --> expr_p1
    action 'AND' (noprec):   reduce expr --> expr_p1
    action 'SEMI' (noprec):   reduce expr --> expr_p1
    action 'RBRACKET' (noprec):   reduce expr --> expr_p1
    action 'LBRACKET' (noprec):   reduce expr --> expr_p1
    action 'RPAREN' (noprec):   reduce expr --> expr_p1
    action 'LPAREN' (noprec):   reduce expr --> expr_p1
    action 'PIPE' (noprec):   reduce expr --> expr_p1
    action 'STAR' (noprec):   reduce expr --> expr_p1
    action 'COLON' (noprec):   reduce expr --> expr_p1
    action 'COMMA' (noprec):   reduce expr --> expr_p1
    action 'ARROW' (noprec):   reduce expr --> expr_p1
    action 'EQUAL' (noprec):   reduce expr --> expr_p1
    action 'REFINES' (noprec):   reduce expr --> expr_p1
    action 'HOLE' (noprec):   reduce expr --> expr_p1
    action 'WITH' (noprec):   reduce expr --> expr_p1
    action 'NOT' (noprec):   reduce expr --> expr_p1
    action 'UNIT' (noprec):   reduce expr --> expr_p1
    action 'REC' (noprec):   reduce expr --> expr_p1
    action 'LET' (noprec):   reduce expr --> expr_p1
    action 'OF' (noprec):   reduce expr --> expr_p1
    action 'TYPE' (noprec):   reduce expr --> expr_p1
    action 'MATCH' (noprec):   reduce expr --> expr_p1
    action 'FUN' (noprec):   reduce expr --> expr_p1
    action 'TICK' (noprec):   reduce expr --> expr_p1
    action 'PROJ' (noprec):   reduce expr --> expr_p1
    action 'UID' (noprec):   reduce expr --> expr_p1
    action 'LID' (noprec):   reduce expr --> expr_p1
    action 'INT' (noprec):   reduce expr --> expr_p1
    action 'error' (noprec):   reduce expr --> expr_p1
    action '#' (noprec):   reduce expr --> expr_p1
    action '$$' (noprec):   reduce expr --> expr_p1

  immediate action:   reduce expr --> expr_p1
 gotos:

state 148:
  items:
    expr -> expr_p2 . 
    app_chain -> expr_p2 . expr_p2

  actions:
    action 'EOF' (noprec):   reduce expr --> expr_p2
    action 'TUP' (noprec):   reduce expr --> expr_p2
    action 'CTOR_ALONE' (noprec):   reduce expr --> expr_p2
    action 'CTOR_ARG' (noprec):   reduce expr --> expr_p2
    action 'P4' (noprec):   reduce expr --> expr_p2
    action 'P3' (noprec):   reduce expr --> expr_p2
    action 'P2' (noprec):   reduce expr --> expr_p2
    action 'P1' (noprec):   reduce expr --> expr_p2
    action 'OR' (noprec):   reduce expr --> expr_p2
    action 'AND' (noprec):   reduce expr --> expr_p2
    action 'SEMI' (noprec):   reduce expr --> expr_p2
    action 'RBRACKET' (noprec):   reduce expr --> expr_p2
    action 'LBRACKET' (noprec):   shift 158
    action 'RPAREN' (noprec):   reduce expr --> expr_p2
    action 'LPAREN' (noprec):   shift 150
    action 'PIPE' (noprec):   reduce expr --> expr_p2
    action 'STAR' (noprec):   reduce expr --> expr_p2
    action 'COLON' (noprec):   reduce expr --> expr_p2
    action 'COMMA' (noprec):   reduce expr --> expr_p2
    action 'ARROW' (noprec):   reduce expr --> expr_p2
    action 'EQUAL' (noprec):   reduce expr --> expr_p2
    action 'REFINES' (noprec):   reduce expr --> expr_p2
    action 'HOLE' (noprec):   reduce expr --> expr_p2
    action 'WITH' (noprec):   reduce expr --> expr_p2
    action 'NOT' (noprec):   reduce expr --> expr_p2
    action 'UNIT' (noprec):   reduce expr --> expr_p2
    action 'REC' (noprec):   reduce expr --> expr_p2
    action 'LET' (noprec):   reduce expr --> expr_p2
    action 'OF' (noprec):   reduce expr --> expr_p2
    action 'TYPE' (noprec):   reduce expr --> expr_p2
    action 'MATCH' (noprec):   reduce expr --> expr_p2
    action 'FUN' (noprec):   reduce expr --> expr_p2
    action 'TICK' (noprec):   reduce expr --> expr_p2
    action 'PROJ' (noprec):   reduce expr --> expr_p2
    action 'UID' (noprec):   reduce expr --> expr_p2
    action 'LID' (noprec):   shift 152
    action 'INT' (noprec):   shift 157
    action 'error' (noprec):   reduce expr --> expr_p2
    action '#' (noprec):   reduce expr --> expr_p2
    action '$$' (noprec):   reduce expr --> expr_p2

  immediate action: <none>
 gotos:
    goto expr_p2: 174

state 149:
  items:
    expr -> 'UID' . 
    ctor_chain -> 'UID' . 'UID'
    ctor_chain -> 'UID' . expr_p2
    ctor_chain -> 'UID' . ctor_chain

  actions:
    action 'EOF' (noprec):   reduce expr --> 'UID'
    action 'TUP' (noprec):   reduce expr --> 'UID'
    action 'CTOR_ALONE' (noprec):   reduce expr --> 'UID'
    action 'CTOR_ARG' (noprec):   reduce expr --> 'UID'
    action 'P4' (noprec):   reduce expr --> 'UID'
    action 'P3' (noprec):   reduce expr --> 'UID'
    action 'P2' (noprec):   reduce expr --> 'UID'
    action 'P1' (noprec):   reduce expr --> 'UID'
    action 'OR' (noprec):   reduce expr --> 'UID'
    action 'AND' (noprec):   reduce expr --> 'UID'
    action 'SEMI' (noprec):   reduce expr --> 'UID'
    action 'RBRACKET' (noprec):   reduce expr --> 'UID'
    action 'LBRACKET' (noprec):   shift 158
    action 'RPAREN' (noprec):   reduce expr --> 'UID'
    action 'LPAREN' (noprec):   shift 150
    action 'PIPE' (noprec):   reduce expr --> 'UID'
    action 'STAR' (noprec):   reduce expr --> 'UID'
    action 'COLON' (noprec):   reduce expr --> 'UID'
    action 'COMMA' (noprec):   reduce expr --> 'UID'
    action 'ARROW' (noprec):   reduce expr --> 'UID'
    action 'EQUAL' (noprec):   reduce expr --> 'UID'
    action 'REFINES' (noprec):   reduce expr --> 'UID'
    action 'HOLE' (noprec):   reduce expr --> 'UID'
    action 'WITH' (noprec):   reduce expr --> 'UID'
    action 'NOT' (noprec):   reduce expr --> 'UID'
    action 'UNIT' (noprec):   reduce expr --> 'UID'
    action 'REC' (noprec):   reduce expr --> 'UID'
    action 'LET' (noprec):   reduce expr --> 'UID'
    action 'OF' (noprec):   reduce expr --> 'UID'
    action 'TYPE' (noprec):   reduce expr --> 'UID'
    action 'MATCH' (noprec):   reduce expr --> 'UID'
    action 'FUN' (noprec):   reduce expr --> 'UID'
    action 'TICK' (noprec):   reduce expr --> 'UID'
    action 'PROJ' (noprec):   reduce expr --> 'UID'
    action 'UID' (noprec):   shift 176
    action 'LID' (noprec):   shift 152
    action 'INT' (noprec):   shift 157
    action 'error' (noprec):   reduce expr --> 'UID'
    action '#' (noprec):   reduce expr --> 'UID'
    action '$$' (noprec):   reduce expr --> 'UID'

  immediate action: <none>
 gotos:
    goto expr_p2: 177
    goto ctor_chain: 178

state 150:
  items:
    expr_p2 -> 'LPAREN' . 'RPAREN'
    expr_p2 -> 'LPAREN' . expr_comma_one 'RPAREN'
    expr_p2 -> 'LPAREN' . expr 'RPAREN'

  actions:
    action 'EOF' (noprec):   error
    action 'TUP' (noprec):   error
    action 'CTOR_ALONE' (noprec):   error
    action 'CTOR_ARG' (noprec):   error
    action 'P4' (noprec):   error
    action 'P3' (noprec):   error
    action 'P2' (noprec):   error
    action 'P1' (noprec):   error
    action 'OR' (noprec):   error
    action 'AND' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LBRACKET' (noprec):   shift 158
    action 'RPAREN' (noprec):   shift 151
    action 'LPAREN' (noprec):   shift 150
    action 'PIPE' (noprec):   error
    action 'STAR' (noprec):   error
    action 'COLON' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'ARROW' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'REFINES' (noprec):   error
    action 'HOLE' (noprec):   error
    action 'WITH' (noprec):   error
    action 'NOT' (noprec):   error
    action 'UNIT' (noprec):   error
    action 'REC' (noprec):   error
    action 'LET' (noprec):   error
    action 'OF' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'MATCH' (noprec):   shift 170
    action 'FUN' (noprec):   shift 166
    action 'TICK' (noprec):   error
    action 'PROJ' (noprec):   shift 162
    action 'UID' (noprec):   shift 149
    action 'LID' (noprec):   shift 152
    action 'INT' (noprec):   shift 157
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto expr: 155
    goto expr_p2: 148
    goto expr_p1: 147
    goto app_chain: 165
    goto ctor_chain: 164
    goto expr_comma_one: 153
    goto expr_comma: 185

state 151:
  items:
    expr_p2 -> 'LPAREN' 'RPAREN' . 

  actions:
    action 'EOF' (noprec):   reduce expr_p2 --> 'LPAREN' 'RPAREN'
    action 'TUP' (noprec):   reduce expr_p2 --> 'LPAREN' 'RPAREN'
    action 'CTOR_ALONE' (noprec):   reduce expr_p2 --> 'LPAREN' 'RPAREN'
    action 'CTOR_ARG' (noprec):   reduce expr_p2 --> 'LPAREN' 'RPAREN'
    action 'P4' (noprec):   reduce expr_p2 --> 'LPAREN' 'RPAREN'
    action 'P3' (noprec):   reduce expr_p2 --> 'LPAREN' 'RPAREN'
    action 'P2' (noprec):   reduce expr_p2 --> 'LPAREN' 'RPAREN'
    action 'P1' (noprec):   reduce expr_p2 --> 'LPAREN' 'RPAREN'
    action 'OR' (noprec):   reduce expr_p2 --> 'LPAREN' 'RPAREN'
    action 'AND' (noprec):   reduce expr_p2 --> 'LPAREN' 'RPAREN'
    action 'SEMI' (noprec):   reduce expr_p2 --> 'LPAREN' 'RPAREN'
    action 'RBRACKET' (noprec):   reduce expr_p2 --> 'LPAREN' 'RPAREN'
    action 'LBRACKET' (noprec):   reduce expr_p2 --> 'LPAREN' 'RPAREN'
    action 'RPAREN' (noprec):   reduce expr_p2 --> 'LPAREN' 'RPAREN'
    action 'LPAREN' (noprec):   reduce expr_p2 --> 'LPAREN' 'RPAREN'
    action 'PIPE' (noprec):   reduce expr_p2 --> 'LPAREN' 'RPAREN'
    action 'STAR' (noprec):   reduce expr_p2 --> 'LPAREN' 'RPAREN'
    action 'COLON' (noprec):   reduce expr_p2 --> 'LPAREN' 'RPAREN'
    action 'COMMA' (noprec):   reduce expr_p2 --> 'LPAREN' 'RPAREN'
    action 'ARROW' (noprec):   reduce expr_p2 --> 'LPAREN' 'RPAREN'
    action 'EQUAL' (noprec):   reduce expr_p2 --> 'LPAREN' 'RPAREN'
    action 'REFINES' (noprec):   reduce expr_p2 --> 'LPAREN' 'RPAREN'
    action 'HOLE' (noprec):   reduce expr_p2 --> 'LPAREN' 'RPAREN'
    action 'WITH' (noprec):   reduce expr_p2 --> 'LPAREN' 'RPAREN'
    action 'NOT' (noprec):   reduce expr_p2 --> 'LPAREN' 'RPAREN'
    action 'UNIT' (noprec):   reduce expr_p2 --> 'LPAREN' 'RPAREN'
    action 'REC' (noprec):   reduce expr_p2 --> 'LPAREN' 'RPAREN'
    action 'LET' (noprec):   reduce expr_p2 --> 'LPAREN' 'RPAREN'
    action 'OF' (noprec):   reduce expr_p2 --> 'LPAREN' 'RPAREN'
    action 'TYPE' (noprec):   reduce expr_p2 --> 'LPAREN' 'RPAREN'
    action 'MATCH' (noprec):   reduce expr_p2 --> 'LPAREN' 'RPAREN'
    action 'FUN' (noprec):   reduce expr_p2 --> 'LPAREN' 'RPAREN'
    action 'TICK' (noprec):   reduce expr_p2 --> 'LPAREN' 'RPAREN'
    action 'PROJ' (noprec):   reduce expr_p2 --> 'LPAREN' 'RPAREN'
    action 'UID' (noprec):   reduce expr_p2 --> 'LPAREN' 'RPAREN'
    action 'LID' (noprec):   reduce expr_p2 --> 'LPAREN' 'RPAREN'
    action 'INT' (noprec):   reduce expr_p2 --> 'LPAREN' 'RPAREN'
    action 'error' (noprec):   reduce expr_p2 --> 'LPAREN' 'RPAREN'
    action '#' (noprec):   reduce expr_p2 --> 'LPAREN' 'RPAREN'
    action '$$' (noprec):   reduce expr_p2 --> 'LPAREN' 'RPAREN'

  immediate action:   reduce expr_p2 --> 'LPAREN' 'RPAREN'
 gotos:

state 152:
  items:
    expr_p2 -> 'LID' . 

  actions:
    action 'EOF' (noprec):   reduce expr_p2 --> 'LID'
    action 'TUP' (noprec):   reduce expr_p2 --> 'LID'
    action 'CTOR_ALONE' (noprec):   reduce expr_p2 --> 'LID'
    action 'CTOR_ARG' (noprec):   reduce expr_p2 --> 'LID'
    action 'P4' (noprec):   reduce expr_p2 --> 'LID'
    action 'P3' (noprec):   reduce expr_p2 --> 'LID'
    action 'P2' (noprec):   reduce expr_p2 --> 'LID'
    action 'P1' (noprec):   reduce expr_p2 --> 'LID'
    action 'OR' (noprec):   reduce expr_p2 --> 'LID'
    action 'AND' (noprec):   reduce expr_p2 --> 'LID'
    action 'SEMI' (noprec):   reduce expr_p2 --> 'LID'
    action 'RBRACKET' (noprec):   reduce expr_p2 --> 'LID'
    action 'LBRACKET' (noprec):   reduce expr_p2 --> 'LID'
    action 'RPAREN' (noprec):   reduce expr_p2 --> 'LID'
    action 'LPAREN' (noprec):   reduce expr_p2 --> 'LID'
    action 'PIPE' (noprec):   reduce expr_p2 --> 'LID'
    action 'STAR' (noprec):   reduce expr_p2 --> 'LID'
    action 'COLON' (noprec):   reduce expr_p2 --> 'LID'
    action 'COMMA' (noprec):   reduce expr_p2 --> 'LID'
    action 'ARROW' (noprec):   reduce expr_p2 --> 'LID'
    action 'EQUAL' (noprec):   reduce expr_p2 --> 'LID'
    action 'REFINES' (noprec):   reduce expr_p2 --> 'LID'
    action 'HOLE' (noprec):   reduce expr_p2 --> 'LID'
    action 'WITH' (noprec):   reduce expr_p2 --> 'LID'
    action 'NOT' (noprec):   reduce expr_p2 --> 'LID'
    action 'UNIT' (noprec):   reduce expr_p2 --> 'LID'
    action 'REC' (noprec):   reduce expr_p2 --> 'LID'
    action 'LET' (noprec):   reduce expr_p2 --> 'LID'
    action 'OF' (noprec):   reduce expr_p2 --> 'LID'
    action 'TYPE' (noprec):   reduce expr_p2 --> 'LID'
    action 'MATCH' (noprec):   reduce expr_p2 --> 'LID'
    action 'FUN' (noprec):   reduce expr_p2 --> 'LID'
    action 'TICK' (noprec):   reduce expr_p2 --> 'LID'
    action 'PROJ' (noprec):   reduce expr_p2 --> 'LID'
    action 'UID' (noprec):   reduce expr_p2 --> 'LID'
    action 'LID' (noprec):   reduce expr_p2 --> 'LID'
    action 'INT' (noprec):   reduce expr_p2 --> 'LID'
    action 'error' (noprec):   reduce expr_p2 --> 'LID'
    action '#' (noprec):   reduce expr_p2 --> 'LID'
    action '$$' (noprec):   reduce expr_p2 --> 'LID'

  immediate action:   reduce expr_p2 --> 'LID'
 gotos:

state 153:
  items:
    expr_p2 -> 'LPAREN' expr_comma_one . 'RPAREN'

  actions:
    action 'EOF' (noprec):   error
    action 'TUP' (noprec):   error
    action 'CTOR_ALONE' (noprec):   error
    action 'CTOR_ARG' (noprec):   error
    action 'P4' (noprec):   error
    action 'P3' (noprec):   error
    action 'P2' (noprec):   error
    action 'P1' (noprec):   error
    action 'OR' (noprec):   error
    action 'AND' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RPAREN' (noprec):   shift 154
    action 'LPAREN' (noprec):   error
    action 'PIPE' (noprec):   error
    action 'STAR' (noprec):   error
    action 'COLON' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'ARROW' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'REFINES' (noprec):   error
    action 'HOLE' (noprec):   error
    action 'WITH' (noprec):   error
    action 'NOT' (noprec):   error
    action 'UNIT' (noprec):   error
    action 'REC' (noprec):   error
    action 'LET' (noprec):   error
    action 'OF' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'FUN' (noprec):   error
    action 'TICK' (noprec):   error
    action 'PROJ' (noprec):   error
    action 'UID' (noprec):   error
    action 'LID' (noprec):   error
    action 'INT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 154:
  items:
    expr_p2 -> 'LPAREN' expr_comma_one 'RPAREN' . 

  actions:
    action 'EOF' (noprec):   reduce expr_p2 --> 'LPAREN' expr_comma_one 'RPAREN'
    action 'TUP' (noprec):   reduce expr_p2 --> 'LPAREN' expr_comma_one 'RPAREN'
    action 'CTOR_ALONE' (noprec):   reduce expr_p2 --> 'LPAREN' expr_comma_one 'RPAREN'
    action 'CTOR_ARG' (noprec):   reduce expr_p2 --> 'LPAREN' expr_comma_one 'RPAREN'
    action 'P4' (noprec):   reduce expr_p2 --> 'LPAREN' expr_comma_one 'RPAREN'
    action 'P3' (noprec):   reduce expr_p2 --> 'LPAREN' expr_comma_one 'RPAREN'
    action 'P2' (noprec):   reduce expr_p2 --> 'LPAREN' expr_comma_one 'RPAREN'
    action 'P1' (noprec):   reduce expr_p2 --> 'LPAREN' expr_comma_one 'RPAREN'
    action 'OR' (noprec):   reduce expr_p2 --> 'LPAREN' expr_comma_one 'RPAREN'
    action 'AND' (noprec):   reduce expr_p2 --> 'LPAREN' expr_comma_one 'RPAREN'
    action 'SEMI' (noprec):   reduce expr_p2 --> 'LPAREN' expr_comma_one 'RPAREN'
    action 'RBRACKET' (noprec):   reduce expr_p2 --> 'LPAREN' expr_comma_one 'RPAREN'
    action 'LBRACKET' (noprec):   reduce expr_p2 --> 'LPAREN' expr_comma_one 'RPAREN'
    action 'RPAREN' (noprec):   reduce expr_p2 --> 'LPAREN' expr_comma_one 'RPAREN'
    action 'LPAREN' (noprec):   reduce expr_p2 --> 'LPAREN' expr_comma_one 'RPAREN'
    action 'PIPE' (noprec):   reduce expr_p2 --> 'LPAREN' expr_comma_one 'RPAREN'
    action 'STAR' (noprec):   reduce expr_p2 --> 'LPAREN' expr_comma_one 'RPAREN'
    action 'COLON' (noprec):   reduce expr_p2 --> 'LPAREN' expr_comma_one 'RPAREN'
    action 'COMMA' (noprec):   reduce expr_p2 --> 'LPAREN' expr_comma_one 'RPAREN'
    action 'ARROW' (noprec):   reduce expr_p2 --> 'LPAREN' expr_comma_one 'RPAREN'
    action 'EQUAL' (noprec):   reduce expr_p2 --> 'LPAREN' expr_comma_one 'RPAREN'
    action 'REFINES' (noprec):   reduce expr_p2 --> 'LPAREN' expr_comma_one 'RPAREN'
    action 'HOLE' (noprec):   reduce expr_p2 --> 'LPAREN' expr_comma_one 'RPAREN'
    action 'WITH' (noprec):   reduce expr_p2 --> 'LPAREN' expr_comma_one 'RPAREN'
    action 'NOT' (noprec):   reduce expr_p2 --> 'LPAREN' expr_comma_one 'RPAREN'
    action 'UNIT' (noprec):   reduce expr_p2 --> 'LPAREN' expr_comma_one 'RPAREN'
    action 'REC' (noprec):   reduce expr_p2 --> 'LPAREN' expr_comma_one 'RPAREN'
    action 'LET' (noprec):   reduce expr_p2 --> 'LPAREN' expr_comma_one 'RPAREN'
    action 'OF' (noprec):   reduce expr_p2 --> 'LPAREN' expr_comma_one 'RPAREN'
    action 'TYPE' (noprec):   reduce expr_p2 --> 'LPAREN' expr_comma_one 'RPAREN'
    action 'MATCH' (noprec):   reduce expr_p2 --> 'LPAREN' expr_comma_one 'RPAREN'
    action 'FUN' (noprec):   reduce expr_p2 --> 'LPAREN' expr_comma_one 'RPAREN'
    action 'TICK' (noprec):   reduce expr_p2 --> 'LPAREN' expr_comma_one 'RPAREN'
    action 'PROJ' (noprec):   reduce expr_p2 --> 'LPAREN' expr_comma_one 'RPAREN'
    action 'UID' (noprec):   reduce expr_p2 --> 'LPAREN' expr_comma_one 'RPAREN'
    action 'LID' (noprec):   reduce expr_p2 --> 'LPAREN' expr_comma_one 'RPAREN'
    action 'INT' (noprec):   reduce expr_p2 --> 'LPAREN' expr_comma_one 'RPAREN'
    action 'error' (noprec):   reduce expr_p2 --> 'LPAREN' expr_comma_one 'RPAREN'
    action '#' (noprec):   reduce expr_p2 --> 'LPAREN' expr_comma_one 'RPAREN'
    action '$$' (noprec):   reduce expr_p2 --> 'LPAREN' expr_comma_one 'RPAREN'

  immediate action:   reduce expr_p2 --> 'LPAREN' expr_comma_one 'RPAREN'
 gotos:

state 155:
  items:
    expr_p2 -> 'LPAREN' expr . 'RPAREN'
    expr_comma -> expr . 

  actions:
    action 'EOF' (noprec):   reduce expr_comma --> expr
    action 'TUP' (noprec):   reduce expr_comma --> expr
    action 'CTOR_ALONE' (noprec):   reduce expr_comma --> expr
    action 'CTOR_ARG' (noprec):   reduce expr_comma --> expr
    action 'P4' (noprec):   reduce expr_comma --> expr
    action 'P3' (noprec):   reduce expr_comma --> expr
    action 'P2' (noprec):   reduce expr_comma --> expr
    action 'P1' (noprec):   reduce expr_comma --> expr
    action 'OR' (noprec):   reduce expr_comma --> expr
    action 'AND' (noprec):   reduce expr_comma --> expr
    action 'SEMI' (noprec):   reduce expr_comma --> expr
    action 'RBRACKET' (noprec):   reduce expr_comma --> expr
    action 'LBRACKET' (noprec):   reduce expr_comma --> expr
    action 'RPAREN' (noprec):   shift 156
    action 'LPAREN' (noprec):   reduce expr_comma --> expr
    action 'PIPE' (noprec):   reduce expr_comma --> expr
    action 'STAR' (noprec):   reduce expr_comma --> expr
    action 'COLON' (noprec):   reduce expr_comma --> expr
    action 'COMMA' (noprec):   reduce expr_comma --> expr
    action 'ARROW' (noprec):   reduce expr_comma --> expr
    action 'EQUAL' (noprec):   reduce expr_comma --> expr
    action 'REFINES' (noprec):   reduce expr_comma --> expr
    action 'HOLE' (noprec):   reduce expr_comma --> expr
    action 'WITH' (noprec):   reduce expr_comma --> expr
    action 'NOT' (noprec):   reduce expr_comma --> expr
    action 'UNIT' (noprec):   reduce expr_comma --> expr
    action 'REC' (noprec):   reduce expr_comma --> expr
    action 'LET' (noprec):   reduce expr_comma --> expr
    action 'OF' (noprec):   reduce expr_comma --> expr
    action 'TYPE' (noprec):   reduce expr_comma --> expr
    action 'MATCH' (noprec):   reduce expr_comma --> expr
    action 'FUN' (noprec):   reduce expr_comma --> expr
    action 'TICK' (noprec):   reduce expr_comma --> expr
    action 'PROJ' (noprec):   reduce expr_comma --> expr
    action 'UID' (noprec):   reduce expr_comma --> expr
    action 'LID' (noprec):   reduce expr_comma --> expr
    action 'INT' (noprec):   reduce expr_comma --> expr
    action 'error' (noprec):   reduce expr_comma --> expr
    action '#' (noprec):   reduce expr_comma --> expr
    action '$$' (noprec):   reduce expr_comma --> expr

  immediate action: <none>
 gotos:

state 156:
  items:
    expr_p2 -> 'LPAREN' expr 'RPAREN' . 

  actions:
    action 'EOF' (noprec):   reduce expr_p2 --> 'LPAREN' expr 'RPAREN'
    action 'TUP' (noprec):   reduce expr_p2 --> 'LPAREN' expr 'RPAREN'
    action 'CTOR_ALONE' (noprec):   reduce expr_p2 --> 'LPAREN' expr 'RPAREN'
    action 'CTOR_ARG' (noprec):   reduce expr_p2 --> 'LPAREN' expr 'RPAREN'
    action 'P4' (noprec):   reduce expr_p2 --> 'LPAREN' expr 'RPAREN'
    action 'P3' (noprec):   reduce expr_p2 --> 'LPAREN' expr 'RPAREN'
    action 'P2' (noprec):   reduce expr_p2 --> 'LPAREN' expr 'RPAREN'
    action 'P1' (noprec):   reduce expr_p2 --> 'LPAREN' expr 'RPAREN'
    action 'OR' (noprec):   reduce expr_p2 --> 'LPAREN' expr 'RPAREN'
    action 'AND' (noprec):   reduce expr_p2 --> 'LPAREN' expr 'RPAREN'
    action 'SEMI' (noprec):   reduce expr_p2 --> 'LPAREN' expr 'RPAREN'
    action 'RBRACKET' (noprec):   reduce expr_p2 --> 'LPAREN' expr 'RPAREN'
    action 'LBRACKET' (noprec):   reduce expr_p2 --> 'LPAREN' expr 'RPAREN'
    action 'RPAREN' (noprec):   reduce expr_p2 --> 'LPAREN' expr 'RPAREN'
    action 'LPAREN' (noprec):   reduce expr_p2 --> 'LPAREN' expr 'RPAREN'
    action 'PIPE' (noprec):   reduce expr_p2 --> 'LPAREN' expr 'RPAREN'
    action 'STAR' (noprec):   reduce expr_p2 --> 'LPAREN' expr 'RPAREN'
    action 'COLON' (noprec):   reduce expr_p2 --> 'LPAREN' expr 'RPAREN'
    action 'COMMA' (noprec):   reduce expr_p2 --> 'LPAREN' expr 'RPAREN'
    action 'ARROW' (noprec):   reduce expr_p2 --> 'LPAREN' expr 'RPAREN'
    action 'EQUAL' (noprec):   reduce expr_p2 --> 'LPAREN' expr 'RPAREN'
    action 'REFINES' (noprec):   reduce expr_p2 --> 'LPAREN' expr 'RPAREN'
    action 'HOLE' (noprec):   reduce expr_p2 --> 'LPAREN' expr 'RPAREN'
    action 'WITH' (noprec):   reduce expr_p2 --> 'LPAREN' expr 'RPAREN'
    action 'NOT' (noprec):   reduce expr_p2 --> 'LPAREN' expr 'RPAREN'
    action 'UNIT' (noprec):   reduce expr_p2 --> 'LPAREN' expr 'RPAREN'
    action 'REC' (noprec):   reduce expr_p2 --> 'LPAREN' expr 'RPAREN'
    action 'LET' (noprec):   reduce expr_p2 --> 'LPAREN' expr 'RPAREN'
    action 'OF' (noprec):   reduce expr_p2 --> 'LPAREN' expr 'RPAREN'
    action 'TYPE' (noprec):   reduce expr_p2 --> 'LPAREN' expr 'RPAREN'
    action 'MATCH' (noprec):   reduce expr_p2 --> 'LPAREN' expr 'RPAREN'
    action 'FUN' (noprec):   reduce expr_p2 --> 'LPAREN' expr 'RPAREN'
    action 'TICK' (noprec):   reduce expr_p2 --> 'LPAREN' expr 'RPAREN'
    action 'PROJ' (noprec):   reduce expr_p2 --> 'LPAREN' expr 'RPAREN'
    action 'UID' (noprec):   reduce expr_p2 --> 'LPAREN' expr 'RPAREN'
    action 'LID' (noprec):   reduce expr_p2 --> 'LPAREN' expr 'RPAREN'
    action 'INT' (noprec):   reduce expr_p2 --> 'LPAREN' expr 'RPAREN'
    action 'error' (noprec):   reduce expr_p2 --> 'LPAREN' expr 'RPAREN'
    action '#' (noprec):   reduce expr_p2 --> 'LPAREN' expr 'RPAREN'
    action '$$' (noprec):   reduce expr_p2 --> 'LPAREN' expr 'RPAREN'

  immediate action:   reduce expr_p2 --> 'LPAREN' expr 'RPAREN'
 gotos:

state 157:
  items:
    expr_p2 -> 'INT' . 

  actions:
    action 'EOF' (noprec):   reduce expr_p2 --> 'INT'
    action 'TUP' (noprec):   reduce expr_p2 --> 'INT'
    action 'CTOR_ALONE' (noprec):   reduce expr_p2 --> 'INT'
    action 'CTOR_ARG' (noprec):   reduce expr_p2 --> 'INT'
    action 'P4' (noprec):   reduce expr_p2 --> 'INT'
    action 'P3' (noprec):   reduce expr_p2 --> 'INT'
    action 'P2' (noprec):   reduce expr_p2 --> 'INT'
    action 'P1' (noprec):   reduce expr_p2 --> 'INT'
    action 'OR' (noprec):   reduce expr_p2 --> 'INT'
    action 'AND' (noprec):   reduce expr_p2 --> 'INT'
    action 'SEMI' (noprec):   reduce expr_p2 --> 'INT'
    action 'RBRACKET' (noprec):   reduce expr_p2 --> 'INT'
    action 'LBRACKET' (noprec):   reduce expr_p2 --> 'INT'
    action 'RPAREN' (noprec):   reduce expr_p2 --> 'INT'
    action 'LPAREN' (noprec):   reduce expr_p2 --> 'INT'
    action 'PIPE' (noprec):   reduce expr_p2 --> 'INT'
    action 'STAR' (noprec):   reduce expr_p2 --> 'INT'
    action 'COLON' (noprec):   reduce expr_p2 --> 'INT'
    action 'COMMA' (noprec):   reduce expr_p2 --> 'INT'
    action 'ARROW' (noprec):   reduce expr_p2 --> 'INT'
    action 'EQUAL' (noprec):   reduce expr_p2 --> 'INT'
    action 'REFINES' (noprec):   reduce expr_p2 --> 'INT'
    action 'HOLE' (noprec):   reduce expr_p2 --> 'INT'
    action 'WITH' (noprec):   reduce expr_p2 --> 'INT'
    action 'NOT' (noprec):   reduce expr_p2 --> 'INT'
    action 'UNIT' (noprec):   reduce expr_p2 --> 'INT'
    action 'REC' (noprec):   reduce expr_p2 --> 'INT'
    action 'LET' (noprec):   reduce expr_p2 --> 'INT'
    action 'OF' (noprec):   reduce expr_p2 --> 'INT'
    action 'TYPE' (noprec):   reduce expr_p2 --> 'INT'
    action 'MATCH' (noprec):   reduce expr_p2 --> 'INT'
    action 'FUN' (noprec):   reduce expr_p2 --> 'INT'
    action 'TICK' (noprec):   reduce expr_p2 --> 'INT'
    action 'PROJ' (noprec):   reduce expr_p2 --> 'INT'
    action 'UID' (noprec):   reduce expr_p2 --> 'INT'
    action 'LID' (noprec):   reduce expr_p2 --> 'INT'
    action 'INT' (noprec):   reduce expr_p2 --> 'INT'
    action 'error' (noprec):   reduce expr_p2 --> 'INT'
    action '#' (noprec):   reduce expr_p2 --> 'INT'
    action '$$' (noprec):   reduce expr_p2 --> 'INT'

  immediate action:   reduce expr_p2 --> 'INT'
 gotos:

state 158:
  items:
    expr_p2 -> 'LBRACKET' . 'RBRACKET'
    expr_p2 -> 'LBRACKET' . expr_semi 'RBRACKET'

  actions:
    action 'EOF' (noprec):   error
    action 'TUP' (noprec):   error
    action 'CTOR_ALONE' (noprec):   error
    action 'CTOR_ARG' (noprec):   error
    action 'P4' (noprec):   error
    action 'P3' (noprec):   error
    action 'P2' (noprec):   error
    action 'P1' (noprec):   error
    action 'OR' (noprec):   error
    action 'AND' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'RBRACKET' (noprec):   shift 159
    action 'LBRACKET' (noprec):   shift 158
    action 'RPAREN' (noprec):   error
    action 'LPAREN' (noprec):   shift 150
    action 'PIPE' (noprec):   error
    action 'STAR' (noprec):   error
    action 'COLON' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'ARROW' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'REFINES' (noprec):   error
    action 'HOLE' (noprec):   error
    action 'WITH' (noprec):   error
    action 'NOT' (noprec):   error
    action 'UNIT' (noprec):   error
    action 'REC' (noprec):   error
    action 'LET' (noprec):   error
    action 'OF' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'MATCH' (noprec):   shift 170
    action 'FUN' (noprec):   shift 166
    action 'TICK' (noprec):   error
    action 'PROJ' (noprec):   shift 162
    action 'UID' (noprec):   shift 149
    action 'LID' (noprec):   shift 152
    action 'INT' (noprec):   shift 157
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto expr: 189
    goto expr_p2: 148
    goto expr_p1: 147
    goto app_chain: 165
    goto ctor_chain: 164
    goto expr_semi: 160
    goto expr_semi2: 188

state 159:
  items:
    expr_p2 -> 'LBRACKET' 'RBRACKET' . 

  actions:
    action 'EOF' (noprec):   reduce expr_p2 --> 'LBRACKET' 'RBRACKET'
    action 'TUP' (noprec):   reduce expr_p2 --> 'LBRACKET' 'RBRACKET'
    action 'CTOR_ALONE' (noprec):   reduce expr_p2 --> 'LBRACKET' 'RBRACKET'
    action 'CTOR_ARG' (noprec):   reduce expr_p2 --> 'LBRACKET' 'RBRACKET'
    action 'P4' (noprec):   reduce expr_p2 --> 'LBRACKET' 'RBRACKET'
    action 'P3' (noprec):   reduce expr_p2 --> 'LBRACKET' 'RBRACKET'
    action 'P2' (noprec):   reduce expr_p2 --> 'LBRACKET' 'RBRACKET'
    action 'P1' (noprec):   reduce expr_p2 --> 'LBRACKET' 'RBRACKET'
    action 'OR' (noprec):   reduce expr_p2 --> 'LBRACKET' 'RBRACKET'
    action 'AND' (noprec):   reduce expr_p2 --> 'LBRACKET' 'RBRACKET'
    action 'SEMI' (noprec):   reduce expr_p2 --> 'LBRACKET' 'RBRACKET'
    action 'RBRACKET' (noprec):   reduce expr_p2 --> 'LBRACKET' 'RBRACKET'
    action 'LBRACKET' (noprec):   reduce expr_p2 --> 'LBRACKET' 'RBRACKET'
    action 'RPAREN' (noprec):   reduce expr_p2 --> 'LBRACKET' 'RBRACKET'
    action 'LPAREN' (noprec):   reduce expr_p2 --> 'LBRACKET' 'RBRACKET'
    action 'PIPE' (noprec):   reduce expr_p2 --> 'LBRACKET' 'RBRACKET'
    action 'STAR' (noprec):   reduce expr_p2 --> 'LBRACKET' 'RBRACKET'
    action 'COLON' (noprec):   reduce expr_p2 --> 'LBRACKET' 'RBRACKET'
    action 'COMMA' (noprec):   reduce expr_p2 --> 'LBRACKET' 'RBRACKET'
    action 'ARROW' (noprec):   reduce expr_p2 --> 'LBRACKET' 'RBRACKET'
    action 'EQUAL' (noprec):   reduce expr_p2 --> 'LBRACKET' 'RBRACKET'
    action 'REFINES' (noprec):   reduce expr_p2 --> 'LBRACKET' 'RBRACKET'
    action 'HOLE' (noprec):   reduce expr_p2 --> 'LBRACKET' 'RBRACKET'
    action 'WITH' (noprec):   reduce expr_p2 --> 'LBRACKET' 'RBRACKET'
    action 'NOT' (noprec):   reduce expr_p2 --> 'LBRACKET' 'RBRACKET'
    action 'UNIT' (noprec):   reduce expr_p2 --> 'LBRACKET' 'RBRACKET'
    action 'REC' (noprec):   reduce expr_p2 --> 'LBRACKET' 'RBRACKET'
    action 'LET' (noprec):   reduce expr_p2 --> 'LBRACKET' 'RBRACKET'
    action 'OF' (noprec):   reduce expr_p2 --> 'LBRACKET' 'RBRACKET'
    action 'TYPE' (noprec):   reduce expr_p2 --> 'LBRACKET' 'RBRACKET'
    action 'MATCH' (noprec):   reduce expr_p2 --> 'LBRACKET' 'RBRACKET'
    action 'FUN' (noprec):   reduce expr_p2 --> 'LBRACKET' 'RBRACKET'
    action 'TICK' (noprec):   reduce expr_p2 --> 'LBRACKET' 'RBRACKET'
    action 'PROJ' (noprec):   reduce expr_p2 --> 'LBRACKET' 'RBRACKET'
    action 'UID' (noprec):   reduce expr_p2 --> 'LBRACKET' 'RBRACKET'
    action 'LID' (noprec):   reduce expr_p2 --> 'LBRACKET' 'RBRACKET'
    action 'INT' (noprec):   reduce expr_p2 --> 'LBRACKET' 'RBRACKET'
    action 'error' (noprec):   reduce expr_p2 --> 'LBRACKET' 'RBRACKET'
    action '#' (noprec):   reduce expr_p2 --> 'LBRACKET' 'RBRACKET'
    action '$$' (noprec):   reduce expr_p2 --> 'LBRACKET' 'RBRACKET'

  immediate action:   reduce expr_p2 --> 'LBRACKET' 'RBRACKET'
 gotos:

state 160:
  items:
    expr_p2 -> 'LBRACKET' expr_semi . 'RBRACKET'

  actions:
    action 'EOF' (noprec):   error
    action 'TUP' (noprec):   error
    action 'CTOR_ALONE' (noprec):   error
    action 'CTOR_ARG' (noprec):   error
    action 'P4' (noprec):   error
    action 'P3' (noprec):   error
    action 'P2' (noprec):   error
    action 'P1' (noprec):   error
    action 'OR' (noprec):   error
    action 'AND' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'RBRACKET' (noprec):   shift 161
    action 'LBRACKET' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'PIPE' (noprec):   error
    action 'STAR' (noprec):   error
    action 'COLON' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'ARROW' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'REFINES' (noprec):   error
    action 'HOLE' (noprec):   error
    action 'WITH' (noprec):   error
    action 'NOT' (noprec):   error
    action 'UNIT' (noprec):   error
    action 'REC' (noprec):   error
    action 'LET' (noprec):   error
    action 'OF' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'FUN' (noprec):   error
    action 'TICK' (noprec):   error
    action 'PROJ' (noprec):   error
    action 'UID' (noprec):   error
    action 'LID' (noprec):   error
    action 'INT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 161:
  items:
    expr_p2 -> 'LBRACKET' expr_semi 'RBRACKET' . 

  actions:
    action 'EOF' (noprec):   reduce expr_p2 --> 'LBRACKET' expr_semi 'RBRACKET'
    action 'TUP' (noprec):   reduce expr_p2 --> 'LBRACKET' expr_semi 'RBRACKET'
    action 'CTOR_ALONE' (noprec):   reduce expr_p2 --> 'LBRACKET' expr_semi 'RBRACKET'
    action 'CTOR_ARG' (noprec):   reduce expr_p2 --> 'LBRACKET' expr_semi 'RBRACKET'
    action 'P4' (noprec):   reduce expr_p2 --> 'LBRACKET' expr_semi 'RBRACKET'
    action 'P3' (noprec):   reduce expr_p2 --> 'LBRACKET' expr_semi 'RBRACKET'
    action 'P2' (noprec):   reduce expr_p2 --> 'LBRACKET' expr_semi 'RBRACKET'
    action 'P1' (noprec):   reduce expr_p2 --> 'LBRACKET' expr_semi 'RBRACKET'
    action 'OR' (noprec):   reduce expr_p2 --> 'LBRACKET' expr_semi 'RBRACKET'
    action 'AND' (noprec):   reduce expr_p2 --> 'LBRACKET' expr_semi 'RBRACKET'
    action 'SEMI' (noprec):   reduce expr_p2 --> 'LBRACKET' expr_semi 'RBRACKET'
    action 'RBRACKET' (noprec):   reduce expr_p2 --> 'LBRACKET' expr_semi 'RBRACKET'
    action 'LBRACKET' (noprec):   reduce expr_p2 --> 'LBRACKET' expr_semi 'RBRACKET'
    action 'RPAREN' (noprec):   reduce expr_p2 --> 'LBRACKET' expr_semi 'RBRACKET'
    action 'LPAREN' (noprec):   reduce expr_p2 --> 'LBRACKET' expr_semi 'RBRACKET'
    action 'PIPE' (noprec):   reduce expr_p2 --> 'LBRACKET' expr_semi 'RBRACKET'
    action 'STAR' (noprec):   reduce expr_p2 --> 'LBRACKET' expr_semi 'RBRACKET'
    action 'COLON' (noprec):   reduce expr_p2 --> 'LBRACKET' expr_semi 'RBRACKET'
    action 'COMMA' (noprec):   reduce expr_p2 --> 'LBRACKET' expr_semi 'RBRACKET'
    action 'ARROW' (noprec):   reduce expr_p2 --> 'LBRACKET' expr_semi 'RBRACKET'
    action 'EQUAL' (noprec):   reduce expr_p2 --> 'LBRACKET' expr_semi 'RBRACKET'
    action 'REFINES' (noprec):   reduce expr_p2 --> 'LBRACKET' expr_semi 'RBRACKET'
    action 'HOLE' (noprec):   reduce expr_p2 --> 'LBRACKET' expr_semi 'RBRACKET'
    action 'WITH' (noprec):   reduce expr_p2 --> 'LBRACKET' expr_semi 'RBRACKET'
    action 'NOT' (noprec):   reduce expr_p2 --> 'LBRACKET' expr_semi 'RBRACKET'
    action 'UNIT' (noprec):   reduce expr_p2 --> 'LBRACKET' expr_semi 'RBRACKET'
    action 'REC' (noprec):   reduce expr_p2 --> 'LBRACKET' expr_semi 'RBRACKET'
    action 'LET' (noprec):   reduce expr_p2 --> 'LBRACKET' expr_semi 'RBRACKET'
    action 'OF' (noprec):   reduce expr_p2 --> 'LBRACKET' expr_semi 'RBRACKET'
    action 'TYPE' (noprec):   reduce expr_p2 --> 'LBRACKET' expr_semi 'RBRACKET'
    action 'MATCH' (noprec):   reduce expr_p2 --> 'LBRACKET' expr_semi 'RBRACKET'
    action 'FUN' (noprec):   reduce expr_p2 --> 'LBRACKET' expr_semi 'RBRACKET'
    action 'TICK' (noprec):   reduce expr_p2 --> 'LBRACKET' expr_semi 'RBRACKET'
    action 'PROJ' (noprec):   reduce expr_p2 --> 'LBRACKET' expr_semi 'RBRACKET'
    action 'UID' (noprec):   reduce expr_p2 --> 'LBRACKET' expr_semi 'RBRACKET'
    action 'LID' (noprec):   reduce expr_p2 --> 'LBRACKET' expr_semi 'RBRACKET'
    action 'INT' (noprec):   reduce expr_p2 --> 'LBRACKET' expr_semi 'RBRACKET'
    action 'error' (noprec):   reduce expr_p2 --> 'LBRACKET' expr_semi 'RBRACKET'
    action '#' (noprec):   reduce expr_p2 --> 'LBRACKET' expr_semi 'RBRACKET'
    action '$$' (noprec):   reduce expr_p2 --> 'LBRACKET' expr_semi 'RBRACKET'

  immediate action:   reduce expr_p2 --> 'LBRACKET' expr_semi 'RBRACKET'
 gotos:

state 162:
  items:
    expr_p1 -> 'PROJ' . expr_p2

  actions:
    action 'EOF' (noprec):   error
    action 'TUP' (noprec):   error
    action 'CTOR_ALONE' (noprec):   error
    action 'CTOR_ARG' (noprec):   error
    action 'P4' (noprec):   error
    action 'P3' (noprec):   error
    action 'P2' (noprec):   error
    action 'P1' (noprec):   error
    action 'OR' (noprec):   error
    action 'AND' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LBRACKET' (noprec):   shift 158
    action 'RPAREN' (noprec):   error
    action 'LPAREN' (noprec):   shift 150
    action 'PIPE' (noprec):   error
    action 'STAR' (noprec):   error
    action 'COLON' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'ARROW' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'REFINES' (noprec):   error
    action 'HOLE' (noprec):   error
    action 'WITH' (noprec):   error
    action 'NOT' (noprec):   error
    action 'UNIT' (noprec):   error
    action 'REC' (noprec):   error
    action 'LET' (noprec):   error
    action 'OF' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'FUN' (noprec):   error
    action 'TICK' (noprec):   error
    action 'PROJ' (noprec):   error
    action 'UID' (noprec):   error
    action 'LID' (noprec):   shift 152
    action 'INT' (noprec):   shift 157
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto expr_p2: 163

state 163:
  items:
    expr_p1 -> 'PROJ' expr_p2 . 

  actions:
    action 'EOF' (noprec):   reduce expr_p1 --> 'PROJ' expr_p2
    action 'TUP' (noprec):   reduce expr_p1 --> 'PROJ' expr_p2
    action 'CTOR_ALONE' (noprec):   reduce expr_p1 --> 'PROJ' expr_p2
    action 'CTOR_ARG' (noprec):   reduce expr_p1 --> 'PROJ' expr_p2
    action 'P4' (noprec):   reduce expr_p1 --> 'PROJ' expr_p2
    action 'P3' (noprec):   reduce expr_p1 --> 'PROJ' expr_p2
    action 'P2' (noprec):   reduce expr_p1 --> 'PROJ' expr_p2
    action 'P1' (noprec):   reduce expr_p1 --> 'PROJ' expr_p2
    action 'OR' (noprec):   reduce expr_p1 --> 'PROJ' expr_p2
    action 'AND' (noprec):   reduce expr_p1 --> 'PROJ' expr_p2
    action 'SEMI' (noprec):   reduce expr_p1 --> 'PROJ' expr_p2
    action 'RBRACKET' (noprec):   reduce expr_p1 --> 'PROJ' expr_p2
    action 'LBRACKET' (noprec):   reduce expr_p1 --> 'PROJ' expr_p2
    action 'RPAREN' (noprec):   reduce expr_p1 --> 'PROJ' expr_p2
    action 'LPAREN' (noprec):   reduce expr_p1 --> 'PROJ' expr_p2
    action 'PIPE' (noprec):   reduce expr_p1 --> 'PROJ' expr_p2
    action 'STAR' (noprec):   reduce expr_p1 --> 'PROJ' expr_p2
    action 'COLON' (noprec):   reduce expr_p1 --> 'PROJ' expr_p2
    action 'COMMA' (noprec):   reduce expr_p1 --> 'PROJ' expr_p2
    action 'ARROW' (noprec):   reduce expr_p1 --> 'PROJ' expr_p2
    action 'EQUAL' (noprec):   reduce expr_p1 --> 'PROJ' expr_p2
    action 'REFINES' (noprec):   reduce expr_p1 --> 'PROJ' expr_p2
    action 'HOLE' (noprec):   reduce expr_p1 --> 'PROJ' expr_p2
    action 'WITH' (noprec):   reduce expr_p1 --> 'PROJ' expr_p2
    action 'NOT' (noprec):   reduce expr_p1 --> 'PROJ' expr_p2
    action 'UNIT' (noprec):   reduce expr_p1 --> 'PROJ' expr_p2
    action 'REC' (noprec):   reduce expr_p1 --> 'PROJ' expr_p2
    action 'LET' (noprec):   reduce expr_p1 --> 'PROJ' expr_p2
    action 'OF' (noprec):   reduce expr_p1 --> 'PROJ' expr_p2
    action 'TYPE' (noprec):   reduce expr_p1 --> 'PROJ' expr_p2
    action 'MATCH' (noprec):   reduce expr_p1 --> 'PROJ' expr_p2
    action 'FUN' (noprec):   reduce expr_p1 --> 'PROJ' expr_p2
    action 'TICK' (noprec):   reduce expr_p1 --> 'PROJ' expr_p2
    action 'PROJ' (noprec):   reduce expr_p1 --> 'PROJ' expr_p2
    action 'UID' (noprec):   reduce expr_p1 --> 'PROJ' expr_p2
    action 'LID' (noprec):   reduce expr_p1 --> 'PROJ' expr_p2
    action 'INT' (noprec):   reduce expr_p1 --> 'PROJ' expr_p2
    action 'error' (noprec):   reduce expr_p1 --> 'PROJ' expr_p2
    action '#' (noprec):   reduce expr_p1 --> 'PROJ' expr_p2
    action '$$' (noprec):   reduce expr_p1 --> 'PROJ' expr_p2

  immediate action:   reduce expr_p1 --> 'PROJ' expr_p2
 gotos:

state 164:
  items:
    expr_p1 -> ctor_chain . 

  actions:
    action 'EOF' (noprec):   reduce expr_p1 --> ctor_chain
    action 'TUP' (noprec):   reduce expr_p1 --> ctor_chain
    action 'CTOR_ALONE' (noprec):   reduce expr_p1 --> ctor_chain
    action 'CTOR_ARG' (noprec):   reduce expr_p1 --> ctor_chain
    action 'P4' (noprec):   reduce expr_p1 --> ctor_chain
    action 'P3' (noprec):   reduce expr_p1 --> ctor_chain
    action 'P2' (noprec):   reduce expr_p1 --> ctor_chain
    action 'P1' (noprec):   reduce expr_p1 --> ctor_chain
    action 'OR' (noprec):   reduce expr_p1 --> ctor_chain
    action 'AND' (noprec):   reduce expr_p1 --> ctor_chain
    action 'SEMI' (noprec):   reduce expr_p1 --> ctor_chain
    action 'RBRACKET' (noprec):   reduce expr_p1 --> ctor_chain
    action 'LBRACKET' (noprec):   reduce expr_p1 --> ctor_chain
    action 'RPAREN' (noprec):   reduce expr_p1 --> ctor_chain
    action 'LPAREN' (noprec):   reduce expr_p1 --> ctor_chain
    action 'PIPE' (noprec):   reduce expr_p1 --> ctor_chain
    action 'STAR' (noprec):   reduce expr_p1 --> ctor_chain
    action 'COLON' (noprec):   reduce expr_p1 --> ctor_chain
    action 'COMMA' (noprec):   reduce expr_p1 --> ctor_chain
    action 'ARROW' (noprec):   reduce expr_p1 --> ctor_chain
    action 'EQUAL' (noprec):   reduce expr_p1 --> ctor_chain
    action 'REFINES' (noprec):   reduce expr_p1 --> ctor_chain
    action 'HOLE' (noprec):   reduce expr_p1 --> ctor_chain
    action 'WITH' (noprec):   reduce expr_p1 --> ctor_chain
    action 'NOT' (noprec):   reduce expr_p1 --> ctor_chain
    action 'UNIT' (noprec):   reduce expr_p1 --> ctor_chain
    action 'REC' (noprec):   reduce expr_p1 --> ctor_chain
    action 'LET' (noprec):   reduce expr_p1 --> ctor_chain
    action 'OF' (noprec):   reduce expr_p1 --> ctor_chain
    action 'TYPE' (noprec):   reduce expr_p1 --> ctor_chain
    action 'MATCH' (noprec):   reduce expr_p1 --> ctor_chain
    action 'FUN' (noprec):   reduce expr_p1 --> ctor_chain
    action 'TICK' (noprec):   reduce expr_p1 --> ctor_chain
    action 'PROJ' (noprec):   reduce expr_p1 --> ctor_chain
    action 'UID' (noprec):   reduce expr_p1 --> ctor_chain
    action 'LID' (noprec):   reduce expr_p1 --> ctor_chain
    action 'INT' (noprec):   reduce expr_p1 --> ctor_chain
    action 'error' (noprec):   reduce expr_p1 --> ctor_chain
    action '#' (noprec):   reduce expr_p1 --> ctor_chain
    action '$$' (noprec):   reduce expr_p1 --> ctor_chain

  immediate action:   reduce expr_p1 --> ctor_chain
 gotos:

state 165:
  items:
    expr_p1 -> app_chain . 
    app_chain -> app_chain . expr_p2

  actions:
    action 'EOF' (noprec):   reduce expr_p1 --> app_chain
    action 'TUP' (noprec):   reduce expr_p1 --> app_chain
    action 'CTOR_ALONE' (noprec):   reduce expr_p1 --> app_chain
    action 'CTOR_ARG' (noprec):   reduce expr_p1 --> app_chain
    action 'P4' (noprec):   reduce expr_p1 --> app_chain
    action 'P3' (noprec):   reduce expr_p1 --> app_chain
    action 'P2' (noprec):   reduce expr_p1 --> app_chain
    action 'P1' (noprec):   reduce expr_p1 --> app_chain
    action 'OR' (noprec):   reduce expr_p1 --> app_chain
    action 'AND' (noprec):   reduce expr_p1 --> app_chain
    action 'SEMI' (noprec):   reduce expr_p1 --> app_chain
    action 'RBRACKET' (noprec):   reduce expr_p1 --> app_chain
    action 'LBRACKET' (noprec):   shift 158
    action 'RPAREN' (noprec):   reduce expr_p1 --> app_chain
    action 'LPAREN' (noprec):   shift 150
    action 'PIPE' (noprec):   reduce expr_p1 --> app_chain
    action 'STAR' (noprec):   reduce expr_p1 --> app_chain
    action 'COLON' (noprec):   reduce expr_p1 --> app_chain
    action 'COMMA' (noprec):   reduce expr_p1 --> app_chain
    action 'ARROW' (noprec):   reduce expr_p1 --> app_chain
    action 'EQUAL' (noprec):   reduce expr_p1 --> app_chain
    action 'REFINES' (noprec):   reduce expr_p1 --> app_chain
    action 'HOLE' (noprec):   reduce expr_p1 --> app_chain
    action 'WITH' (noprec):   reduce expr_p1 --> app_chain
    action 'NOT' (noprec):   reduce expr_p1 --> app_chain
    action 'UNIT' (noprec):   reduce expr_p1 --> app_chain
    action 'REC' (noprec):   reduce expr_p1 --> app_chain
    action 'LET' (noprec):   reduce expr_p1 --> app_chain
    action 'OF' (noprec):   reduce expr_p1 --> app_chain
    action 'TYPE' (noprec):   reduce expr_p1 --> app_chain
    action 'MATCH' (noprec):   reduce expr_p1 --> app_chain
    action 'FUN' (noprec):   reduce expr_p1 --> app_chain
    action 'TICK' (noprec):   reduce expr_p1 --> app_chain
    action 'PROJ' (noprec):   reduce expr_p1 --> app_chain
    action 'UID' (noprec):   reduce expr_p1 --> app_chain
    action 'LID' (noprec):   shift 152
    action 'INT' (noprec):   shift 157
    action 'error' (noprec):   reduce expr_p1 --> app_chain
    action '#' (noprec):   reduce expr_p1 --> app_chain
    action '$$' (noprec):   reduce expr_p1 --> app_chain

  immediate action: <none>
 gotos:
    goto expr_p2: 175

state 166:
  items:
    expr_p1 -> 'FUN' . arg 'ARROW' expr

  actions:
    action 'EOF' (noprec):   error
    action 'TUP' (noprec):   error
    action 'CTOR_ALONE' (noprec):   error
    action 'CTOR_ARG' (noprec):   error
    action 'P4' (noprec):   error
    action 'P3' (noprec):   error
    action 'P2' (noprec):   error
    action 'P1' (noprec):   error
    action 'OR' (noprec):   error
    action 'AND' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LPAREN' (noprec):   shift 68
    action 'PIPE' (noprec):   error
    action 'STAR' (noprec):   error
    action 'COLON' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'ARROW' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'REFINES' (noprec):   error
    action 'HOLE' (noprec):   error
    action 'WITH' (noprec):   error
    action 'NOT' (noprec):   error
    action 'UNIT' (noprec):   error
    action 'REC' (noprec):   error
    action 'LET' (noprec):   error
    action 'OF' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'FUN' (noprec):   error
    action 'TICK' (noprec):   error
    action 'PROJ' (noprec):   error
    action 'UID' (noprec):   error
    action 'LID' (noprec):   error
    action 'INT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto arg: 167

state 167:
  items:
    expr_p1 -> 'FUN' arg . 'ARROW' expr

  actions:
    action 'EOF' (noprec):   error
    action 'TUP' (noprec):   error
    action 'CTOR_ALONE' (noprec):   error
    action 'CTOR_ARG' (noprec):   error
    action 'P4' (noprec):   error
    action 'P3' (noprec):   error
    action 'P2' (noprec):   error
    action 'P1' (noprec):   error
    action 'OR' (noprec):   error
    action 'AND' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'PIPE' (noprec):   error
    action 'STAR' (noprec):   error
    action 'COLON' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'ARROW' (explicit right 9993):   shift 168
    action 'EQUAL' (noprec):   error
    action 'REFINES' (noprec):   error
    action 'HOLE' (noprec):   error
    action 'WITH' (noprec):   error
    action 'NOT' (noprec):   error
    action 'UNIT' (noprec):   error
    action 'REC' (noprec):   error
    action 'LET' (noprec):   error
    action 'OF' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'FUN' (noprec):   error
    action 'TICK' (noprec):   error
    action 'PROJ' (noprec):   error
    action 'UID' (noprec):   error
    action 'LID' (noprec):   error
    action 'INT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 168:
  items:
    expr_p1 -> 'FUN' arg 'ARROW' . expr

  actions:
    action 'EOF' (noprec):   error
    action 'TUP' (noprec):   error
    action 'CTOR_ALONE' (noprec):   error
    action 'CTOR_ARG' (noprec):   error
    action 'P4' (noprec):   error
    action 'P3' (noprec):   error
    action 'P2' (noprec):   error
    action 'P1' (noprec):   error
    action 'OR' (noprec):   error
    action 'AND' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LBRACKET' (noprec):   shift 158
    action 'RPAREN' (noprec):   error
    action 'LPAREN' (noprec):   shift 150
    action 'PIPE' (noprec):   error
    action 'STAR' (noprec):   error
    action 'COLON' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'ARROW' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'REFINES' (noprec):   error
    action 'HOLE' (noprec):   error
    action 'WITH' (noprec):   error
    action 'NOT' (noprec):   error
    action 'UNIT' (noprec):   error
    action 'REC' (noprec):   error
    action 'LET' (noprec):   error
    action 'OF' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'MATCH' (noprec):   shift 170
    action 'FUN' (noprec):   shift 166
    action 'TICK' (noprec):   error
    action 'PROJ' (noprec):   shift 162
    action 'UID' (noprec):   shift 149
    action 'LID' (noprec):   shift 152
    action 'INT' (noprec):   shift 157
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto expr: 169
    goto expr_p2: 148
    goto expr_p1: 147
    goto app_chain: 165
    goto ctor_chain: 164

state 169:
  items:
    expr_p1 -> 'FUN' arg 'ARROW' expr . 

  actions:
    action 'EOF' (explicit right 9993):   reduce expr_p1 --> 'FUN' arg 'ARROW' expr
    action 'TUP' (explicit right 9993):   reduce expr_p1 --> 'FUN' arg 'ARROW' expr
    action 'CTOR_ALONE' (explicit right 9993):   reduce expr_p1 --> 'FUN' arg 'ARROW' expr
    action 'CTOR_ARG' (explicit right 9993):   reduce expr_p1 --> 'FUN' arg 'ARROW' expr
    action 'P4' (explicit right 9993):   reduce expr_p1 --> 'FUN' arg 'ARROW' expr
    action 'P3' (explicit right 9993):   reduce expr_p1 --> 'FUN' arg 'ARROW' expr
    action 'P2' (explicit right 9993):   reduce expr_p1 --> 'FUN' arg 'ARROW' expr
    action 'P1' (explicit right 9993):   reduce expr_p1 --> 'FUN' arg 'ARROW' expr
    action 'OR' (explicit right 9993):   reduce expr_p1 --> 'FUN' arg 'ARROW' expr
    action 'AND' (explicit right 9993):   reduce expr_p1 --> 'FUN' arg 'ARROW' expr
    action 'SEMI' (explicit right 9993):   reduce expr_p1 --> 'FUN' arg 'ARROW' expr
    action 'RBRACKET' (explicit right 9993):   reduce expr_p1 --> 'FUN' arg 'ARROW' expr
    action 'LBRACKET' (explicit right 9993):   reduce expr_p1 --> 'FUN' arg 'ARROW' expr
    action 'RPAREN' (explicit right 9993):   reduce expr_p1 --> 'FUN' arg 'ARROW' expr
    action 'LPAREN' (explicit right 9993):   reduce expr_p1 --> 'FUN' arg 'ARROW' expr
    action 'PIPE' (explicit right 9993):   reduce expr_p1 --> 'FUN' arg 'ARROW' expr
    action 'STAR' (explicit right 9993):   reduce expr_p1 --> 'FUN' arg 'ARROW' expr
    action 'COLON' (explicit right 9993):   reduce expr_p1 --> 'FUN' arg 'ARROW' expr
    action 'COMMA' (explicit right 9993):   reduce expr_p1 --> 'FUN' arg 'ARROW' expr
    action 'ARROW' (explicit right 9993):   reduce expr_p1 --> 'FUN' arg 'ARROW' expr
    action 'EQUAL' (explicit right 9993):   reduce expr_p1 --> 'FUN' arg 'ARROW' expr
    action 'REFINES' (explicit right 9993):   reduce expr_p1 --> 'FUN' arg 'ARROW' expr
    action 'HOLE' (explicit right 9993):   reduce expr_p1 --> 'FUN' arg 'ARROW' expr
    action 'WITH' (explicit right 9993):   reduce expr_p1 --> 'FUN' arg 'ARROW' expr
    action 'NOT' (explicit right 9993):   reduce expr_p1 --> 'FUN' arg 'ARROW' expr
    action 'UNIT' (explicit right 9993):   reduce expr_p1 --> 'FUN' arg 'ARROW' expr
    action 'REC' (explicit right 9993):   reduce expr_p1 --> 'FUN' arg 'ARROW' expr
    action 'LET' (explicit right 9993):   reduce expr_p1 --> 'FUN' arg 'ARROW' expr
    action 'OF' (explicit right 9993):   reduce expr_p1 --> 'FUN' arg 'ARROW' expr
    action 'TYPE' (explicit right 9993):   reduce expr_p1 --> 'FUN' arg 'ARROW' expr
    action 'MATCH' (explicit right 9993):   reduce expr_p1 --> 'FUN' arg 'ARROW' expr
    action 'FUN' (explicit right 9993):   reduce expr_p1 --> 'FUN' arg 'ARROW' expr
    action 'TICK' (explicit right 9993):   reduce expr_p1 --> 'FUN' arg 'ARROW' expr
    action 'PROJ' (explicit right 9993):   reduce expr_p1 --> 'FUN' arg 'ARROW' expr
    action 'UID' (explicit right 9993):   reduce expr_p1 --> 'FUN' arg 'ARROW' expr
    action 'LID' (explicit right 9993):   reduce expr_p1 --> 'FUN' arg 'ARROW' expr
    action 'INT' (explicit right 9993):   reduce expr_p1 --> 'FUN' arg 'ARROW' expr
    action 'error' (explicit right 9993):   reduce expr_p1 --> 'FUN' arg 'ARROW' expr
    action '#' (explicit right 9993):   reduce expr_p1 --> 'FUN' arg 'ARROW' expr
    action '$$' (explicit right 9993):   reduce expr_p1 --> 'FUN' arg 'ARROW' expr

  immediate action:   reduce expr_p1 --> 'FUN' arg 'ARROW' expr
 gotos:

state 170:
  items:
    expr_p1 -> 'MATCH' . expr 'WITH' branches

  actions:
    action 'EOF' (noprec):   error
    action 'TUP' (noprec):   error
    action 'CTOR_ALONE' (noprec):   error
    action 'CTOR_ARG' (noprec):   error
    action 'P4' (noprec):   error
    action 'P3' (noprec):   error
    action 'P2' (noprec):   error
    action 'P1' (noprec):   error
    action 'OR' (noprec):   error
    action 'AND' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LBRACKET' (noprec):   shift 158
    action 'RPAREN' (noprec):   error
    action 'LPAREN' (noprec):   shift 150
    action 'PIPE' (noprec):   error
    action 'STAR' (noprec):   error
    action 'COLON' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'ARROW' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'REFINES' (noprec):   error
    action 'HOLE' (noprec):   error
    action 'WITH' (noprec):   error
    action 'NOT' (noprec):   error
    action 'UNIT' (noprec):   error
    action 'REC' (noprec):   error
    action 'LET' (noprec):   error
    action 'OF' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'MATCH' (noprec):   shift 170
    action 'FUN' (noprec):   shift 166
    action 'TICK' (noprec):   error
    action 'PROJ' (noprec):   shift 162
    action 'UID' (noprec):   shift 149
    action 'LID' (noprec):   shift 152
    action 'INT' (noprec):   shift 157
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto expr: 171
    goto expr_p2: 148
    goto expr_p1: 147
    goto app_chain: 165
    goto ctor_chain: 164

state 171:
  items:
    expr_p1 -> 'MATCH' expr . 'WITH' branches

  actions:
    action 'EOF' (noprec):   error
    action 'TUP' (noprec):   error
    action 'CTOR_ALONE' (noprec):   error
    action 'CTOR_ARG' (noprec):   error
    action 'P4' (noprec):   error
    action 'P3' (noprec):   error
    action 'P2' (noprec):   error
    action 'P1' (noprec):   error
    action 'OR' (noprec):   error
    action 'AND' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'PIPE' (noprec):   error
    action 'STAR' (noprec):   error
    action 'COLON' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'ARROW' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'REFINES' (noprec):   error
    action 'HOLE' (noprec):   error
    action 'WITH' (noprec):   shift 172
    action 'NOT' (noprec):   error
    action 'UNIT' (noprec):   error
    action 'REC' (noprec):   error
    action 'LET' (noprec):   error
    action 'OF' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'FUN' (noprec):   error
    action 'TICK' (noprec):   error
    action 'PROJ' (noprec):   error
    action 'UID' (noprec):   error
    action 'LID' (noprec):   error
    action 'INT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 172:
  items:
    expr_p1 -> 'MATCH' expr 'WITH' . branches

  actions:
    action 'EOF' (noprec):   reduce branches --> 
    action 'TUP' (noprec):   reduce branches --> 
    action 'CTOR_ALONE' (noprec):   reduce branches --> 
    action 'CTOR_ARG' (noprec):   reduce branches --> 
    action 'P4' (noprec):   reduce branches --> 
    action 'P3' (noprec):   reduce branches --> 
    action 'P2' (noprec):   reduce branches --> 
    action 'P1' (noprec):   reduce branches --> 
    action 'OR' (noprec):   reduce branches --> 
    action 'AND' (noprec):   reduce branches --> 
    action 'SEMI' (noprec):   reduce branches --> 
    action 'RBRACKET' (noprec):   reduce branches --> 
    action 'LBRACKET' (noprec):   reduce branches --> 
    action 'RPAREN' (noprec):   reduce branches --> 
    action 'LPAREN' (noprec):   reduce branches --> 
    action 'PIPE' (noprec):   reduce branches --> 
    action 'STAR' (noprec):   reduce branches --> 
    action 'COLON' (noprec):   reduce branches --> 
    action 'COMMA' (noprec):   reduce branches --> 
    action 'ARROW' (noprec):   reduce branches --> 
    action 'EQUAL' (noprec):   reduce branches --> 
    action 'REFINES' (noprec):   reduce branches --> 
    action 'HOLE' (noprec):   reduce branches --> 
    action 'WITH' (noprec):   reduce branches --> 
    action 'NOT' (noprec):   reduce branches --> 
    action 'UNIT' (noprec):   reduce branches --> 
    action 'REC' (noprec):   reduce branches --> 
    action 'LET' (noprec):   reduce branches --> 
    action 'OF' (noprec):   reduce branches --> 
    action 'TYPE' (noprec):   reduce branches --> 
    action 'MATCH' (noprec):   reduce branches --> 
    action 'FUN' (noprec):   reduce branches --> 
    action 'TICK' (noprec):   reduce branches --> 
    action 'PROJ' (noprec):   reduce branches --> 
    action 'UID' (noprec):   reduce branches --> 
    action 'LID' (noprec):   reduce branches --> 
    action 'INT' (noprec):   reduce branches --> 
    action 'error' (noprec):   reduce branches --> 
    action '#' (noprec):   reduce branches --> 
    action '$$' (noprec):   reduce branches --> 

  immediate action: <none>
 gotos:
    goto branches: 173

state 173:
  items:
    expr_p1 -> 'MATCH' expr 'WITH' branches . 
    branches -> branches . branch

  actions:
    action 'EOF' (noprec):   reduce expr_p1 --> 'MATCH' expr 'WITH' branches
    action 'TUP' (noprec):   reduce expr_p1 --> 'MATCH' expr 'WITH' branches
    action 'CTOR_ALONE' (noprec):   reduce expr_p1 --> 'MATCH' expr 'WITH' branches
    action 'CTOR_ARG' (noprec):   reduce expr_p1 --> 'MATCH' expr 'WITH' branches
    action 'P4' (noprec):   reduce expr_p1 --> 'MATCH' expr 'WITH' branches
    action 'P3' (noprec):   reduce expr_p1 --> 'MATCH' expr 'WITH' branches
    action 'P2' (noprec):   reduce expr_p1 --> 'MATCH' expr 'WITH' branches
    action 'P1' (noprec):   reduce expr_p1 --> 'MATCH' expr 'WITH' branches
    action 'OR' (noprec):   reduce expr_p1 --> 'MATCH' expr 'WITH' branches
    action 'AND' (noprec):   reduce expr_p1 --> 'MATCH' expr 'WITH' branches
    action 'SEMI' (noprec):   reduce expr_p1 --> 'MATCH' expr 'WITH' branches
    action 'RBRACKET' (noprec):   reduce expr_p1 --> 'MATCH' expr 'WITH' branches
    action 'LBRACKET' (noprec):   reduce expr_p1 --> 'MATCH' expr 'WITH' branches
    action 'RPAREN' (noprec):   reduce expr_p1 --> 'MATCH' expr 'WITH' branches
    action 'LPAREN' (noprec):   reduce expr_p1 --> 'MATCH' expr 'WITH' branches
    action 'PIPE' (noprec):   shift 180
    action 'STAR' (noprec):   reduce expr_p1 --> 'MATCH' expr 'WITH' branches
    action 'COLON' (noprec):   reduce expr_p1 --> 'MATCH' expr 'WITH' branches
    action 'COMMA' (noprec):   reduce expr_p1 --> 'MATCH' expr 'WITH' branches
    action 'ARROW' (noprec):   reduce expr_p1 --> 'MATCH' expr 'WITH' branches
    action 'EQUAL' (noprec):   reduce expr_p1 --> 'MATCH' expr 'WITH' branches
    action 'REFINES' (noprec):   reduce expr_p1 --> 'MATCH' expr 'WITH' branches
    action 'HOLE' (noprec):   reduce expr_p1 --> 'MATCH' expr 'WITH' branches
    action 'WITH' (noprec):   reduce expr_p1 --> 'MATCH' expr 'WITH' branches
    action 'NOT' (noprec):   reduce expr_p1 --> 'MATCH' expr 'WITH' branches
    action 'UNIT' (noprec):   reduce expr_p1 --> 'MATCH' expr 'WITH' branches
    action 'REC' (noprec):   reduce expr_p1 --> 'MATCH' expr 'WITH' branches
    action 'LET' (noprec):   reduce expr_p1 --> 'MATCH' expr 'WITH' branches
    action 'OF' (noprec):   reduce expr_p1 --> 'MATCH' expr 'WITH' branches
    action 'TYPE' (noprec):   reduce expr_p1 --> 'MATCH' expr 'WITH' branches
    action 'MATCH' (noprec):   reduce expr_p1 --> 'MATCH' expr 'WITH' branches
    action 'FUN' (noprec):   reduce expr_p1 --> 'MATCH' expr 'WITH' branches
    action 'TICK' (noprec):   reduce expr_p1 --> 'MATCH' expr 'WITH' branches
    action 'PROJ' (noprec):   reduce expr_p1 --> 'MATCH' expr 'WITH' branches
    action 'UID' (noprec):   reduce expr_p1 --> 'MATCH' expr 'WITH' branches
    action 'LID' (noprec):   reduce expr_p1 --> 'MATCH' expr 'WITH' branches
    action 'INT' (noprec):   reduce expr_p1 --> 'MATCH' expr 'WITH' branches
    action 'error' (noprec):   reduce expr_p1 --> 'MATCH' expr 'WITH' branches
    action '#' (noprec):   reduce expr_p1 --> 'MATCH' expr 'WITH' branches
    action '$$' (noprec):   reduce expr_p1 --> 'MATCH' expr 'WITH' branches

  immediate action: <none>
 gotos:
    goto branch: 179

state 174:
  items:
    app_chain -> expr_p2 expr_p2 . 

  actions:
    action 'EOF' (noprec):   reduce app_chain --> expr_p2 expr_p2
    action 'TUP' (noprec):   reduce app_chain --> expr_p2 expr_p2
    action 'CTOR_ALONE' (noprec):   reduce app_chain --> expr_p2 expr_p2
    action 'CTOR_ARG' (noprec):   reduce app_chain --> expr_p2 expr_p2
    action 'P4' (noprec):   reduce app_chain --> expr_p2 expr_p2
    action 'P3' (noprec):   reduce app_chain --> expr_p2 expr_p2
    action 'P2' (noprec):   reduce app_chain --> expr_p2 expr_p2
    action 'P1' (noprec):   reduce app_chain --> expr_p2 expr_p2
    action 'OR' (noprec):   reduce app_chain --> expr_p2 expr_p2
    action 'AND' (noprec):   reduce app_chain --> expr_p2 expr_p2
    action 'SEMI' (noprec):   reduce app_chain --> expr_p2 expr_p2
    action 'RBRACKET' (noprec):   reduce app_chain --> expr_p2 expr_p2
    action 'LBRACKET' (noprec):   reduce app_chain --> expr_p2 expr_p2
    action 'RPAREN' (noprec):   reduce app_chain --> expr_p2 expr_p2
    action 'LPAREN' (noprec):   reduce app_chain --> expr_p2 expr_p2
    action 'PIPE' (noprec):   reduce app_chain --> expr_p2 expr_p2
    action 'STAR' (noprec):   reduce app_chain --> expr_p2 expr_p2
    action 'COLON' (noprec):   reduce app_chain --> expr_p2 expr_p2
    action 'COMMA' (noprec):   reduce app_chain --> expr_p2 expr_p2
    action 'ARROW' (noprec):   reduce app_chain --> expr_p2 expr_p2
    action 'EQUAL' (noprec):   reduce app_chain --> expr_p2 expr_p2
    action 'REFINES' (noprec):   reduce app_chain --> expr_p2 expr_p2
    action 'HOLE' (noprec):   reduce app_chain --> expr_p2 expr_p2
    action 'WITH' (noprec):   reduce app_chain --> expr_p2 expr_p2
    action 'NOT' (noprec):   reduce app_chain --> expr_p2 expr_p2
    action 'UNIT' (noprec):   reduce app_chain --> expr_p2 expr_p2
    action 'REC' (noprec):   reduce app_chain --> expr_p2 expr_p2
    action 'LET' (noprec):   reduce app_chain --> expr_p2 expr_p2
    action 'OF' (noprec):   reduce app_chain --> expr_p2 expr_p2
    action 'TYPE' (noprec):   reduce app_chain --> expr_p2 expr_p2
    action 'MATCH' (noprec):   reduce app_chain --> expr_p2 expr_p2
    action 'FUN' (noprec):   reduce app_chain --> expr_p2 expr_p2
    action 'TICK' (noprec):   reduce app_chain --> expr_p2 expr_p2
    action 'PROJ' (noprec):   reduce app_chain --> expr_p2 expr_p2
    action 'UID' (noprec):   reduce app_chain --> expr_p2 expr_p2
    action 'LID' (noprec):   reduce app_chain --> expr_p2 expr_p2
    action 'INT' (noprec):   reduce app_chain --> expr_p2 expr_p2
    action 'error' (noprec):   reduce app_chain --> expr_p2 expr_p2
    action '#' (noprec):   reduce app_chain --> expr_p2 expr_p2
    action '$$' (noprec):   reduce app_chain --> expr_p2 expr_p2

  immediate action:   reduce app_chain --> expr_p2 expr_p2
 gotos:

state 175:
  items:
    app_chain -> app_chain expr_p2 . 

  actions:
    action 'EOF' (noprec):   reduce app_chain --> app_chain expr_p2
    action 'TUP' (noprec):   reduce app_chain --> app_chain expr_p2
    action 'CTOR_ALONE' (noprec):   reduce app_chain --> app_chain expr_p2
    action 'CTOR_ARG' (noprec):   reduce app_chain --> app_chain expr_p2
    action 'P4' (noprec):   reduce app_chain --> app_chain expr_p2
    action 'P3' (noprec):   reduce app_chain --> app_chain expr_p2
    action 'P2' (noprec):   reduce app_chain --> app_chain expr_p2
    action 'P1' (noprec):   reduce app_chain --> app_chain expr_p2
    action 'OR' (noprec):   reduce app_chain --> app_chain expr_p2
    action 'AND' (noprec):   reduce app_chain --> app_chain expr_p2
    action 'SEMI' (noprec):   reduce app_chain --> app_chain expr_p2
    action 'RBRACKET' (noprec):   reduce app_chain --> app_chain expr_p2
    action 'LBRACKET' (noprec):   reduce app_chain --> app_chain expr_p2
    action 'RPAREN' (noprec):   reduce app_chain --> app_chain expr_p2
    action 'LPAREN' (noprec):   reduce app_chain --> app_chain expr_p2
    action 'PIPE' (noprec):   reduce app_chain --> app_chain expr_p2
    action 'STAR' (noprec):   reduce app_chain --> app_chain expr_p2
    action 'COLON' (noprec):   reduce app_chain --> app_chain expr_p2
    action 'COMMA' (noprec):   reduce app_chain --> app_chain expr_p2
    action 'ARROW' (noprec):   reduce app_chain --> app_chain expr_p2
    action 'EQUAL' (noprec):   reduce app_chain --> app_chain expr_p2
    action 'REFINES' (noprec):   reduce app_chain --> app_chain expr_p2
    action 'HOLE' (noprec):   reduce app_chain --> app_chain expr_p2
    action 'WITH' (noprec):   reduce app_chain --> app_chain expr_p2
    action 'NOT' (noprec):   reduce app_chain --> app_chain expr_p2
    action 'UNIT' (noprec):   reduce app_chain --> app_chain expr_p2
    action 'REC' (noprec):   reduce app_chain --> app_chain expr_p2
    action 'LET' (noprec):   reduce app_chain --> app_chain expr_p2
    action 'OF' (noprec):   reduce app_chain --> app_chain expr_p2
    action 'TYPE' (noprec):   reduce app_chain --> app_chain expr_p2
    action 'MATCH' (noprec):   reduce app_chain --> app_chain expr_p2
    action 'FUN' (noprec):   reduce app_chain --> app_chain expr_p2
    action 'TICK' (noprec):   reduce app_chain --> app_chain expr_p2
    action 'PROJ' (noprec):   reduce app_chain --> app_chain expr_p2
    action 'UID' (noprec):   reduce app_chain --> app_chain expr_p2
    action 'LID' (noprec):   reduce app_chain --> app_chain expr_p2
    action 'INT' (noprec):   reduce app_chain --> app_chain expr_p2
    action 'error' (noprec):   reduce app_chain --> app_chain expr_p2
    action '#' (noprec):   reduce app_chain --> app_chain expr_p2
    action '$$' (noprec):   reduce app_chain --> app_chain expr_p2

  immediate action:   reduce app_chain --> app_chain expr_p2
 gotos:

state 176:
  items:
    ctor_chain -> 'UID' . 'UID'
    ctor_chain -> 'UID' 'UID' . 
    ctor_chain -> 'UID' . expr_p2
    ctor_chain -> 'UID' . ctor_chain

  actions:
    action 'EOF' (noprec):   reduce ctor_chain --> 'UID' 'UID'
    action 'TUP' (noprec):   reduce ctor_chain --> 'UID' 'UID'
    action 'CTOR_ALONE' (noprec):   reduce ctor_chain --> 'UID' 'UID'
    action 'CTOR_ARG' (noprec):   reduce ctor_chain --> 'UID' 'UID'
    action 'P4' (noprec):   reduce ctor_chain --> 'UID' 'UID'
    action 'P3' (noprec):   reduce ctor_chain --> 'UID' 'UID'
    action 'P2' (noprec):   reduce ctor_chain --> 'UID' 'UID'
    action 'P1' (noprec):   reduce ctor_chain --> 'UID' 'UID'
    action 'OR' (noprec):   reduce ctor_chain --> 'UID' 'UID'
    action 'AND' (noprec):   reduce ctor_chain --> 'UID' 'UID'
    action 'SEMI' (noprec):   reduce ctor_chain --> 'UID' 'UID'
    action 'RBRACKET' (noprec):   reduce ctor_chain --> 'UID' 'UID'
    action 'LBRACKET' (noprec):   shift 158
    action 'RPAREN' (noprec):   reduce ctor_chain --> 'UID' 'UID'
    action 'LPAREN' (noprec):   shift 150
    action 'PIPE' (noprec):   reduce ctor_chain --> 'UID' 'UID'
    action 'STAR' (noprec):   reduce ctor_chain --> 'UID' 'UID'
    action 'COLON' (noprec):   reduce ctor_chain --> 'UID' 'UID'
    action 'COMMA' (noprec):   reduce ctor_chain --> 'UID' 'UID'
    action 'ARROW' (noprec):   reduce ctor_chain --> 'UID' 'UID'
    action 'EQUAL' (noprec):   reduce ctor_chain --> 'UID' 'UID'
    action 'REFINES' (noprec):   reduce ctor_chain --> 'UID' 'UID'
    action 'HOLE' (noprec):   reduce ctor_chain --> 'UID' 'UID'
    action 'WITH' (noprec):   reduce ctor_chain --> 'UID' 'UID'
    action 'NOT' (noprec):   reduce ctor_chain --> 'UID' 'UID'
    action 'UNIT' (noprec):   reduce ctor_chain --> 'UID' 'UID'
    action 'REC' (noprec):   reduce ctor_chain --> 'UID' 'UID'
    action 'LET' (noprec):   reduce ctor_chain --> 'UID' 'UID'
    action 'OF' (noprec):   reduce ctor_chain --> 'UID' 'UID'
    action 'TYPE' (noprec):   reduce ctor_chain --> 'UID' 'UID'
    action 'MATCH' (noprec):   reduce ctor_chain --> 'UID' 'UID'
    action 'FUN' (noprec):   reduce ctor_chain --> 'UID' 'UID'
    action 'TICK' (noprec):   reduce ctor_chain --> 'UID' 'UID'
    action 'PROJ' (noprec):   reduce ctor_chain --> 'UID' 'UID'
    action 'UID' (noprec):   shift 176
    action 'LID' (noprec):   shift 152
    action 'INT' (noprec):   shift 157
    action 'error' (noprec):   reduce ctor_chain --> 'UID' 'UID'
    action '#' (noprec):   reduce ctor_chain --> 'UID' 'UID'
    action '$$' (noprec):   reduce ctor_chain --> 'UID' 'UID'

  immediate action: <none>
 gotos:
    goto expr_p2: 177
    goto ctor_chain: 178

state 177:
  items:
    ctor_chain -> 'UID' expr_p2 . 

  actions:
    action 'EOF' (noprec):   reduce ctor_chain --> 'UID' expr_p2
    action 'TUP' (noprec):   reduce ctor_chain --> 'UID' expr_p2
    action 'CTOR_ALONE' (noprec):   reduce ctor_chain --> 'UID' expr_p2
    action 'CTOR_ARG' (noprec):   reduce ctor_chain --> 'UID' expr_p2
    action 'P4' (noprec):   reduce ctor_chain --> 'UID' expr_p2
    action 'P3' (noprec):   reduce ctor_chain --> 'UID' expr_p2
    action 'P2' (noprec):   reduce ctor_chain --> 'UID' expr_p2
    action 'P1' (noprec):   reduce ctor_chain --> 'UID' expr_p2
    action 'OR' (noprec):   reduce ctor_chain --> 'UID' expr_p2
    action 'AND' (noprec):   reduce ctor_chain --> 'UID' expr_p2
    action 'SEMI' (noprec):   reduce ctor_chain --> 'UID' expr_p2
    action 'RBRACKET' (noprec):   reduce ctor_chain --> 'UID' expr_p2
    action 'LBRACKET' (noprec):   reduce ctor_chain --> 'UID' expr_p2
    action 'RPAREN' (noprec):   reduce ctor_chain --> 'UID' expr_p2
    action 'LPAREN' (noprec):   reduce ctor_chain --> 'UID' expr_p2
    action 'PIPE' (noprec):   reduce ctor_chain --> 'UID' expr_p2
    action 'STAR' (noprec):   reduce ctor_chain --> 'UID' expr_p2
    action 'COLON' (noprec):   reduce ctor_chain --> 'UID' expr_p2
    action 'COMMA' (noprec):   reduce ctor_chain --> 'UID' expr_p2
    action 'ARROW' (noprec):   reduce ctor_chain --> 'UID' expr_p2
    action 'EQUAL' (noprec):   reduce ctor_chain --> 'UID' expr_p2
    action 'REFINES' (noprec):   reduce ctor_chain --> 'UID' expr_p2
    action 'HOLE' (noprec):   reduce ctor_chain --> 'UID' expr_p2
    action 'WITH' (noprec):   reduce ctor_chain --> 'UID' expr_p2
    action 'NOT' (noprec):   reduce ctor_chain --> 'UID' expr_p2
    action 'UNIT' (noprec):   reduce ctor_chain --> 'UID' expr_p2
    action 'REC' (noprec):   reduce ctor_chain --> 'UID' expr_p2
    action 'LET' (noprec):   reduce ctor_chain --> 'UID' expr_p2
    action 'OF' (noprec):   reduce ctor_chain --> 'UID' expr_p2
    action 'TYPE' (noprec):   reduce ctor_chain --> 'UID' expr_p2
    action 'MATCH' (noprec):   reduce ctor_chain --> 'UID' expr_p2
    action 'FUN' (noprec):   reduce ctor_chain --> 'UID' expr_p2
    action 'TICK' (noprec):   reduce ctor_chain --> 'UID' expr_p2
    action 'PROJ' (noprec):   reduce ctor_chain --> 'UID' expr_p2
    action 'UID' (noprec):   reduce ctor_chain --> 'UID' expr_p2
    action 'LID' (noprec):   reduce ctor_chain --> 'UID' expr_p2
    action 'INT' (noprec):   reduce ctor_chain --> 'UID' expr_p2
    action 'error' (noprec):   reduce ctor_chain --> 'UID' expr_p2
    action '#' (noprec):   reduce ctor_chain --> 'UID' expr_p2
    action '$$' (noprec):   reduce ctor_chain --> 'UID' expr_p2

  immediate action:   reduce ctor_chain --> 'UID' expr_p2
 gotos:

state 178:
  items:
    ctor_chain -> 'UID' ctor_chain . 

  actions:
    action 'EOF' (noprec):   reduce ctor_chain --> 'UID' ctor_chain
    action 'TUP' (noprec):   reduce ctor_chain --> 'UID' ctor_chain
    action 'CTOR_ALONE' (noprec):   reduce ctor_chain --> 'UID' ctor_chain
    action 'CTOR_ARG' (noprec):   reduce ctor_chain --> 'UID' ctor_chain
    action 'P4' (noprec):   reduce ctor_chain --> 'UID' ctor_chain
    action 'P3' (noprec):   reduce ctor_chain --> 'UID' ctor_chain
    action 'P2' (noprec):   reduce ctor_chain --> 'UID' ctor_chain
    action 'P1' (noprec):   reduce ctor_chain --> 'UID' ctor_chain
    action 'OR' (noprec):   reduce ctor_chain --> 'UID' ctor_chain
    action 'AND' (noprec):   reduce ctor_chain --> 'UID' ctor_chain
    action 'SEMI' (noprec):   reduce ctor_chain --> 'UID' ctor_chain
    action 'RBRACKET' (noprec):   reduce ctor_chain --> 'UID' ctor_chain
    action 'LBRACKET' (noprec):   reduce ctor_chain --> 'UID' ctor_chain
    action 'RPAREN' (noprec):   reduce ctor_chain --> 'UID' ctor_chain
    action 'LPAREN' (noprec):   reduce ctor_chain --> 'UID' ctor_chain
    action 'PIPE' (noprec):   reduce ctor_chain --> 'UID' ctor_chain
    action 'STAR' (noprec):   reduce ctor_chain --> 'UID' ctor_chain
    action 'COLON' (noprec):   reduce ctor_chain --> 'UID' ctor_chain
    action 'COMMA' (noprec):   reduce ctor_chain --> 'UID' ctor_chain
    action 'ARROW' (noprec):   reduce ctor_chain --> 'UID' ctor_chain
    action 'EQUAL' (noprec):   reduce ctor_chain --> 'UID' ctor_chain
    action 'REFINES' (noprec):   reduce ctor_chain --> 'UID' ctor_chain
    action 'HOLE' (noprec):   reduce ctor_chain --> 'UID' ctor_chain
    action 'WITH' (noprec):   reduce ctor_chain --> 'UID' ctor_chain
    action 'NOT' (noprec):   reduce ctor_chain --> 'UID' ctor_chain
    action 'UNIT' (noprec):   reduce ctor_chain --> 'UID' ctor_chain
    action 'REC' (noprec):   reduce ctor_chain --> 'UID' ctor_chain
    action 'LET' (noprec):   reduce ctor_chain --> 'UID' ctor_chain
    action 'OF' (noprec):   reduce ctor_chain --> 'UID' ctor_chain
    action 'TYPE' (noprec):   reduce ctor_chain --> 'UID' ctor_chain
    action 'MATCH' (noprec):   reduce ctor_chain --> 'UID' ctor_chain
    action 'FUN' (noprec):   reduce ctor_chain --> 'UID' ctor_chain
    action 'TICK' (noprec):   reduce ctor_chain --> 'UID' ctor_chain
    action 'PROJ' (noprec):   reduce ctor_chain --> 'UID' ctor_chain
    action 'UID' (noprec):   reduce ctor_chain --> 'UID' ctor_chain
    action 'LID' (noprec):   reduce ctor_chain --> 'UID' ctor_chain
    action 'INT' (noprec):   reduce ctor_chain --> 'UID' ctor_chain
    action 'error' (noprec):   reduce ctor_chain --> 'UID' ctor_chain
    action '#' (noprec):   reduce ctor_chain --> 'UID' ctor_chain
    action '$$' (noprec):   reduce ctor_chain --> 'UID' ctor_chain

  immediate action:   reduce ctor_chain --> 'UID' ctor_chain
 gotos:

state 179:
  items:
    branches -> branches branch . 

  actions:
    action 'EOF' (noprec):   reduce branches --> branches branch
    action 'TUP' (noprec):   reduce branches --> branches branch
    action 'CTOR_ALONE' (noprec):   reduce branches --> branches branch
    action 'CTOR_ARG' (noprec):   reduce branches --> branches branch
    action 'P4' (noprec):   reduce branches --> branches branch
    action 'P3' (noprec):   reduce branches --> branches branch
    action 'P2' (noprec):   reduce branches --> branches branch
    action 'P1' (noprec):   reduce branches --> branches branch
    action 'OR' (noprec):   reduce branches --> branches branch
    action 'AND' (noprec):   reduce branches --> branches branch
    action 'SEMI' (noprec):   reduce branches --> branches branch
    action 'RBRACKET' (noprec):   reduce branches --> branches branch
    action 'LBRACKET' (noprec):   reduce branches --> branches branch
    action 'RPAREN' (noprec):   reduce branches --> branches branch
    action 'LPAREN' (noprec):   reduce branches --> branches branch
    action 'PIPE' (noprec):   reduce branches --> branches branch
    action 'STAR' (noprec):   reduce branches --> branches branch
    action 'COLON' (noprec):   reduce branches --> branches branch
    action 'COMMA' (noprec):   reduce branches --> branches branch
    action 'ARROW' (noprec):   reduce branches --> branches branch
    action 'EQUAL' (noprec):   reduce branches --> branches branch
    action 'REFINES' (noprec):   reduce branches --> branches branch
    action 'HOLE' (noprec):   reduce branches --> branches branch
    action 'WITH' (noprec):   reduce branches --> branches branch
    action 'NOT' (noprec):   reduce branches --> branches branch
    action 'UNIT' (noprec):   reduce branches --> branches branch
    action 'REC' (noprec):   reduce branches --> branches branch
    action 'LET' (noprec):   reduce branches --> branches branch
    action 'OF' (noprec):   reduce branches --> branches branch
    action 'TYPE' (noprec):   reduce branches --> branches branch
    action 'MATCH' (noprec):   reduce branches --> branches branch
    action 'FUN' (noprec):   reduce branches --> branches branch
    action 'TICK' (noprec):   reduce branches --> branches branch
    action 'PROJ' (noprec):   reduce branches --> branches branch
    action 'UID' (noprec):   reduce branches --> branches branch
    action 'LID' (noprec):   reduce branches --> branches branch
    action 'INT' (noprec):   reduce branches --> branches branch
    action 'error' (noprec):   reduce branches --> branches branch
    action '#' (noprec):   reduce branches --> branches branch
    action '$$' (noprec):   reduce branches --> branches branch

  immediate action:   reduce branches --> branches branch
 gotos:

state 180:
  items:
    branch -> 'PIPE' . 'UID' 'LID' 'ARROW' expr

  actions:
    action 'EOF' (noprec):   error
    action 'TUP' (noprec):   error
    action 'CTOR_ALONE' (noprec):   error
    action 'CTOR_ARG' (noprec):   error
    action 'P4' (noprec):   error
    action 'P3' (noprec):   error
    action 'P2' (noprec):   error
    action 'P1' (noprec):   error
    action 'OR' (noprec):   error
    action 'AND' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'PIPE' (noprec):   error
    action 'STAR' (noprec):   error
    action 'COLON' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'ARROW' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'REFINES' (noprec):   error
    action 'HOLE' (noprec):   error
    action 'WITH' (noprec):   error
    action 'NOT' (noprec):   error
    action 'UNIT' (noprec):   error
    action 'REC' (noprec):   error
    action 'LET' (noprec):   error
    action 'OF' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'FUN' (noprec):   error
    action 'TICK' (noprec):   error
    action 'PROJ' (noprec):   error
    action 'UID' (noprec):   shift 181
    action 'LID' (noprec):   error
    action 'INT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 181:
  items:
    branch -> 'PIPE' 'UID' . 'LID' 'ARROW' expr

  actions:
    action 'EOF' (noprec):   error
    action 'TUP' (noprec):   error
    action 'CTOR_ALONE' (noprec):   error
    action 'CTOR_ARG' (noprec):   error
    action 'P4' (noprec):   error
    action 'P3' (noprec):   error
    action 'P2' (noprec):   error
    action 'P1' (noprec):   error
    action 'OR' (noprec):   error
    action 'AND' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'PIPE' (noprec):   error
    action 'STAR' (noprec):   error
    action 'COLON' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'ARROW' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'REFINES' (noprec):   error
    action 'HOLE' (noprec):   error
    action 'WITH' (noprec):   error
    action 'NOT' (noprec):   error
    action 'UNIT' (noprec):   error
    action 'REC' (noprec):   error
    action 'LET' (noprec):   error
    action 'OF' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'FUN' (noprec):   error
    action 'TICK' (noprec):   error
    action 'PROJ' (noprec):   error
    action 'UID' (noprec):   error
    action 'LID' (noprec):   shift 182
    action 'INT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 182:
  items:
    branch -> 'PIPE' 'UID' 'LID' . 'ARROW' expr

  actions:
    action 'EOF' (noprec):   error
    action 'TUP' (noprec):   error
    action 'CTOR_ALONE' (noprec):   error
    action 'CTOR_ARG' (noprec):   error
    action 'P4' (noprec):   error
    action 'P3' (noprec):   error
    action 'P2' (noprec):   error
    action 'P1' (noprec):   error
    action 'OR' (noprec):   error
    action 'AND' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'PIPE' (noprec):   error
    action 'STAR' (noprec):   error
    action 'COLON' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'ARROW' (explicit right 9993):   shift 183
    action 'EQUAL' (noprec):   error
    action 'REFINES' (noprec):   error
    action 'HOLE' (noprec):   error
    action 'WITH' (noprec):   error
    action 'NOT' (noprec):   error
    action 'UNIT' (noprec):   error
    action 'REC' (noprec):   error
    action 'LET' (noprec):   error
    action 'OF' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'FUN' (noprec):   error
    action 'TICK' (noprec):   error
    action 'PROJ' (noprec):   error
    action 'UID' (noprec):   error
    action 'LID' (noprec):   error
    action 'INT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 183:
  items:
    branch -> 'PIPE' 'UID' 'LID' 'ARROW' . expr

  actions:
    action 'EOF' (noprec):   error
    action 'TUP' (noprec):   error
    action 'CTOR_ALONE' (noprec):   error
    action 'CTOR_ARG' (noprec):   error
    action 'P4' (noprec):   error
    action 'P3' (noprec):   error
    action 'P2' (noprec):   error
    action 'P1' (noprec):   error
    action 'OR' (noprec):   error
    action 'AND' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LBRACKET' (noprec):   shift 158
    action 'RPAREN' (noprec):   error
    action 'LPAREN' (noprec):   shift 150
    action 'PIPE' (noprec):   error
    action 'STAR' (noprec):   error
    action 'COLON' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'ARROW' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'REFINES' (noprec):   error
    action 'HOLE' (noprec):   error
    action 'WITH' (noprec):   error
    action 'NOT' (noprec):   error
    action 'UNIT' (noprec):   error
    action 'REC' (noprec):   error
    action 'LET' (noprec):   error
    action 'OF' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'MATCH' (noprec):   shift 170
    action 'FUN' (noprec):   shift 166
    action 'TICK' (noprec):   error
    action 'PROJ' (noprec):   shift 162
    action 'UID' (noprec):   shift 149
    action 'LID' (noprec):   shift 152
    action 'INT' (noprec):   shift 157
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto expr: 184
    goto expr_p2: 148
    goto expr_p1: 147
    goto app_chain: 165
    goto ctor_chain: 164

state 184:
  items:
    branch -> 'PIPE' 'UID' 'LID' 'ARROW' expr . 

  actions:
    action 'EOF' (explicit right 9993):   reduce branch --> 'PIPE' 'UID' 'LID' 'ARROW' expr
    action 'TUP' (explicit right 9993):   reduce branch --> 'PIPE' 'UID' 'LID' 'ARROW' expr
    action 'CTOR_ALONE' (explicit right 9993):   reduce branch --> 'PIPE' 'UID' 'LID' 'ARROW' expr
    action 'CTOR_ARG' (explicit right 9993):   reduce branch --> 'PIPE' 'UID' 'LID' 'ARROW' expr
    action 'P4' (explicit right 9993):   reduce branch --> 'PIPE' 'UID' 'LID' 'ARROW' expr
    action 'P3' (explicit right 9993):   reduce branch --> 'PIPE' 'UID' 'LID' 'ARROW' expr
    action 'P2' (explicit right 9993):   reduce branch --> 'PIPE' 'UID' 'LID' 'ARROW' expr
    action 'P1' (explicit right 9993):   reduce branch --> 'PIPE' 'UID' 'LID' 'ARROW' expr
    action 'OR' (explicit right 9993):   reduce branch --> 'PIPE' 'UID' 'LID' 'ARROW' expr
    action 'AND' (explicit right 9993):   reduce branch --> 'PIPE' 'UID' 'LID' 'ARROW' expr
    action 'SEMI' (explicit right 9993):   reduce branch --> 'PIPE' 'UID' 'LID' 'ARROW' expr
    action 'RBRACKET' (explicit right 9993):   reduce branch --> 'PIPE' 'UID' 'LID' 'ARROW' expr
    action 'LBRACKET' (explicit right 9993):   reduce branch --> 'PIPE' 'UID' 'LID' 'ARROW' expr
    action 'RPAREN' (explicit right 9993):   reduce branch --> 'PIPE' 'UID' 'LID' 'ARROW' expr
    action 'LPAREN' (explicit right 9993):   reduce branch --> 'PIPE' 'UID' 'LID' 'ARROW' expr
    action 'PIPE' (explicit right 9993):   reduce branch --> 'PIPE' 'UID' 'LID' 'ARROW' expr
    action 'STAR' (explicit right 9993):   reduce branch --> 'PIPE' 'UID' 'LID' 'ARROW' expr
    action 'COLON' (explicit right 9993):   reduce branch --> 'PIPE' 'UID' 'LID' 'ARROW' expr
    action 'COMMA' (explicit right 9993):   reduce branch --> 'PIPE' 'UID' 'LID' 'ARROW' expr
    action 'ARROW' (explicit right 9993):   reduce branch --> 'PIPE' 'UID' 'LID' 'ARROW' expr
    action 'EQUAL' (explicit right 9993):   reduce branch --> 'PIPE' 'UID' 'LID' 'ARROW' expr
    action 'REFINES' (explicit right 9993):   reduce branch --> 'PIPE' 'UID' 'LID' 'ARROW' expr
    action 'HOLE' (explicit right 9993):   reduce branch --> 'PIPE' 'UID' 'LID' 'ARROW' expr
    action 'WITH' (explicit right 9993):   reduce branch --> 'PIPE' 'UID' 'LID' 'ARROW' expr
    action 'NOT' (explicit right 9993):   reduce branch --> 'PIPE' 'UID' 'LID' 'ARROW' expr
    action 'UNIT' (explicit right 9993):   reduce branch --> 'PIPE' 'UID' 'LID' 'ARROW' expr
    action 'REC' (explicit right 9993):   reduce branch --> 'PIPE' 'UID' 'LID' 'ARROW' expr
    action 'LET' (explicit right 9993):   reduce branch --> 'PIPE' 'UID' 'LID' 'ARROW' expr
    action 'OF' (explicit right 9993):   reduce branch --> 'PIPE' 'UID' 'LID' 'ARROW' expr
    action 'TYPE' (explicit right 9993):   reduce branch --> 'PIPE' 'UID' 'LID' 'ARROW' expr
    action 'MATCH' (explicit right 9993):   reduce branch --> 'PIPE' 'UID' 'LID' 'ARROW' expr
    action 'FUN' (explicit right 9993):   reduce branch --> 'PIPE' 'UID' 'LID' 'ARROW' expr
    action 'TICK' (explicit right 9993):   reduce branch --> 'PIPE' 'UID' 'LID' 'ARROW' expr
    action 'PROJ' (explicit right 9993):   reduce branch --> 'PIPE' 'UID' 'LID' 'ARROW' expr
    action 'UID' (explicit right 9993):   reduce branch --> 'PIPE' 'UID' 'LID' 'ARROW' expr
    action 'LID' (explicit right 9993):   reduce branch --> 'PIPE' 'UID' 'LID' 'ARROW' expr
    action 'INT' (explicit right 9993):   reduce branch --> 'PIPE' 'UID' 'LID' 'ARROW' expr
    action 'error' (explicit right 9993):   reduce branch --> 'PIPE' 'UID' 'LID' 'ARROW' expr
    action '#' (explicit right 9993):   reduce branch --> 'PIPE' 'UID' 'LID' 'ARROW' expr
    action '$$' (explicit right 9993):   reduce branch --> 'PIPE' 'UID' 'LID' 'ARROW' expr

  immediate action:   reduce branch --> 'PIPE' 'UID' 'LID' 'ARROW' expr
 gotos:

state 185:
  items:
    expr_comma_one -> expr_comma . 'COMMA' expr
    expr_comma -> expr_comma . 'COMMA' expr

  actions:
    action 'EOF' (noprec):   error
    action 'TUP' (noprec):   error
    action 'CTOR_ALONE' (noprec):   error
    action 'CTOR_ARG' (noprec):   error
    action 'P4' (noprec):   error
    action 'P3' (noprec):   error
    action 'P2' (noprec):   error
    action 'P1' (noprec):   error
    action 'OR' (noprec):   error
    action 'AND' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'PIPE' (noprec):   error
    action 'STAR' (noprec):   error
    action 'COLON' (noprec):   error
    action 'COMMA' (noprec):   shift 186
    action 'ARROW' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'REFINES' (noprec):   error
    action 'HOLE' (noprec):   error
    action 'WITH' (noprec):   error
    action 'NOT' (noprec):   error
    action 'UNIT' (noprec):   error
    action 'REC' (noprec):   error
    action 'LET' (noprec):   error
    action 'OF' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'MATCH' (noprec):   error
    action 'FUN' (noprec):   error
    action 'TICK' (noprec):   error
    action 'PROJ' (noprec):   error
    action 'UID' (noprec):   error
    action 'LID' (noprec):   error
    action 'INT' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:

state 186:
  items:
    expr_comma_one -> expr_comma 'COMMA' . expr
    expr_comma -> expr_comma 'COMMA' . expr

  actions:
    action 'EOF' (noprec):   error
    action 'TUP' (noprec):   error
    action 'CTOR_ALONE' (noprec):   error
    action 'CTOR_ARG' (noprec):   error
    action 'P4' (noprec):   error
    action 'P3' (noprec):   error
    action 'P2' (noprec):   error
    action 'P1' (noprec):   error
    action 'OR' (noprec):   error
    action 'AND' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LBRACKET' (noprec):   shift 158
    action 'RPAREN' (noprec):   error
    action 'LPAREN' (noprec):   shift 150
    action 'PIPE' (noprec):   error
    action 'STAR' (noprec):   error
    action 'COLON' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'ARROW' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'REFINES' (noprec):   error
    action 'HOLE' (noprec):   error
    action 'WITH' (noprec):   error
    action 'NOT' (noprec):   error
    action 'UNIT' (noprec):   error
    action 'REC' (noprec):   error
    action 'LET' (noprec):   error
    action 'OF' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'MATCH' (noprec):   shift 170
    action 'FUN' (noprec):   shift 166
    action 'TICK' (noprec):   error
    action 'PROJ' (noprec):   shift 162
    action 'UID' (noprec):   shift 149
    action 'LID' (noprec):   shift 152
    action 'INT' (noprec):   shift 157
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto expr: 187
    goto expr_p2: 148
    goto expr_p1: 147
    goto app_chain: 165
    goto ctor_chain: 164

state 187:
  items:
    expr_comma_one -> expr_comma 'COMMA' expr . 
    expr_comma -> expr_comma 'COMMA' expr . 

  actions:
    action 'EOF' (noprec):   reduce expr_comma_one --> expr_comma 'COMMA' expr
    action 'TUP' (noprec):   reduce expr_comma_one --> expr_comma 'COMMA' expr
    action 'CTOR_ALONE' (noprec):   reduce expr_comma_one --> expr_comma 'COMMA' expr
    action 'CTOR_ARG' (noprec):   reduce expr_comma_one --> expr_comma 'COMMA' expr
    action 'P4' (noprec):   reduce expr_comma_one --> expr_comma 'COMMA' expr
    action 'P3' (noprec):   reduce expr_comma_one --> expr_comma 'COMMA' expr
    action 'P2' (noprec):   reduce expr_comma_one --> expr_comma 'COMMA' expr
    action 'P1' (noprec):   reduce expr_comma_one --> expr_comma 'COMMA' expr
    action 'OR' (noprec):   reduce expr_comma_one --> expr_comma 'COMMA' expr
    action 'AND' (noprec):   reduce expr_comma_one --> expr_comma 'COMMA' expr
    action 'SEMI' (noprec):   reduce expr_comma_one --> expr_comma 'COMMA' expr
    action 'RBRACKET' (noprec):   reduce expr_comma_one --> expr_comma 'COMMA' expr
    action 'LBRACKET' (noprec):   reduce expr_comma_one --> expr_comma 'COMMA' expr
    action 'RPAREN' (noprec):   reduce expr_comma_one --> expr_comma 'COMMA' expr
    action 'LPAREN' (noprec):   reduce expr_comma_one --> expr_comma 'COMMA' expr
    action 'PIPE' (noprec):   reduce expr_comma_one --> expr_comma 'COMMA' expr
    action 'STAR' (noprec):   reduce expr_comma_one --> expr_comma 'COMMA' expr
    action 'COLON' (noprec):   reduce expr_comma_one --> expr_comma 'COMMA' expr
    action 'COMMA' (noprec):   reduce expr_comma --> expr_comma 'COMMA' expr
    action 'ARROW' (noprec):   reduce expr_comma_one --> expr_comma 'COMMA' expr
    action 'EQUAL' (noprec):   reduce expr_comma_one --> expr_comma 'COMMA' expr
    action 'REFINES' (noprec):   reduce expr_comma_one --> expr_comma 'COMMA' expr
    action 'HOLE' (noprec):   reduce expr_comma_one --> expr_comma 'COMMA' expr
    action 'WITH' (noprec):   reduce expr_comma_one --> expr_comma 'COMMA' expr
    action 'NOT' (noprec):   reduce expr_comma_one --> expr_comma 'COMMA' expr
    action 'UNIT' (noprec):   reduce expr_comma_one --> expr_comma 'COMMA' expr
    action 'REC' (noprec):   reduce expr_comma_one --> expr_comma 'COMMA' expr
    action 'LET' (noprec):   reduce expr_comma_one --> expr_comma 'COMMA' expr
    action 'OF' (noprec):   reduce expr_comma_one --> expr_comma 'COMMA' expr
    action 'TYPE' (noprec):   reduce expr_comma_one --> expr_comma 'COMMA' expr
    action 'MATCH' (noprec):   reduce expr_comma_one --> expr_comma 'COMMA' expr
    action 'FUN' (noprec):   reduce expr_comma_one --> expr_comma 'COMMA' expr
    action 'TICK' (noprec):   reduce expr_comma_one --> expr_comma 'COMMA' expr
    action 'PROJ' (noprec):   reduce expr_comma_one --> expr_comma 'COMMA' expr
    action 'UID' (noprec):   reduce expr_comma_one --> expr_comma 'COMMA' expr
    action 'LID' (noprec):   reduce expr_comma_one --> expr_comma 'COMMA' expr
    action 'INT' (noprec):   reduce expr_comma_one --> expr_comma 'COMMA' expr
    action 'error' (noprec):   reduce expr_comma_one --> expr_comma 'COMMA' expr
    action '#' (noprec):   reduce expr_comma_one --> expr_comma 'COMMA' expr
    action '$$' (noprec):   reduce expr_comma_one --> expr_comma 'COMMA' expr

  immediate action: <none>
 gotos:

state 188:
  items:
    expr_semi -> expr_semi2 . 
    expr_semi2 -> expr_semi2 . 'SEMI' expr

  actions:
    action 'EOF' (noprec):   reduce expr_semi --> expr_semi2
    action 'TUP' (noprec):   reduce expr_semi --> expr_semi2
    action 'CTOR_ALONE' (noprec):   reduce expr_semi --> expr_semi2
    action 'CTOR_ARG' (noprec):   reduce expr_semi --> expr_semi2
    action 'P4' (noprec):   reduce expr_semi --> expr_semi2
    action 'P3' (noprec):   reduce expr_semi --> expr_semi2
    action 'P2' (noprec):   reduce expr_semi --> expr_semi2
    action 'P1' (noprec):   reduce expr_semi --> expr_semi2
    action 'OR' (noprec):   reduce expr_semi --> expr_semi2
    action 'AND' (noprec):   reduce expr_semi --> expr_semi2
    action 'SEMI' (noprec):   shift 190
    action 'RBRACKET' (noprec):   reduce expr_semi --> expr_semi2
    action 'LBRACKET' (noprec):   reduce expr_semi --> expr_semi2
    action 'RPAREN' (noprec):   reduce expr_semi --> expr_semi2
    action 'LPAREN' (noprec):   reduce expr_semi --> expr_semi2
    action 'PIPE' (noprec):   reduce expr_semi --> expr_semi2
    action 'STAR' (noprec):   reduce expr_semi --> expr_semi2
    action 'COLON' (noprec):   reduce expr_semi --> expr_semi2
    action 'COMMA' (noprec):   reduce expr_semi --> expr_semi2
    action 'ARROW' (noprec):   reduce expr_semi --> expr_semi2
    action 'EQUAL' (noprec):   reduce expr_semi --> expr_semi2
    action 'REFINES' (noprec):   reduce expr_semi --> expr_semi2
    action 'HOLE' (noprec):   reduce expr_semi --> expr_semi2
    action 'WITH' (noprec):   reduce expr_semi --> expr_semi2
    action 'NOT' (noprec):   reduce expr_semi --> expr_semi2
    action 'UNIT' (noprec):   reduce expr_semi --> expr_semi2
    action 'REC' (noprec):   reduce expr_semi --> expr_semi2
    action 'LET' (noprec):   reduce expr_semi --> expr_semi2
    action 'OF' (noprec):   reduce expr_semi --> expr_semi2
    action 'TYPE' (noprec):   reduce expr_semi --> expr_semi2
    action 'MATCH' (noprec):   reduce expr_semi --> expr_semi2
    action 'FUN' (noprec):   reduce expr_semi --> expr_semi2
    action 'TICK' (noprec):   reduce expr_semi --> expr_semi2
    action 'PROJ' (noprec):   reduce expr_semi --> expr_semi2
    action 'UID' (noprec):   reduce expr_semi --> expr_semi2
    action 'LID' (noprec):   reduce expr_semi --> expr_semi2
    action 'INT' (noprec):   reduce expr_semi --> expr_semi2
    action 'error' (noprec):   reduce expr_semi --> expr_semi2
    action '#' (noprec):   reduce expr_semi --> expr_semi2
    action '$$' (noprec):   reduce expr_semi --> expr_semi2

  immediate action: <none>
 gotos:

state 189:
  items:
    expr_semi2 -> expr . 

  actions:
    action 'EOF' (noprec):   reduce expr_semi2 --> expr
    action 'TUP' (noprec):   reduce expr_semi2 --> expr
    action 'CTOR_ALONE' (noprec):   reduce expr_semi2 --> expr
    action 'CTOR_ARG' (noprec):   reduce expr_semi2 --> expr
    action 'P4' (noprec):   reduce expr_semi2 --> expr
    action 'P3' (noprec):   reduce expr_semi2 --> expr
    action 'P2' (noprec):   reduce expr_semi2 --> expr
    action 'P1' (noprec):   reduce expr_semi2 --> expr
    action 'OR' (noprec):   reduce expr_semi2 --> expr
    action 'AND' (noprec):   reduce expr_semi2 --> expr
    action 'SEMI' (noprec):   reduce expr_semi2 --> expr
    action 'RBRACKET' (noprec):   reduce expr_semi2 --> expr
    action 'LBRACKET' (noprec):   reduce expr_semi2 --> expr
    action 'RPAREN' (noprec):   reduce expr_semi2 --> expr
    action 'LPAREN' (noprec):   reduce expr_semi2 --> expr
    action 'PIPE' (noprec):   reduce expr_semi2 --> expr
    action 'STAR' (noprec):   reduce expr_semi2 --> expr
    action 'COLON' (noprec):   reduce expr_semi2 --> expr
    action 'COMMA' (noprec):   reduce expr_semi2 --> expr
    action 'ARROW' (noprec):   reduce expr_semi2 --> expr
    action 'EQUAL' (noprec):   reduce expr_semi2 --> expr
    action 'REFINES' (noprec):   reduce expr_semi2 --> expr
    action 'HOLE' (noprec):   reduce expr_semi2 --> expr
    action 'WITH' (noprec):   reduce expr_semi2 --> expr
    action 'NOT' (noprec):   reduce expr_semi2 --> expr
    action 'UNIT' (noprec):   reduce expr_semi2 --> expr
    action 'REC' (noprec):   reduce expr_semi2 --> expr
    action 'LET' (noprec):   reduce expr_semi2 --> expr
    action 'OF' (noprec):   reduce expr_semi2 --> expr
    action 'TYPE' (noprec):   reduce expr_semi2 --> expr
    action 'MATCH' (noprec):   reduce expr_semi2 --> expr
    action 'FUN' (noprec):   reduce expr_semi2 --> expr
    action 'TICK' (noprec):   reduce expr_semi2 --> expr
    action 'PROJ' (noprec):   reduce expr_semi2 --> expr
    action 'UID' (noprec):   reduce expr_semi2 --> expr
    action 'LID' (noprec):   reduce expr_semi2 --> expr
    action 'INT' (noprec):   reduce expr_semi2 --> expr
    action 'error' (noprec):   reduce expr_semi2 --> expr
    action '#' (noprec):   reduce expr_semi2 --> expr
    action '$$' (noprec):   reduce expr_semi2 --> expr

  immediate action:   reduce expr_semi2 --> expr
 gotos:

state 190:
  items:
    expr_semi2 -> expr_semi2 'SEMI' . expr

  actions:
    action 'EOF' (noprec):   error
    action 'TUP' (noprec):   error
    action 'CTOR_ALONE' (noprec):   error
    action 'CTOR_ARG' (noprec):   error
    action 'P4' (noprec):   error
    action 'P3' (noprec):   error
    action 'P2' (noprec):   error
    action 'P1' (noprec):   error
    action 'OR' (noprec):   error
    action 'AND' (noprec):   error
    action 'SEMI' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LBRACKET' (noprec):   shift 158
    action 'RPAREN' (noprec):   error
    action 'LPAREN' (noprec):   shift 150
    action 'PIPE' (noprec):   error
    action 'STAR' (noprec):   error
    action 'COLON' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'ARROW' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'REFINES' (noprec):   error
    action 'HOLE' (noprec):   error
    action 'WITH' (noprec):   error
    action 'NOT' (noprec):   error
    action 'UNIT' (noprec):   error
    action 'REC' (noprec):   error
    action 'LET' (noprec):   error
    action 'OF' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'MATCH' (noprec):   shift 170
    action 'FUN' (noprec):   shift 166
    action 'TICK' (noprec):   error
    action 'PROJ' (noprec):   shift 162
    action 'UID' (noprec):   shift 149
    action 'LID' (noprec):   shift 152
    action 'INT' (noprec):   shift 157
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error

  immediate action: <none>
 gotos:
    goto expr: 191
    goto expr_p2: 148
    goto expr_p1: 147
    goto app_chain: 165
    goto ctor_chain: 164

state 191:
  items:
    expr_semi2 -> expr_semi2 'SEMI' expr . 

  actions:
    action 'EOF' (noprec):   reduce expr_semi2 --> expr_semi2 'SEMI' expr
    action 'TUP' (noprec):   reduce expr_semi2 --> expr_semi2 'SEMI' expr
    action 'CTOR_ALONE' (noprec):   reduce expr_semi2 --> expr_semi2 'SEMI' expr
    action 'CTOR_ARG' (noprec):   reduce expr_semi2 --> expr_semi2 'SEMI' expr
    action 'P4' (noprec):   reduce expr_semi2 --> expr_semi2 'SEMI' expr
    action 'P3' (noprec):   reduce expr_semi2 --> expr_semi2 'SEMI' expr
    action 'P2' (noprec):   reduce expr_semi2 --> expr_semi2 'SEMI' expr
    action 'P1' (noprec):   reduce expr_semi2 --> expr_semi2 'SEMI' expr
    action 'OR' (noprec):   reduce expr_semi2 --> expr_semi2 'SEMI' expr
    action 'AND' (noprec):   reduce expr_semi2 --> expr_semi2 'SEMI' expr
    action 'SEMI' (noprec):   reduce expr_semi2 --> expr_semi2 'SEMI' expr
    action 'RBRACKET' (noprec):   reduce expr_semi2 --> expr_semi2 'SEMI' expr
    action 'LBRACKET' (noprec):   reduce expr_semi2 --> expr_semi2 'SEMI' expr
    action 'RPAREN' (noprec):   reduce expr_semi2 --> expr_semi2 'SEMI' expr
    action 'LPAREN' (noprec):   reduce expr_semi2 --> expr_semi2 'SEMI' expr
    action 'PIPE' (noprec):   reduce expr_semi2 --> expr_semi2 'SEMI' expr
    action 'STAR' (noprec):   reduce expr_semi2 --> expr_semi2 'SEMI' expr
    action 'COLON' (noprec):   reduce expr_semi2 --> expr_semi2 'SEMI' expr
    action 'COMMA' (noprec):   reduce expr_semi2 --> expr_semi2 'SEMI' expr
    action 'ARROW' (noprec):   reduce expr_semi2 --> expr_semi2 'SEMI' expr
    action 'EQUAL' (noprec):   reduce expr_semi2 --> expr_semi2 'SEMI' expr
    action 'REFINES' (noprec):   reduce expr_semi2 --> expr_semi2 'SEMI' expr
    action 'HOLE' (noprec):   reduce expr_semi2 --> expr_semi2 'SEMI' expr
    action 'WITH' (noprec):   reduce expr_semi2 --> expr_semi2 'SEMI' expr
    action 'NOT' (noprec):   reduce expr_semi2 --> expr_semi2 'SEMI' expr
    action 'UNIT' (noprec):   reduce expr_semi2 --> expr_semi2 'SEMI' expr
    action 'REC' (noprec):   reduce expr_semi2 --> expr_semi2 'SEMI' expr
    action 'LET' (noprec):   reduce expr_semi2 --> expr_semi2 'SEMI' expr
    action 'OF' (noprec):   reduce expr_semi2 --> expr_semi2 'SEMI' expr
    action 'TYPE' (noprec):   reduce expr_semi2 --> expr_semi2 'SEMI' expr
    action 'MATCH' (noprec):   reduce expr_semi2 --> expr_semi2 'SEMI' expr
    action 'FUN' (noprec):   reduce expr_semi2 --> expr_semi2 'SEMI' expr
    action 'TICK' (noprec):   reduce expr_semi2 --> expr_semi2 'SEMI' expr
    action 'PROJ' (noprec):   reduce expr_semi2 --> expr_semi2 'SEMI' expr
    action 'UID' (noprec):   reduce expr_semi2 --> expr_semi2 'SEMI' expr
    action 'LID' (noprec):   reduce expr_semi2 --> expr_semi2 'SEMI' expr
    action 'INT' (noprec):   reduce expr_semi2 --> expr_semi2 'SEMI' expr
    action 'error' (noprec):   reduce expr_semi2 --> expr_semi2 'SEMI' expr
    action '#' (noprec):   reduce expr_semi2 --> expr_semi2 'SEMI' expr
    action '$$' (noprec):   reduce expr_semi2 --> expr_semi2 'SEMI' expr

  immediate action:   reduce expr_semi2 --> expr_semi2 'SEMI' expr
 gotos:


startStates = 0
------------------------
