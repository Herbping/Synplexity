// Implementation file for parser generated by fsyacc
module Parser
#nowarn "64";; // turn off warnings that type variables used in production annotations are instantiated to concrete type
open Microsoft.FSharp.Text.Lexing
open Microsoft.FSharp.Text.Parsing.ParseHelpers
# 5 "refinements/Parser.fsy"

open Synth.Lang

let rec expr_of_int (n:int) : expr =
    if n = 0 then HC.ector("Z", HC.eunit) else HC.ector("S", expr_of_int (n-1))

let rec refn_of_int (n:int) : refn_ext =
    if n = 0 then RECtor("Z", REUnit) else RECtor("S", refn_of_int (n-1))

let rec expr_of_list (ls:expr list) : expr =
    match ls with
    | hd :: tl -> HC.ector("Cons", HC.etup[hd; expr_of_list tl])
    | []       -> HC.ector("Nil", HC.eunit)

let rec refn_of_list (ls:refn_ext list) : refn_ext =
    match ls with
    | hd :: tl -> RECtor("Cons", RETup[hd; refn_of_list tl])
    | []       -> RECtor("Nil", REUnit)

// Expression declaration.
let make_expr_decl (fix:bool) (name:id) (args:(id * typ) list) (t:typ) (e:expr) =
    if args.Length = 0 then DLibrary(name, e)
    else
        let rec inner_funs args =
            match args with
            | (x,t)::tl -> HC.efun{argl=x; arg_type=t; body=inner_funs tl}
            | []        -> e
        let rec fix_typ ls =
            match ls with
            | (_, t'):: tl -> HC.tarr(t', fix_typ tl)
            | []           -> t

        let func = if fix then HC.efix {name=name; argf=fst args.Head; arg_type=snd args.Head;
                                        ret_type=fix_typ args.Tail; body=inner_funs args.Tail}
                   else        HC.efun {argl=fst args.Head; arg_type=snd args.Head;
                                        body=inner_funs args.Tail}        
        DLibrary(name, func)

// Append a declaration to a synth problem
let app_decl sp d = {sp with declarations = d :: sp.declarations }
let rev_decls sp  = {sp with declarations = List.rev sp.declarations }


# 50 "refinements/Parser.fs"
// This type is the type of tokens accepted by the parser
type token = 
  | EOF
  | TUP
  | CTOR_ALONE
  | CTOR_ARG
  | P4
  | P3
  | P2
  | P1
  | OR
  | AND
  | SEMI
  | RBRACKET
  | LBRACKET
  | RPAREN
  | LPAREN
  | PIPE
  | STAR
  | COLON
  | COMMA
  | ARROW
  | EQUAL
  | REFINES
  | HOLE
  | WITH
  | NOT
  | UNIT
  | REC
  | LET
  | OF
  | TYPE
  | MATCH
  | FUN
  | TICK of (string)
  | PROJ of (int)
  | UID of (string)
  | LID of (string)
  | INT of (int)
// This type is used to give symbolic names to token indexes, useful for error messages
type tokenId = 
    | TOKEN_EOF
    | TOKEN_TUP
    | TOKEN_CTOR_ALONE
    | TOKEN_CTOR_ARG
    | TOKEN_P4
    | TOKEN_P3
    | TOKEN_P2
    | TOKEN_P1
    | TOKEN_OR
    | TOKEN_AND
    | TOKEN_SEMI
    | TOKEN_RBRACKET
    | TOKEN_LBRACKET
    | TOKEN_RPAREN
    | TOKEN_LPAREN
    | TOKEN_PIPE
    | TOKEN_STAR
    | TOKEN_COLON
    | TOKEN_COMMA
    | TOKEN_ARROW
    | TOKEN_EQUAL
    | TOKEN_REFINES
    | TOKEN_HOLE
    | TOKEN_WITH
    | TOKEN_NOT
    | TOKEN_UNIT
    | TOKEN_REC
    | TOKEN_LET
    | TOKEN_OF
    | TOKEN_TYPE
    | TOKEN_MATCH
    | TOKEN_FUN
    | TOKEN_TICK
    | TOKEN_PROJ
    | TOKEN_UID
    | TOKEN_LID
    | TOKEN_INT
    | TOKEN_end_of_input
    | TOKEN_error
// This type is used to give symbolic names to token indexes, useful for error messages
type nonTerminalId = 
    | NONTERM__startstart
    | NONTERM_start
    | NONTERM_decls
    | NONTERM_type_ctor_one
    | NONTERM_type_ctor
    | NONTERM_tick_comma_one
    | NONTERM_tick_comma
    | NONTERM_arg
    | NONTERM_args_list_one
    | NONTERM_let_head
    | NONTERM_let_rec_head
    | NONTERM_refn
    | NONTERM_refn_comma_one
    | NONTERM_refn_comma
    | NONTERM_refn_semi
    | NONTERM_refn_semi2
    | NONTERM_typ
    | NONTERM_typ_in_tup
    | NONTERM_typ_base
    | NONTERM_typ_star_one
    | NONTERM_typ_star
    | NONTERM_typ_comma_one
    | NONTERM_typ_comma
    | NONTERM_expr
    | NONTERM_expr_p2
    | NONTERM_expr_p1
    | NONTERM_app_chain
    | NONTERM_ctor_chain
    | NONTERM_branches
    | NONTERM_branch
    | NONTERM_expr_comma_one
    | NONTERM_expr_comma
    | NONTERM_expr_semi
    | NONTERM_expr_semi2

// This function maps tokens to integer indexes
let tagOfToken (t:token) = 
  match t with
  | EOF  -> 0 
  | TUP  -> 1 
  | CTOR_ALONE  -> 2 
  | CTOR_ARG  -> 3 
  | P4  -> 4 
  | P3  -> 5 
  | P2  -> 6 
  | P1  -> 7 
  | OR  -> 8 
  | AND  -> 9 
  | SEMI  -> 10 
  | RBRACKET  -> 11 
  | LBRACKET  -> 12 
  | RPAREN  -> 13 
  | LPAREN  -> 14 
  | PIPE  -> 15 
  | STAR  -> 16 
  | COLON  -> 17 
  | COMMA  -> 18 
  | ARROW  -> 19 
  | EQUAL  -> 20 
  | REFINES  -> 21 
  | HOLE  -> 22 
  | WITH  -> 23 
  | NOT  -> 24 
  | UNIT  -> 25 
  | REC  -> 26 
  | LET  -> 27 
  | OF  -> 28 
  | TYPE  -> 29 
  | MATCH  -> 30 
  | FUN  -> 31 
  | TICK _ -> 32 
  | PROJ _ -> 33 
  | UID _ -> 34 
  | LID _ -> 35 
  | INT _ -> 36 

// This function maps integer indexes to symbolic token ids
let tokenTagToTokenId (tokenIdx:int) = 
  match tokenIdx with
  | 0 -> TOKEN_EOF 
  | 1 -> TOKEN_TUP 
  | 2 -> TOKEN_CTOR_ALONE 
  | 3 -> TOKEN_CTOR_ARG 
  | 4 -> TOKEN_P4 
  | 5 -> TOKEN_P3 
  | 6 -> TOKEN_P2 
  | 7 -> TOKEN_P1 
  | 8 -> TOKEN_OR 
  | 9 -> TOKEN_AND 
  | 10 -> TOKEN_SEMI 
  | 11 -> TOKEN_RBRACKET 
  | 12 -> TOKEN_LBRACKET 
  | 13 -> TOKEN_RPAREN 
  | 14 -> TOKEN_LPAREN 
  | 15 -> TOKEN_PIPE 
  | 16 -> TOKEN_STAR 
  | 17 -> TOKEN_COLON 
  | 18 -> TOKEN_COMMA 
  | 19 -> TOKEN_ARROW 
  | 20 -> TOKEN_EQUAL 
  | 21 -> TOKEN_REFINES 
  | 22 -> TOKEN_HOLE 
  | 23 -> TOKEN_WITH 
  | 24 -> TOKEN_NOT 
  | 25 -> TOKEN_UNIT 
  | 26 -> TOKEN_REC 
  | 27 -> TOKEN_LET 
  | 28 -> TOKEN_OF 
  | 29 -> TOKEN_TYPE 
  | 30 -> TOKEN_MATCH 
  | 31 -> TOKEN_FUN 
  | 32 -> TOKEN_TICK 
  | 33 -> TOKEN_PROJ 
  | 34 -> TOKEN_UID 
  | 35 -> TOKEN_LID 
  | 36 -> TOKEN_INT 
  | 39 -> TOKEN_end_of_input
  | 37 -> TOKEN_error
  | _ -> failwith "tokenTagToTokenId: bad token"

/// This function maps production indexes returned in syntax errors to strings representing the non terminal that would be produced by that production
let prodIdxToNonTerminal (prodIdx:int) = 
  match prodIdx with
    | 0 -> NONTERM__startstart 
    | 1 -> NONTERM_start 
    | 2 -> NONTERM_decls 
    | 3 -> NONTERM_decls 
    | 4 -> NONTERM_decls 
    | 5 -> NONTERM_decls 
    | 6 -> NONTERM_decls 
    | 7 -> NONTERM_decls 
    | 8 -> NONTERM_decls 
    | 9 -> NONTERM_decls 
    | 10 -> NONTERM_decls 
    | 11 -> NONTERM_decls 
    | 12 -> NONTERM_type_ctor_one 
    | 13 -> NONTERM_type_ctor_one 
    | 14 -> NONTERM_type_ctor 
    | 15 -> NONTERM_type_ctor 
    | 16 -> NONTERM_tick_comma_one 
    | 17 -> NONTERM_tick_comma 
    | 18 -> NONTERM_tick_comma 
    | 19 -> NONTERM_arg 
    | 20 -> NONTERM_args_list_one 
    | 21 -> NONTERM_args_list_one 
    | 22 -> NONTERM_let_head 
    | 23 -> NONTERM_let_rec_head 
    | 24 -> NONTERM_refn 
    | 25 -> NONTERM_refn 
    | 26 -> NONTERM_refn 
    | 27 -> NONTERM_refn 
    | 28 -> NONTERM_refn 
    | 29 -> NONTERM_refn 
    | 30 -> NONTERM_refn 
    | 31 -> NONTERM_refn 
    | 32 -> NONTERM_refn 
    | 33 -> NONTERM_refn 
    | 34 -> NONTERM_refn 
    | 35 -> NONTERM_refn 
    | 36 -> NONTERM_refn 
    | 37 -> NONTERM_refn_comma_one 
    | 38 -> NONTERM_refn_comma 
    | 39 -> NONTERM_refn_comma 
    | 40 -> NONTERM_refn_semi 
    | 41 -> NONTERM_refn_semi 
    | 42 -> NONTERM_refn_semi2 
    | 43 -> NONTERM_refn_semi2 
    | 44 -> NONTERM_typ 
    | 45 -> NONTERM_typ 
    | 46 -> NONTERM_typ 
    | 47 -> NONTERM_typ 
    | 48 -> NONTERM_typ 
    | 49 -> NONTERM_typ 
    | 50 -> NONTERM_typ_in_tup 
    | 51 -> NONTERM_typ_in_tup 
    | 52 -> NONTERM_typ_in_tup 
    | 53 -> NONTERM_typ_in_tup 
    | 54 -> NONTERM_typ_base 
    | 55 -> NONTERM_typ_base 
    | 56 -> NONTERM_typ_base 
    | 57 -> NONTERM_typ_base 
    | 58 -> NONTERM_typ_base 
    | 59 -> NONTERM_typ_base 
    | 60 -> NONTERM_typ_star_one 
    | 61 -> NONTERM_typ_star 
    | 62 -> NONTERM_typ_star 
    | 63 -> NONTERM_typ_comma_one 
    | 64 -> NONTERM_typ_comma 
    | 65 -> NONTERM_typ_comma 
    | 66 -> NONTERM_expr 
    | 67 -> NONTERM_expr 
    | 68 -> NONTERM_expr 
    | 69 -> NONTERM_expr_p2 
    | 70 -> NONTERM_expr_p2 
    | 71 -> NONTERM_expr_p2 
    | 72 -> NONTERM_expr_p2 
    | 73 -> NONTERM_expr_p2 
    | 74 -> NONTERM_expr_p2 
    | 75 -> NONTERM_expr_p2 
    | 76 -> NONTERM_expr_p1 
    | 77 -> NONTERM_expr_p1 
    | 78 -> NONTERM_expr_p1 
    | 79 -> NONTERM_expr_p1 
    | 80 -> NONTERM_expr_p1 
    | 81 -> NONTERM_app_chain 
    | 82 -> NONTERM_app_chain 
    | 83 -> NONTERM_ctor_chain 
    | 84 -> NONTERM_ctor_chain 
    | 85 -> NONTERM_ctor_chain 
    | 86 -> NONTERM_branches 
    | 87 -> NONTERM_branches 
    | 88 -> NONTERM_branch 
    | 89 -> NONTERM_expr_comma_one 
    | 90 -> NONTERM_expr_comma 
    | 91 -> NONTERM_expr_comma 
    | 92 -> NONTERM_expr_semi 
    | 93 -> NONTERM_expr_semi2 
    | 94 -> NONTERM_expr_semi2 
    | _ -> failwith "prodIdxToNonTerminal: bad production index"

let _fsyacc_endOfInputTag = 39 
let _fsyacc_tagOfErrorTerminal = 37

// This function gets the name of a token as a string
let token_to_string (t:token) = 
  match t with 
  | EOF  -> "EOF" 
  | TUP  -> "TUP" 
  | CTOR_ALONE  -> "CTOR_ALONE" 
  | CTOR_ARG  -> "CTOR_ARG" 
  | P4  -> "P4" 
  | P3  -> "P3" 
  | P2  -> "P2" 
  | P1  -> "P1" 
  | OR  -> "OR" 
  | AND  -> "AND" 
  | SEMI  -> "SEMI" 
  | RBRACKET  -> "RBRACKET" 
  | LBRACKET  -> "LBRACKET" 
  | RPAREN  -> "RPAREN" 
  | LPAREN  -> "LPAREN" 
  | PIPE  -> "PIPE" 
  | STAR  -> "STAR" 
  | COLON  -> "COLON" 
  | COMMA  -> "COMMA" 
  | ARROW  -> "ARROW" 
  | EQUAL  -> "EQUAL" 
  | REFINES  -> "REFINES" 
  | HOLE  -> "HOLE" 
  | WITH  -> "WITH" 
  | NOT  -> "NOT" 
  | UNIT  -> "UNIT" 
  | REC  -> "REC" 
  | LET  -> "LET" 
  | OF  -> "OF" 
  | TYPE  -> "TYPE" 
  | MATCH  -> "MATCH" 
  | FUN  -> "FUN" 
  | TICK _ -> "TICK" 
  | PROJ _ -> "PROJ" 
  | UID _ -> "UID" 
  | LID _ -> "LID" 
  | INT _ -> "INT" 

// This function gets the data carried by a token as an object
let _fsyacc_dataOfToken (t:token) = 
  match t with 
  | EOF  -> (null : System.Object) 
  | TUP  -> (null : System.Object) 
  | CTOR_ALONE  -> (null : System.Object) 
  | CTOR_ARG  -> (null : System.Object) 
  | P4  -> (null : System.Object) 
  | P3  -> (null : System.Object) 
  | P2  -> (null : System.Object) 
  | P1  -> (null : System.Object) 
  | OR  -> (null : System.Object) 
  | AND  -> (null : System.Object) 
  | SEMI  -> (null : System.Object) 
  | RBRACKET  -> (null : System.Object) 
  | LBRACKET  -> (null : System.Object) 
  | RPAREN  -> (null : System.Object) 
  | LPAREN  -> (null : System.Object) 
  | PIPE  -> (null : System.Object) 
  | STAR  -> (null : System.Object) 
  | COLON  -> (null : System.Object) 
  | COMMA  -> (null : System.Object) 
  | ARROW  -> (null : System.Object) 
  | EQUAL  -> (null : System.Object) 
  | REFINES  -> (null : System.Object) 
  | HOLE  -> (null : System.Object) 
  | WITH  -> (null : System.Object) 
  | NOT  -> (null : System.Object) 
  | UNIT  -> (null : System.Object) 
  | REC  -> (null : System.Object) 
  | LET  -> (null : System.Object) 
  | OF  -> (null : System.Object) 
  | TYPE  -> (null : System.Object) 
  | MATCH  -> (null : System.Object) 
  | FUN  -> (null : System.Object) 
  | TICK _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | PROJ _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | UID _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | LID _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
let _fsyacc_gotos = [| 0us; 65535us; 1us; 65535us; 0us; 1us; 7us; 65535us; 0us; 2us; 6us; 7us; 11us; 12us; 18us; 19us; 28us; 29us; 37us; 38us; 51us; 52us; 3us; 65535us; 5us; 6us; 10us; 11us; 17us; 18us; 6us; 65535us; 5us; 58us; 6us; 59us; 10us; 58us; 11us; 59us; 17us; 58us; 18us; 59us; 1us; 65535us; 13us; 14us; 1us; 65535us; 13us; 64us; 5us; 65535us; 21us; 73us; 22us; 74us; 30us; 73us; 31us; 74us; 166us; 167us; 2us; 65535us; 21us; 22us; 30us; 31us; 7us; 65535us; 0us; 47us; 6us; 47us; 11us; 47us; 18us; 47us; 28us; 47us; 37us; 47us; 51us; 47us; 7us; 65535us; 0us; 30us; 6us; 30us; 11us; 30us; 18us; 30us; 28us; 30us; 37us; 30us; 51us; 30us; 12us; 65535us; 41us; 42us; 53us; 54us; 80us; 101us; 84us; 85us; 88us; 99us; 92us; 99us; 103us; 95us; 104us; 96us; 109us; 97us; 113us; 98us; 114us; 100us; 116us; 102us; 1us; 65535us; 104us; 107us; 3us; 65535us; 88us; 89us; 92us; 93us; 104us; 112us; 1us; 65535us; 80us; 81us; 1us; 65535us; 80us; 115us; 10us; 65535us; 23us; 24us; 32us; 33us; 39us; 40us; 62us; 63us; 70us; 71us; 75us; 76us; 122us; 118us; 126us; 119us; 131us; 120us; 146us; 121us; 11us; 65535us; 23us; 144us; 32us; 144us; 39us; 144us; 62us; 144us; 70us; 144us; 75us; 144us; 122us; 144us; 126us; 144us; 131us; 144us; 142us; 143us; 146us; 144us; 11us; 65535us; 23us; 123us; 32us; 123us; 39us; 123us; 62us; 123us; 70us; 123us; 75us; 123us; 122us; 123us; 126us; 123us; 131us; 123us; 142us; 130us; 146us; 123us; 10us; 65535us; 23us; 125us; 32us; 125us; 39us; 125us; 62us; 125us; 70us; 125us; 75us; 125us; 122us; 125us; 126us; 125us; 131us; 125us; 146us; 125us; 10us; 65535us; 23us; 141us; 32us; 141us; 39us; 141us; 62us; 141us; 70us; 141us; 75us; 141us; 122us; 141us; 126us; 141us; 131us; 141us; 146us; 141us; 2us; 65535us; 126us; 138us; 131us; 138us; 2us; 65535us; 126us; 145us; 131us; 145us; 10us; 65535us; 25us; 26us; 34us; 35us; 48us; 49us; 150us; 155us; 158us; 189us; 168us; 169us; 170us; 171us; 183us; 184us; 186us; 187us; 190us; 191us; 15us; 65535us; 25us; 148us; 34us; 148us; 48us; 148us; 148us; 174us; 149us; 177us; 150us; 148us; 158us; 148us; 162us; 163us; 165us; 175us; 168us; 148us; 170us; 148us; 176us; 177us; 183us; 148us; 186us; 148us; 190us; 148us; 10us; 65535us; 25us; 147us; 34us; 147us; 48us; 147us; 150us; 147us; 158us; 147us; 168us; 147us; 170us; 147us; 183us; 147us; 186us; 147us; 190us; 147us; 10us; 65535us; 25us; 165us; 34us; 165us; 48us; 165us; 150us; 165us; 158us; 165us; 168us; 165us; 170us; 165us; 183us; 165us; 186us; 165us; 190us; 165us; 12us; 65535us; 25us; 164us; 34us; 164us; 48us; 164us; 149us; 178us; 150us; 164us; 158us; 164us; 168us; 164us; 170us; 164us; 176us; 178us; 183us; 164us; 186us; 164us; 190us; 164us; 1us; 65535us; 172us; 173us; 1us; 65535us; 173us; 179us; 1us; 65535us; 150us; 153us; 1us; 65535us; 150us; 185us; 1us; 65535us; 158us; 160us; 1us; 65535us; 158us; 188us; |]
let _fsyacc_sparseGotoTableRowOffsets = [|0us; 1us; 3us; 11us; 15us; 22us; 24us; 26us; 32us; 35us; 43us; 51us; 64us; 66us; 70us; 72us; 74us; 85us; 97us; 109us; 120us; 131us; 134us; 137us; 148us; 164us; 175us; 186us; 199us; 201us; 203us; 205us; 207us; 209us; |]
let _fsyacc_stateToProdIdxsTableElements = [| 1us; 0us; 1us; 0us; 1us; 1us; 3us; 2us; 3us; 4us; 1us; 2us; 1us; 2us; 2us; 2us; 13us; 1us; 2us; 1us; 3us; 1us; 3us; 1us; 3us; 2us; 3us; 13us; 1us; 3us; 1us; 4us; 1us; 4us; 1us; 4us; 1us; 4us; 1us; 4us; 2us; 4us; 13us; 1us; 4us; 3us; 5us; 22us; 23us; 2us; 5us; 22us; 2us; 5us; 21us; 1us; 5us; 2us; 5us; 45us; 1us; 5us; 1us; 5us; 1us; 5us; 1us; 5us; 1us; 5us; 3us; 6us; 7us; 8us; 2us; 6us; 21us; 1us; 6us; 2us; 6us; 45us; 1us; 6us; 1us; 6us; 1us; 6us; 1us; 6us; 1us; 6us; 2us; 7us; 8us; 3us; 7us; 8us; 45us; 1us; 7us; 2us; 7us; 29us; 1us; 7us; 1us; 7us; 1us; 8us; 1us; 8us; 3us; 9us; 10us; 11us; 2us; 9us; 11us; 1us; 9us; 1us; 9us; 1us; 9us; 1us; 9us; 1us; 10us; 2us; 10us; 29us; 1us; 10us; 1us; 10us; 1us; 11us; 1us; 12us; 1us; 13us; 2us; 14us; 15us; 2us; 14us; 15us; 1us; 14us; 2us; 14us; 45us; 2us; 16us; 18us; 2us; 16us; 18us; 2us; 16us; 18us; 1us; 17us; 1us; 19us; 1us; 19us; 1us; 19us; 2us; 19us; 45us; 1us; 19us; 1us; 20us; 1us; 21us; 1us; 22us; 2us; 22us; 45us; 1us; 23us; 1us; 23us; 1us; 24us; 1us; 25us; 1us; 25us; 1us; 25us; 1us; 26us; 1us; 26us; 2us; 26us; 29us; 1us; 26us; 1us; 27us; 1us; 27us; 2us; 27us; 39us; 1us; 27us; 1us; 28us; 1us; 28us; 2us; 28us; 39us; 1us; 28us; 2us; 29us; 29us; 3us; 29us; 31us; 38us; 2us; 29us; 33us; 3us; 29us; 37us; 39us; 2us; 29us; 38us; 2us; 29us; 39us; 2us; 29us; 42us; 2us; 29us; 43us; 1us; 29us; 3us; 30us; 31us; 32us; 1us; 30us; 1us; 31us; 1us; 32us; 1us; 32us; 2us; 33us; 34us; 1us; 35us; 1us; 36us; 2us; 37us; 39us; 2us; 37us; 39us; 1us; 39us; 2us; 40us; 43us; 1us; 43us; 3us; 44us; 50us; 56us; 2us; 45us; 45us; 5us; 45us; 49us; 53us; 58us; 64us; 4us; 45us; 53us; 58us; 64us; 3us; 45us; 63us; 65us; 1us; 45us; 2us; 46us; 52us; 3us; 47us; 51us; 57us; 1us; 48us; 4us; 49us; 53us; 58us; 59us; 3us; 49us; 53us; 58us; 2us; 50us; 56us; 2us; 51us; 57us; 1us; 52us; 3us; 53us; 58us; 59us; 2us; 53us; 58us; 2us; 54us; 55us; 1us; 55us; 1us; 56us; 1us; 57us; 1us; 58us; 1us; 59us; 1us; 59us; 1us; 59us; 2us; 60us; 62us; 2us; 60us; 62us; 2us; 60us; 62us; 1us; 61us; 2us; 63us; 65us; 2us; 63us; 65us; 1us; 66us; 2us; 67us; 81us; 4us; 68us; 83us; 84us; 85us; 3us; 69us; 71us; 72us; 1us; 69us; 1us; 70us; 1us; 71us; 1us; 71us; 2us; 72us; 90us; 1us; 72us; 1us; 73us; 2us; 74us; 75us; 1us; 74us; 1us; 75us; 1us; 75us; 1us; 76us; 1us; 76us; 1us; 77us; 2us; 78us; 82us; 1us; 79us; 1us; 79us; 1us; 79us; 1us; 79us; 1us; 80us; 1us; 80us; 1us; 80us; 2us; 80us; 86us; 1us; 81us; 1us; 82us; 4us; 83us; 83us; 84us; 85us; 1us; 84us; 1us; 85us; 1us; 86us; 1us; 88us; 1us; 88us; 1us; 88us; 1us; 88us; 1us; 88us; 2us; 89us; 91us; 2us; 89us; 91us; 2us; 89us; 91us; 2us; 92us; 94us; 1us; 93us; 1us; 94us; 1us; 94us; |]
let _fsyacc_stateToProdIdxsTableRowOffsets = [|0us; 2us; 4us; 6us; 10us; 12us; 14us; 17us; 19us; 21us; 23us; 25us; 28us; 30us; 32us; 34us; 36us; 38us; 40us; 43us; 45us; 49us; 52us; 55us; 57us; 60us; 62us; 64us; 66us; 68us; 70us; 74us; 77us; 79us; 82us; 84us; 86us; 88us; 90us; 92us; 95us; 99us; 101us; 104us; 106us; 108us; 110us; 112us; 116us; 119us; 121us; 123us; 125us; 127us; 129us; 132us; 134us; 136us; 138us; 140us; 142us; 145us; 148us; 150us; 153us; 156us; 159us; 162us; 164us; 166us; 168us; 170us; 173us; 175us; 177us; 179us; 181us; 184us; 186us; 188us; 190us; 192us; 194us; 196us; 198us; 200us; 203us; 205us; 207us; 209us; 212us; 214us; 216us; 218us; 221us; 223us; 226us; 230us; 233us; 237us; 240us; 243us; 246us; 249us; 251us; 255us; 257us; 259us; 261us; 263us; 266us; 268us; 270us; 273us; 276us; 278us; 281us; 283us; 287us; 290us; 296us; 301us; 305us; 307us; 310us; 314us; 316us; 321us; 325us; 328us; 331us; 333us; 337us; 340us; 343us; 345us; 347us; 349us; 351us; 353us; 355us; 357us; 360us; 363us; 366us; 368us; 371us; 374us; 376us; 379us; 384us; 388us; 390us; 392us; 394us; 396us; 399us; 401us; 403us; 406us; 408us; 410us; 412us; 414us; 416us; 418us; 421us; 423us; 425us; 427us; 429us; 431us; 433us; 435us; 438us; 440us; 442us; 447us; 449us; 451us; 453us; 455us; 457us; 459us; 461us; 463us; 466us; 469us; 472us; 475us; 477us; 479us; |]
let _fsyacc_action_rows = 192
let _fsyacc_actionTableElements = [|2us; 32768us; 27us; 20us; 29us; 3us; 0us; 49152us; 0us; 16385us; 3us; 32768us; 14us; 13us; 32us; 8us; 35us; 4us; 1us; 32768us; 20us; 5us; 1us; 32768us; 15us; 60us; 3us; 32768us; 15us; 60us; 27us; 20us; 29us; 3us; 0us; 16386us; 1us; 32768us; 35us; 9us; 1us; 32768us; 20us; 10us; 1us; 32768us; 15us; 60us; 3us; 32768us; 15us; 60us; 27us; 20us; 29us; 3us; 0us; 16387us; 1us; 32768us; 32us; 67us; 1us; 32768us; 13us; 15us; 1us; 32768us; 35us; 16us; 1us; 32768us; 20us; 17us; 1us; 32768us; 15us; 60us; 3us; 32768us; 15us; 60us; 27us; 20us; 29us; 3us; 0us; 16388us; 2us; 32768us; 26us; 77us; 35us; 21us; 2us; 32768us; 14us; 68us; 17us; 75us; 2us; 32768us; 14us; 68us; 17us; 23us; 4us; 32768us; 14us; 126us; 25us; 117us; 32us; 124us; 35us; 133us; 2us; 32768us; 19us; 122us; 20us; 25us; 8us; 32768us; 12us; 158us; 14us; 150us; 30us; 170us; 31us; 166us; 33us; 162us; 34us; 149us; 35us; 152us; 36us; 157us; 1us; 32768us; 10us; 27us; 1us; 32768us; 10us; 28us; 2us; 32768us; 27us; 20us; 29us; 3us; 0us; 16389us; 2us; 32768us; 14us; 68us; 17us; 39us; 2us; 32768us; 14us; 68us; 17us; 32us; 4us; 32768us; 14us; 126us; 25us; 117us; 32us; 124us; 35us; 133us; 2us; 32768us; 19us; 122us; 20us; 34us; 8us; 32768us; 12us; 158us; 14us; 150us; 30us; 170us; 31us; 166us; 33us; 162us; 34us; 149us; 35us; 152us; 36us; 157us; 1us; 32768us; 10us; 36us; 1us; 32768us; 10us; 37us; 2us; 32768us; 27us; 20us; 29us; 3us; 0us; 16390us; 4us; 32768us; 14us; 126us; 25us; 117us; 32us; 124us; 35us; 133us; 3us; 32768us; 19us; 122us; 20us; 45us; 21us; 41us; 9us; 32768us; 8us; 91us; 9us; 87us; 12us; 80us; 14us; 104us; 24us; 83us; 32us; 111us; 34us; 109us; 35us; 110us; 36us; 79us; 2us; 32768us; 19us; 103us; 20us; 43us; 1us; 32768us; 22us; 44us; 0us; 16391us; 1us; 32768us; 22us; 46us; 0us; 16392us; 2us; 32768us; 20us; 48us; 21us; 53us; 9us; 32768us; 12us; 158us; 14us; 150us; 22us; 57us; 30us; 170us; 31us; 166us; 33us; 162us; 34us; 149us; 35us; 152us; 36us; 157us; 1us; 32768us; 10us; 50us; 1us; 32768us; 10us; 51us; 2us; 32768us; 27us; 20us; 29us; 3us; 0us; 16393us; 9us; 32768us; 8us; 91us; 9us; 87us; 12us; 80us; 14us; 104us; 24us; 83us; 32us; 111us; 34us; 109us; 35us; 110us; 36us; 79us; 2us; 32768us; 19us; 103us; 20us; 55us; 1us; 32768us; 22us; 56us; 0us; 16394us; 0us; 16395us; 0us; 16396us; 0us; 16397us; 1us; 32768us; 34us; 61us; 1us; 16399us; 28us; 62us; 4us; 32768us; 14us; 126us; 25us; 117us; 32us; 124us; 35us; 133us; 1us; 16398us; 19us; 122us; 1us; 32768us; 18us; 65us; 1us; 32768us; 32us; 66us; 1us; 16400us; 18us; 16402us; 0us; 16401us; 1us; 32768us; 35us; 69us; 1us; 32768us; 17us; 70us; 4us; 32768us; 14us; 126us; 25us; 117us; 32us; 124us; 35us; 133us; 2us; 32768us; 13us; 72us; 19us; 122us; 0us; 16403us; 0us; 16404us; 0us; 16405us; 4us; 32768us; 14us; 126us; 25us; 117us; 32us; 124us; 35us; 133us; 1us; 16406us; 19us; 122us; 1us; 32768us; 35us; 78us; 0us; 16407us; 0us; 16408us; 9us; 16425us; 8us; 91us; 9us; 87us; 12us; 80us; 14us; 104us; 24us; 83us; 32us; 111us; 34us; 109us; 35us; 110us; 36us; 79us; 1us; 32768us; 11us; 82us; 0us; 16409us; 1us; 32768us; 14us; 84us; 9us; 32768us; 8us; 91us; 9us; 87us; 12us; 80us; 14us; 104us; 24us; 83us; 32us; 111us; 34us; 109us; 35us; 110us; 36us; 79us; 2us; 32768us; 13us; 86us; 19us; 103us; 0us; 16410us; 1us; 32768us; 14us; 88us; 9us; 32768us; 8us; 91us; 9us; 87us; 12us; 80us; 14us; 104us; 24us; 83us; 32us; 111us; 34us; 109us; 35us; 110us; 36us; 79us; 2us; 32768us; 13us; 90us; 18us; 114us; 0us; 16411us; 1us; 32768us; 14us; 92us; 9us; 32768us; 8us; 91us; 9us; 87us; 12us; 80us; 14us; 104us; 24us; 83us; 32us; 111us; 34us; 109us; 35us; 110us; 36us; 79us; 2us; 32768us; 13us; 94us; 18us; 114us; 0us; 16412us; 1us; 16413us; 19us; 103us; 2us; 16422us; 13us; 106us; 19us; 103us; 0us; 16417us; 2us; 16421us; 18us; 16423us; 19us; 103us; 1us; 16422us; 19us; 103us; 1us; 16423us; 19us; 103us; 1us; 16426us; 19us; 103us; 1us; 16427us; 19us; 103us; 9us; 32768us; 8us; 91us; 9us; 87us; 12us; 80us; 14us; 104us; 24us; 83us; 32us; 111us; 34us; 109us; 35us; 110us; 36us; 79us; 10us; 32768us; 8us; 91us; 9us; 87us; 12us; 80us; 13us; 105us; 14us; 104us; 24us; 83us; 32us; 111us; 34us; 109us; 35us; 110us; 36us; 79us; 0us; 16414us; 0us; 16415us; 1us; 32768us; 13us; 108us; 0us; 16416us; 9us; 16418us; 8us; 91us; 9us; 87us; 12us; 80us; 14us; 104us; 24us; 83us; 32us; 111us; 34us; 109us; 35us; 110us; 36us; 79us; 0us; 16419us; 0us; 16420us; 1us; 32768us; 18us; 113us; 9us; 32768us; 8us; 91us; 9us; 87us; 12us; 80us; 14us; 104us; 24us; 83us; 32us; 111us; 34us; 109us; 35us; 110us; 36us; 79us; 9us; 32768us; 8us; 91us; 9us; 87us; 12us; 80us; 14us; 104us; 24us; 83us; 32us; 111us; 34us; 109us; 35us; 110us; 36us; 79us; 1us; 16424us; 10us; 116us; 9us; 32768us; 8us; 91us; 9us; 87us; 12us; 80us; 14us; 104us; 24us; 83us; 32us; 111us; 34us; 109us; 35us; 110us; 36us; 79us; 2us; 16428us; 16us; 16434us; 35us; 135us; 1us; 16429us; 19us; 122us; 2us; 16448us; 13us; 127us; 19us; 122us; 2us; 16448us; 13us; 132us; 19us; 122us; 2us; 16447us; 18us; 16449us; 19us; 122us; 4us; 32768us; 14us; 126us; 25us; 117us; 32us; 124us; 35us; 133us; 1us; 16430us; 16us; 16436us; 2us; 16431us; 16us; 16435us; 35us; 136us; 0us; 16432us; 4us; 32768us; 14us; 126us; 25us; 117us; 32us; 124us; 35us; 133us; 2us; 16433us; 16us; 16437us; 35us; 137us; 1us; 16434us; 35us; 135us; 1us; 16435us; 35us; 136us; 0us; 16436us; 4us; 32768us; 14us; 126us; 25us; 117us; 32us; 124us; 35us; 133us; 1us; 16437us; 35us; 137us; 1us; 16438us; 35us; 134us; 0us; 16439us; 0us; 16440us; 0us; 16441us; 0us; 16442us; 1us; 32768us; 13us; 139us; 1us; 32768us; 35us; 140us; 0us; 16443us; 1us; 32768us; 16us; 142us; 4us; 32768us; 14us; 131us; 25us; 128us; 32us; 129us; 35us; 133us; 1us; 16444us; 16us; 16446us; 0us; 16445us; 1us; 32768us; 18us; 146us; 4us; 32768us; 14us; 126us; 25us; 117us; 32us; 124us; 35us; 133us; 0us; 16450us; 4us; 16451us; 12us; 158us; 14us; 150us; 35us; 152us; 36us; 157us; 5us; 16452us; 12us; 158us; 14us; 150us; 34us; 176us; 35us; 152us; 36us; 157us; 9us; 32768us; 12us; 158us; 13us; 151us; 14us; 150us; 30us; 170us; 31us; 166us; 33us; 162us; 34us; 149us; 35us; 152us; 36us; 157us; 0us; 16453us; 0us; 16454us; 1us; 32768us; 13us; 154us; 0us; 16455us; 1us; 16474us; 13us; 156us; 0us; 16456us; 0us; 16457us; 9us; 32768us; 11us; 159us; 12us; 158us; 14us; 150us; 30us; 170us; 31us; 166us; 33us; 162us; 34us; 149us; 35us; 152us; 36us; 157us; 0us; 16458us; 1us; 32768us; 11us; 161us; 0us; 16459us; 4us; 32768us; 12us; 158us; 14us; 150us; 35us; 152us; 36us; 157us; 0us; 16460us; 0us; 16461us; 4us; 16462us; 12us; 158us; 14us; 150us; 35us; 152us; 36us; 157us; 1us; 32768us; 14us; 68us; 1us; 32768us; 19us; 168us; 8us; 32768us; 12us; 158us; 14us; 150us; 30us; 170us; 31us; 166us; 33us; 162us; 34us; 149us; 35us; 152us; 36us; 157us; 0us; 16463us; 8us; 32768us; 12us; 158us; 14us; 150us; 30us; 170us; 31us; 166us; 33us; 162us; 34us; 149us; 35us; 152us; 36us; 157us; 1us; 32768us; 23us; 172us; 0us; 16471us; 1us; 16464us; 15us; 180us; 0us; 16465us; 0us; 16466us; 5us; 16467us; 12us; 158us; 14us; 150us; 34us; 176us; 35us; 152us; 36us; 157us; 0us; 16468us; 0us; 16469us; 0us; 16470us; 1us; 32768us; 34us; 181us; 1us; 32768us; 35us; 182us; 1us; 32768us; 19us; 183us; 8us; 32768us; 12us; 158us; 14us; 150us; 30us; 170us; 31us; 166us; 33us; 162us; 34us; 149us; 35us; 152us; 36us; 157us; 0us; 16472us; 1us; 32768us; 18us; 186us; 8us; 32768us; 12us; 158us; 14us; 150us; 30us; 170us; 31us; 166us; 33us; 162us; 34us; 149us; 35us; 152us; 36us; 157us; 1us; 16473us; 18us; 16475us; 1us; 16476us; 10us; 190us; 0us; 16477us; 8us; 32768us; 12us; 158us; 14us; 150us; 30us; 170us; 31us; 166us; 33us; 162us; 34us; 149us; 35us; 152us; 36us; 157us; 0us; 16478us; |]
let _fsyacc_actionTableRowOffsets = [|0us; 3us; 4us; 5us; 9us; 11us; 13us; 17us; 18us; 20us; 22us; 24us; 28us; 29us; 31us; 33us; 35us; 37us; 39us; 43us; 44us; 47us; 50us; 53us; 58us; 61us; 70us; 72us; 74us; 77us; 78us; 81us; 84us; 89us; 92us; 101us; 103us; 105us; 108us; 109us; 114us; 118us; 128us; 131us; 133us; 134us; 136us; 137us; 140us; 150us; 152us; 154us; 157us; 158us; 168us; 171us; 173us; 174us; 175us; 176us; 177us; 179us; 181us; 186us; 188us; 190us; 192us; 194us; 195us; 197us; 199us; 204us; 207us; 208us; 209us; 210us; 215us; 217us; 219us; 220us; 221us; 231us; 233us; 234us; 236us; 246us; 249us; 250us; 252us; 262us; 265us; 266us; 268us; 278us; 281us; 282us; 284us; 287us; 288us; 291us; 293us; 295us; 297us; 299us; 309us; 320us; 321us; 322us; 324us; 325us; 335us; 336us; 337us; 339us; 349us; 359us; 361us; 371us; 374us; 376us; 379us; 382us; 385us; 390us; 392us; 395us; 396us; 401us; 404us; 406us; 408us; 409us; 414us; 416us; 418us; 419us; 420us; 421us; 422us; 424us; 426us; 427us; 429us; 434us; 436us; 437us; 439us; 444us; 445us; 450us; 456us; 466us; 467us; 468us; 470us; 471us; 473us; 474us; 475us; 485us; 486us; 488us; 489us; 494us; 495us; 496us; 501us; 503us; 505us; 514us; 515us; 524us; 526us; 527us; 529us; 530us; 531us; 537us; 538us; 539us; 540us; 542us; 544us; 546us; 555us; 556us; 558us; 567us; 569us; 571us; 572us; 581us; |]
let _fsyacc_reductionSymbolCounts = [|1us; 1us; 5us; 6us; 8us; 10us; 9us; 7us; 5us; 6us; 5us; 3us; 1us; 2us; 4us; 2us; 3us; 1us; 3us; 5us; 1us; 2us; 4us; 3us; 1us; 3us; 4us; 4us; 4us; 3us; 2us; 3us; 3us; 2us; 1us; 1us; 1us; 3us; 1us; 3us; 1us; 0us; 1us; 3us; 1us; 3us; 1us; 1us; 1us; 3us; 1us; 1us; 1us; 3us; 1us; 2us; 2us; 2us; 4us; 4us; 3us; 1us; 3us; 3us; 1us; 3us; 1us; 1us; 1us; 2us; 1us; 3us; 3us; 1us; 2us; 3us; 2us; 1us; 1us; 4us; 4us; 2us; 2us; 2us; 2us; 2us; 2us; 0us; 5us; 3us; 1us; 3us; 1us; 1us; 3us; |]
let _fsyacc_productionToNonTerminalTable = [|0us; 1us; 2us; 2us; 2us; 2us; 2us; 2us; 2us; 2us; 2us; 2us; 3us; 3us; 4us; 4us; 5us; 6us; 6us; 7us; 8us; 8us; 9us; 10us; 11us; 11us; 11us; 11us; 11us; 11us; 11us; 11us; 11us; 11us; 11us; 11us; 11us; 12us; 13us; 13us; 14us; 14us; 15us; 15us; 16us; 16us; 16us; 16us; 16us; 16us; 17us; 17us; 17us; 17us; 18us; 18us; 18us; 18us; 18us; 18us; 19us; 20us; 20us; 21us; 22us; 22us; 23us; 23us; 23us; 24us; 24us; 24us; 24us; 24us; 24us; 24us; 25us; 25us; 25us; 25us; 25us; 26us; 26us; 27us; 27us; 27us; 28us; 28us; 29us; 30us; 31us; 31us; 32us; 33us; 33us; |]
let _fsyacc_immediateActions = [|65535us; 49152us; 16385us; 65535us; 65535us; 65535us; 65535us; 16386us; 65535us; 65535us; 65535us; 65535us; 16387us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16388us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16389us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16390us; 65535us; 65535us; 65535us; 65535us; 65535us; 16391us; 65535us; 16392us; 65535us; 65535us; 65535us; 65535us; 65535us; 16393us; 65535us; 65535us; 65535us; 16394us; 16395us; 16396us; 16397us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16401us; 65535us; 65535us; 65535us; 65535us; 16403us; 16404us; 16405us; 65535us; 65535us; 65535us; 16407us; 16408us; 65535us; 65535us; 16409us; 65535us; 65535us; 65535us; 16410us; 65535us; 65535us; 65535us; 16411us; 65535us; 65535us; 65535us; 16412us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16414us; 16415us; 65535us; 16416us; 65535us; 16419us; 16420us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16432us; 65535us; 65535us; 65535us; 65535us; 16436us; 65535us; 65535us; 65535us; 16439us; 16440us; 16441us; 16442us; 65535us; 65535us; 16443us; 65535us; 65535us; 65535us; 16445us; 65535us; 65535us; 16450us; 65535us; 65535us; 65535us; 16453us; 16454us; 65535us; 16455us; 65535us; 16456us; 16457us; 65535us; 16458us; 65535us; 16459us; 65535us; 16460us; 16461us; 65535us; 65535us; 65535us; 65535us; 16463us; 65535us; 65535us; 65535us; 65535us; 16465us; 16466us; 65535us; 16468us; 16469us; 16470us; 65535us; 65535us; 65535us; 65535us; 16472us; 65535us; 65535us; 65535us; 65535us; 16477us; 65535us; 16478us; |]
let _fsyacc_reductions ()  =    [| 
# 448 "refinements/Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Synth.Lang.synth_problem)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (Microsoft.FSharp.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : '_startstart));
# 457 "refinements/Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'decls)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 118 "refinements/Parser.fsy"
                                    _1 
                   )
# 118 "refinements/Parser.fsy"
                 : Synth.Lang.synth_problem));
# 468 "refinements/Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'type_ctor_one)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'decls)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 127 "refinements/Parser.fsy"
                                  app_decl _5 (DDatatype(_2, [], _4)) 
                   )
# 127 "refinements/Parser.fsy"
                 : 'decls));
# 481 "refinements/Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'type_ctor_one)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'decls)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 129 "refinements/Parser.fsy"
                                  app_decl _6 (DDatatype(_3, [_2], _5)) 
                   )
# 129 "refinements/Parser.fsy"
                 : 'decls));
# 495 "refinements/Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'tick_comma_one)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : 'type_ctor_one)) in
            let _8 = (let data = parseState.GetInput(8) in (Microsoft.FSharp.Core.Operators.unbox data : 'decls)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 131 "refinements/Parser.fsy"
                                  app_decl _8 (DDatatype(_5, _3, _7)) 
                   )
# 131 "refinements/Parser.fsy"
                 : 'decls));
# 509 "refinements/Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'args_list_one)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'typ)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            let _10 = (let data = parseState.GetInput(10) in (Microsoft.FSharp.Core.Operators.unbox data : 'decls)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 135 "refinements/Parser.fsy"
                                  app_decl _10 (make_expr_decl false _2 (List.rev _3) _5 _7) 
                   )
# 135 "refinements/Parser.fsy"
                 : 'decls));
# 524 "refinements/Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'let_rec_head)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'args_list_one)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'typ)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            let _9 = (let data = parseState.GetInput(9) in (Microsoft.FSharp.Core.Operators.unbox data : 'decls)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 139 "refinements/Parser.fsy"
                                  app_decl _9 (make_expr_decl true _1 (List.rev _2) _4 _6) 
                   )
# 139 "refinements/Parser.fsy"
                 : 'decls));
# 539 "refinements/Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'let_rec_head)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typ)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'refn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 143 "refinements/Parser.fsy"
                                 {declarations=[]; synth_name=_1; synth_type=_3; synth_refn=Some _5; is_rec=true}
                   )
# 143 "refinements/Parser.fsy"
                 : 'decls));
# 552 "refinements/Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'let_rec_head)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typ)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 147 "refinements/Parser.fsy"
                                 {declarations=[]; synth_name=_1; synth_type=_3; synth_refn=None; is_rec=true}
                   )
# 147 "refinements/Parser.fsy"
                 : 'decls));
# 564 "refinements/Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'let_head)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'decls)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 151 "refinements/Parser.fsy"
                                  app_decl _6 (make_expr_decl false (fst _1) [] (snd _1) _3)
                   )
# 151 "refinements/Parser.fsy"
                 : 'decls));
# 577 "refinements/Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'let_head)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'refn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 155 "refinements/Parser.fsy"
                                 {declarations=[]; synth_name=fst _1; synth_type=snd _1; synth_refn=Some _3; is_rec=false}
                   )
# 155 "refinements/Parser.fsy"
                 : 'decls));
# 589 "refinements/Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'let_head)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 159 "refinements/Parser.fsy"
                                 {declarations=[]; synth_name=fst _1; synth_type=snd _1; synth_refn=None; is_rec=false}
                   )
# 159 "refinements/Parser.fsy"
                 : 'decls));
# 600 "refinements/Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'type_ctor)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 162 "refinements/Parser.fsy"
                                                     [_1]     
                   )
# 162 "refinements/Parser.fsy"
                 : 'type_ctor_one));
# 611 "refinements/Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'type_ctor_one)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'type_ctor)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 163 "refinements/Parser.fsy"
                                                  _2 :: _1 
                   )
# 163 "refinements/Parser.fsy"
                 : 'type_ctor_one));
# 623 "refinements/Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'typ)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 165 "refinements/Parser.fsy"
                                                     (_2, _4)   
                   )
# 165 "refinements/Parser.fsy"
                 : 'type_ctor));
# 635 "refinements/Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 166 "refinements/Parser.fsy"
                                                  (_2, HC.tunit)
                   )
# 166 "refinements/Parser.fsy"
                 : 'type_ctor));
# 646 "refinements/Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tick_comma)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 170 "refinements/Parser.fsy"
                                                   List.rev (_3 :: _1) 
                   )
# 170 "refinements/Parser.fsy"
                 : 'tick_comma_one));
# 658 "refinements/Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 174 "refinements/Parser.fsy"
                                                   [_1]        
                   )
# 174 "refinements/Parser.fsy"
                 : 'tick_comma));
# 669 "refinements/Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tick_comma)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 175 "refinements/Parser.fsy"
                                                _3 :: _1    
                   )
# 175 "refinements/Parser.fsy"
                 : 'tick_comma));
# 681 "refinements/Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'typ)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 178 "refinements/Parser.fsy"
                                                         (_2, _4) 
                   )
# 178 "refinements/Parser.fsy"
                 : 'arg));
# 693 "refinements/Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'arg)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 180 "refinements/Parser.fsy"
                                               [_1]     
                   )
# 180 "refinements/Parser.fsy"
                 : 'args_list_one));
# 704 "refinements/Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'args_list_one)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'arg)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 181 "refinements/Parser.fsy"
                                            _2 :: _1 
                   )
# 181 "refinements/Parser.fsy"
                 : 'args_list_one));
# 716 "refinements/Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'typ)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 183 "refinements/Parser.fsy"
                                               (_2, _4) 
                   )
# 183 "refinements/Parser.fsy"
                 : 'let_head));
# 728 "refinements/Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 185 "refinements/Parser.fsy"
                                         _3 
                   )
# 185 "refinements/Parser.fsy"
                 : 'let_rec_head));
# 739 "refinements/Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : int)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 191 "refinements/Parser.fsy"
                                                              refn_of_int _1     
                   )
# 191 "refinements/Parser.fsy"
                 : 'refn));
# 750 "refinements/Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'refn_semi)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 192 "refinements/Parser.fsy"
                                                           refn_of_list _2    
                   )
# 192 "refinements/Parser.fsy"
                 : 'refn));
# 761 "refinements/Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'refn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 193 "refinements/Parser.fsy"
                                                           RENot(_3)          
                   )
# 193 "refinements/Parser.fsy"
                 : 'refn));
# 772 "refinements/Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'refn_comma)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 194 "refinements/Parser.fsy"
                                                           REAnd(_3)          
                   )
# 194 "refinements/Parser.fsy"
                 : 'refn));
# 783 "refinements/Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'refn_comma)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 195 "refinements/Parser.fsy"
                                                           REOr (_3)          
                   )
# 195 "refinements/Parser.fsy"
                 : 'refn));
# 794 "refinements/Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'refn)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'refn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 196 "refinements/Parser.fsy"
                                                           REArrA(_1, _3)     
                   )
# 196 "refinements/Parser.fsy"
                 : 'refn));
# 806 "refinements/Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 197 "refinements/Parser.fsy"
                                                              REUnit             
                   )
# 197 "refinements/Parser.fsy"
                 : 'refn));
# 816 "refinements/Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'refn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 198 "refinements/Parser.fsy"
                                                           _2                 
                   )
# 198 "refinements/Parser.fsy"
                 : 'refn));
# 827 "refinements/Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'refn_comma_one)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 199 "refinements/Parser.fsy"
                                                           RETup(_2)          
                   )
# 199 "refinements/Parser.fsy"
                 : 'refn));
# 838 "refinements/Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'refn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 200 "refinements/Parser.fsy"
                                                           RECtor(_1, _2)     
                   )
# 200 "refinements/Parser.fsy"
                 : 'refn));
# 850 "refinements/Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 201 "refinements/Parser.fsy"
                                                           RECtor(_1, REUnit) 
                   )
# 201 "refinements/Parser.fsy"
                 : 'refn));
# 861 "refinements/Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 202 "refinements/Parser.fsy"
                                                           REBase(_1)         
                   )
# 202 "refinements/Parser.fsy"
                 : 'refn));
# 872 "refinements/Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 203 "refinements/Parser.fsy"
                                                           REPTop(_1)         
                   )
# 203 "refinements/Parser.fsy"
                 : 'refn));
# 883 "refinements/Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'refn_comma)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'refn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 207 "refinements/Parser.fsy"
                                                   List.rev (_3 :: _1) 
                   )
# 207 "refinements/Parser.fsy"
                 : 'refn_comma_one));
# 895 "refinements/Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'refn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 211 "refinements/Parser.fsy"
                                                   [_1]        
                   )
# 211 "refinements/Parser.fsy"
                 : 'refn_comma));
# 906 "refinements/Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'refn_comma)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'refn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 212 "refinements/Parser.fsy"
                                                _3 :: _1    
                   )
# 212 "refinements/Parser.fsy"
                 : 'refn_comma));
# 918 "refinements/Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'refn_semi2)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 216 "refinements/Parser.fsy"
                                                   List.rev _1 
                   )
# 216 "refinements/Parser.fsy"
                 : 'refn_semi));
# 929 "refinements/Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 217 "refinements/Parser.fsy"
                                                []          
                   )
# 217 "refinements/Parser.fsy"
                 : 'refn_semi));
# 939 "refinements/Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'refn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 219 "refinements/Parser.fsy"
                                                   [_1]        
                   )
# 219 "refinements/Parser.fsy"
                 : 'refn_semi2));
# 950 "refinements/Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'refn_semi2)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'refn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 220 "refinements/Parser.fsy"
                                                _3 :: _1    
                   )
# 220 "refinements/Parser.fsy"
                 : 'refn_semi2));
# 962 "refinements/Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 226 "refinements/Parser.fsy"
                                                HC.tunit        
                   )
# 226 "refinements/Parser.fsy"
                 : 'typ));
# 972 "refinements/Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typ)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typ)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 227 "refinements/Parser.fsy"
                                             HC.tarr(_1, _3) 
                   )
# 227 "refinements/Parser.fsy"
                 : 'typ));
# 984 "refinements/Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typ_base)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 228 "refinements/Parser.fsy"
                                             _1              
                   )
# 228 "refinements/Parser.fsy"
                 : 'typ));
# 995 "refinements/Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 229 "refinements/Parser.fsy"
                                             HC.tpoly(_1)    
                   )
# 229 "refinements/Parser.fsy"
                 : 'typ));
# 1006 "refinements/Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typ_star_one)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 230 "refinements/Parser.fsy"
                                             HC.ttup(_1)     
                   )
# 230 "refinements/Parser.fsy"
                 : 'typ));
# 1017 "refinements/Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typ)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 231 "refinements/Parser.fsy"
                                             _2           
                   )
# 231 "refinements/Parser.fsy"
                 : 'typ));
# 1028 "refinements/Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 234 "refinements/Parser.fsy"
                                                HC.tunit        
                   )
# 234 "refinements/Parser.fsy"
                 : 'typ_in_tup));
# 1038 "refinements/Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 235 "refinements/Parser.fsy"
                                                HC.tpoly(_1)    
                   )
# 235 "refinements/Parser.fsy"
                 : 'typ_in_tup));
# 1049 "refinements/Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typ_base)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 236 "refinements/Parser.fsy"
                                             _1              
                   )
# 236 "refinements/Parser.fsy"
                 : 'typ_in_tup));
# 1060 "refinements/Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typ)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 237 "refinements/Parser.fsy"
                                             _2              
                   )
# 237 "refinements/Parser.fsy"
                 : 'typ_in_tup));
# 1071 "refinements/Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 240 "refinements/Parser.fsy"
                                                   HC.tbase(_1, [])            
                   )
# 240 "refinements/Parser.fsy"
                 : 'typ_base));
# 1082 "refinements/Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 241 "refinements/Parser.fsy"
                                                HC.tbase(_2, [HC.tbase(_1, [])]) 
                   )
# 241 "refinements/Parser.fsy"
                 : 'typ_base));
# 1094 "refinements/Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 242 "refinements/Parser.fsy"
                                                HC.tbase(_2, [HC.tunit])    
                   )
# 242 "refinements/Parser.fsy"
                 : 'typ_base));
# 1105 "refinements/Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 243 "refinements/Parser.fsy"
                                                HC.tbase(_2, [HC.tpoly _1]) 
                   )
# 243 "refinements/Parser.fsy"
                 : 'typ_base));
# 1117 "refinements/Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typ)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 244 "refinements/Parser.fsy"
                                                HC.tbase(_4, [_2])          
                   )
# 244 "refinements/Parser.fsy"
                 : 'typ_base));
# 1129 "refinements/Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typ_comma_one)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 245 "refinements/Parser.fsy"
                                                          HC.tbase(_4, _2)  
                   )
# 245 "refinements/Parser.fsy"
                 : 'typ_base));
# 1141 "refinements/Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typ_star)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typ_in_tup)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 248 "refinements/Parser.fsy"
                                                       List.rev (_3 :: _1) 
                   )
# 248 "refinements/Parser.fsy"
                 : 'typ_star_one));
# 1153 "refinements/Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typ_in_tup)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 250 "refinements/Parser.fsy"
                                                       [_1]                
                   )
# 250 "refinements/Parser.fsy"
                 : 'typ_star));
# 1164 "refinements/Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typ_star)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typ_in_tup)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 251 "refinements/Parser.fsy"
                                                    _3 :: _1            
                   )
# 251 "refinements/Parser.fsy"
                 : 'typ_star));
# 1176 "refinements/Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typ_comma)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typ)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 255 "refinements/Parser.fsy"
                                                 List.rev (_3 :: _1) 
                   )
# 255 "refinements/Parser.fsy"
                 : 'typ_comma_one));
# 1188 "refinements/Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typ)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 259 "refinements/Parser.fsy"
                                                 [_1]        
                   )
# 259 "refinements/Parser.fsy"
                 : 'typ_comma));
# 1199 "refinements/Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typ_comma)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typ)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 260 "refinements/Parser.fsy"
                                              _3 :: _1    
                   )
# 260 "refinements/Parser.fsy"
                 : 'typ_comma));
# 1211 "refinements/Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr_p1)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 265 "refinements/Parser.fsy"
                                              _1 
                   )
# 265 "refinements/Parser.fsy"
                 : 'expr));
# 1222 "refinements/Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr_p2)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 266 "refinements/Parser.fsy"
                                           _1 
                   )
# 266 "refinements/Parser.fsy"
                 : 'expr));
# 1233 "refinements/Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 267 "refinements/Parser.fsy"
                                           HC.ector(_1, HC.eunit) 
                   )
# 267 "refinements/Parser.fsy"
                 : 'expr));
# 1244 "refinements/Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 270 "refinements/Parser.fsy"
                                                              HC.eunit           
                   )
# 270 "refinements/Parser.fsy"
                 : 'expr_p2));
# 1254 "refinements/Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 271 "refinements/Parser.fsy"
                                                        HC.evar _1         
                   )
# 271 "refinements/Parser.fsy"
                 : 'expr_p2));
# 1265 "refinements/Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr_comma_one)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 272 "refinements/Parser.fsy"
                                                        HC.etup _2         
                   )
# 272 "refinements/Parser.fsy"
                 : 'expr_p2));
# 1276 "refinements/Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 273 "refinements/Parser.fsy"
                                                        _2              
                   )
# 273 "refinements/Parser.fsy"
                 : 'expr_p2));
# 1287 "refinements/Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : int)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 274 "refinements/Parser.fsy"
                                                           expr_of_int  _1 
                   )
# 274 "refinements/Parser.fsy"
                 : 'expr_p2));
# 1298 "refinements/Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 275 "refinements/Parser.fsy"
                                                           expr_of_list [] 
                   )
# 275 "refinements/Parser.fsy"
                 : 'expr_p2));
# 1308 "refinements/Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr_semi)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 276 "refinements/Parser.fsy"
                                                           expr_of_list _2 
                   )
# 276 "refinements/Parser.fsy"
                 : 'expr_p2));
# 1319 "refinements/Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : int)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr_p2)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 279 "refinements/Parser.fsy"
                                                              HC.eproj(_1, _2) 
                   )
# 279 "refinements/Parser.fsy"
                 : 'expr_p1));
# 1331 "refinements/Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'ctor_chain)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 280 "refinements/Parser.fsy"
                                                        _1            
                   )
# 280 "refinements/Parser.fsy"
                 : 'expr_p1));
# 1342 "refinements/Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'app_chain)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 281 "refinements/Parser.fsy"
                                                        _1            
                   )
# 281 "refinements/Parser.fsy"
                 : 'expr_p1));
# 1353 "refinements/Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'arg)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 282 "refinements/Parser.fsy"
                                                        HC.efun {argl=fst _2; arg_type=snd _2; body=_4}
                   )
# 282 "refinements/Parser.fsy"
                 : 'expr_p1));
# 1365 "refinements/Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'branches)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 283 "refinements/Parser.fsy"
                                                           HC.ematch(_2, _4)  
                   )
# 283 "refinements/Parser.fsy"
                 : 'expr_p1));
# 1377 "refinements/Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr_p2)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr_p2)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 286 "refinements/Parser.fsy"
                                               HC.eapp(_1, _2) 
                   )
# 286 "refinements/Parser.fsy"
                 : 'app_chain));
# 1389 "refinements/Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'app_chain)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr_p2)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 287 "refinements/Parser.fsy"
                                            HC.eapp(_1, _2) 
                   )
# 287 "refinements/Parser.fsy"
                 : 'app_chain));
# 1401 "refinements/Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 289 "refinements/Parser.fsy"
                                               HC.ector(_1, HC.ector(_2, HC.eunit))
                   )
# 289 "refinements/Parser.fsy"
                 : 'ctor_chain));
# 1413 "refinements/Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr_p2)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 290 "refinements/Parser.fsy"
                                               HC.ector(_1, _2)
                   )
# 290 "refinements/Parser.fsy"
                 : 'ctor_chain));
# 1425 "refinements/Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'ctor_chain)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 291 "refinements/Parser.fsy"
                                            HC.ector(_1, _2)
                   )
# 291 "refinements/Parser.fsy"
                 : 'ctor_chain));
# 1437 "refinements/Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'branches)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'branch)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 295 "refinements/Parser.fsy"
                                                  _2 :: _1 
                   )
# 295 "refinements/Parser.fsy"
                 : 'branches));
# 1449 "refinements/Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 296 "refinements/Parser.fsy"
                                               []       
                   )
# 296 "refinements/Parser.fsy"
                 : 'branches));
# 1459 "refinements/Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 298 "refinements/Parser.fsy"
                                                     (_2, _3, _5)
                   )
# 298 "refinements/Parser.fsy"
                 : 'branch));
# 1472 "refinements/Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr_comma)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 302 "refinements/Parser.fsy"
                                                   List.rev (_3 :: _1) 
                   )
# 302 "refinements/Parser.fsy"
                 : 'expr_comma_one));
# 1484 "refinements/Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 306 "refinements/Parser.fsy"
                                                   [_1]        
                   )
# 306 "refinements/Parser.fsy"
                 : 'expr_comma));
# 1495 "refinements/Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr_comma)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 307 "refinements/Parser.fsy"
                                                _3 :: _1    
                   )
# 307 "refinements/Parser.fsy"
                 : 'expr_comma));
# 1507 "refinements/Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr_semi2)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 311 "refinements/Parser.fsy"
                                                   List.rev _1 
                   )
# 311 "refinements/Parser.fsy"
                 : 'expr_semi));
# 1518 "refinements/Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 313 "refinements/Parser.fsy"
                                                   [_1]        
                   )
# 313 "refinements/Parser.fsy"
                 : 'expr_semi2));
# 1529 "refinements/Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr_semi2)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 314 "refinements/Parser.fsy"
                                                _3 :: _1    
                   )
# 314 "refinements/Parser.fsy"
                 : 'expr_semi2));
|]
# 1542 "refinements/Parser.fs"
let tables () : Microsoft.FSharp.Text.Parsing.Tables<_> = 
  { reductions= _fsyacc_reductions ();
    endOfInputTag = _fsyacc_endOfInputTag;
    tagOfToken = tagOfToken;
    dataOfToken = _fsyacc_dataOfToken; 
    actionTableElements = _fsyacc_actionTableElements;
    actionTableRowOffsets = _fsyacc_actionTableRowOffsets;
    stateToProdIdxsTableElements = _fsyacc_stateToProdIdxsTableElements;
    stateToProdIdxsTableRowOffsets = _fsyacc_stateToProdIdxsTableRowOffsets;
    reductionSymbolCounts = _fsyacc_reductionSymbolCounts;
    immediateActions = _fsyacc_immediateActions;
    gotos = _fsyacc_gotos;
    sparseGotoTableRowOffsets = _fsyacc_sparseGotoTableRowOffsets;
    tagOfErrorTerminal = _fsyacc_tagOfErrorTerminal;
    parseError = (fun (ctxt:Microsoft.FSharp.Text.Parsing.ParseErrorContext<_>) -> 
                              match parse_error_rich with 
                              | Some f -> f ctxt
                              | None -> parse_error ctxt.Message);
    numTerminals = 40;
    productionToNonTerminalTable = _fsyacc_productionToNonTerminalTable  }
let engine lexer lexbuf startState = (tables ()).Interpret(lexer, lexbuf, startState)
let start lexer lexbuf : Synth.Lang.synth_problem =
    Microsoft.FSharp.Core.Operators.unbox ((tables ()).Interpret(lexer, lexbuf, 0))
